Sat Nov 29 01:09:35 1997  unknown  <gjb@cs.washington.edu>

	* menu.c, menu.h, menus.c, menus.h: Removed since menuitem.c,
	menuitem.h, scwmmenu.c, scwmmenu.h, drawmenu.c, drawmenu.h replace
	the functionality these had.  Binding stuff got moved into
	binding.c

	* Picture.c, Picture.h: Removed these, since image.c, image.h
	replaces their functionality.

Fri Nov 28 23:58:30 1997  Greg J. Badros  <gjb@cs.washington.edu>

	* image.c: Added full_name scm string to track where the image
	actually got loaded from.  Use that as it's print string, as I
	think a unique identifier makes more sense than just what the user
	gave to make-image.  image-properties still returns the "name" as
	the car of the list it returns.

	* Move GC_MARK_SCM_IF_SET into scwm.h, and use in image.c.

Fri Nov 28 23:32:18 1997  Greg J. Badros  <gjb@cs.washington.edu>

	* image.c: Adding warnings throughout the imaging code.  I know
 	we've not decided how best to handle warnings, but that doesn't
 	mean that they shouldn't go in the code.
  	scwm_msg(WARN,__FUNCTION__, <msg>) works great, and will be easy
 	to find later when we do something different; Added a note about
 	not finding the max path length every time through... can we do
 	stuff when image-load-path changes? Added a .xpm.gz loader -- does
 	this work?

	* image.h: Added SAFE_IMAGE(x)

	* Makefile.in: Generalize the .x building better; not just for
	image.x any longer

	* Use image.h, not Picture.h for almost everything (except old menu
	code)

	* Use STREQ throughout instead of !strcmp -- I've never liked the
 	latter idiom because of the "!" seems to say not equal

	* Picture.c,Picture.h,paths.c,paths.h: Move szPicturePath into
 	paths.c as szImagePath, though it'll go away real soon now.

	* drawmenu.c: tweak up some of the spacing constants, use images,
 	not pictures. Adding underlining of shortcut keys.  Made
 	PaintMenuItem be external, so that scwmmenu can use it on expose
 	events.

	* icons.c: Removed some legacy code hidden in comments

	* menuitem.c, menuitem.h: Use new GC_MARK_SCM_IF_SET abstraction;
	use images, not pictures. Added menuitem-properties primitive,
	added init_menuitem, use guile-snarf. Added chShortcut,
	ichShortcutOffset, imiim, pmd to MenuItemInMenu objects.  Added
	SAFE_SCWM_MENUITEM caster 

	* smprocs.c: update set-image-path!, make-menu-item

	* scwm.c: Added setlinebuf calls for stderr and stdout to ease
 	debugging -- perhaps this is a portability problem.  Also may be
 	an efficiency problem later on, but for now it's the right
	thing. Added new init_... calls

	* scwm.h: Added UNSET_SCM(x) abstraction for variable type checking

	* scwmmenu.c: Use GC_MARK_SCM_IF_SET; use images, not pictures;
	make NewPchKeysUsed store state in the MenuItemInMenu-s; added
	menu-properties primitive; use UNSET_SCM throughout; Got
	hover/unhover hooks working, got popup window behaviour working;
	added numerous menu utility functions; Do highlighting of current
	item properly; use guile-snarf

	* scwmmenu.h: Added SAFE_SCWMMENU; use images, not pictures

	* string_token.c: Added IchIgnoreCaseInSz, and noted that stripcpy
 	can go away when old menuing code goes away

	* xmisc.c: DrawImage now takes a scwm_image * instead of a Picture *


Thu Nov 27 23:37:33 1997  Greg J. Badros  <gjb@cs.washington.edu>

	* Augment all OBJECT_P-s with SCM_NIMP(X) test to make sure they
	are safe and remove a ton of duplicated code throughout the whole
	system;  we should *NOT* test, e.g., SCM_NIMP(X) && COLOR_P(X) any
	longer, and the color_p function is simplified to just translating
	between a C bool and a guile boole

	* Added module-interface.h, and include it throughout as needed.

	* icons.c, icons.h: Removed reliance on Picture.[ch].  In the process,
	changed when icon windows get created to when the window is added,
	not when the icon is first used. THIS PROBLEM BROKE SOME ICON
	STUFF, but brief testing shows that things generally work, modulo
	the stuff w.r.t. increased flexibility of user pixmap
	overriding... Also removed some newly dead code there.

	* binding.c: fixed grab key from all window bug -- was grabbing
	keys from all windows even if C_WINDOW bit was not set, and
	unbind-mouse bug -- was not permitting numbers for the button as
	bind-mouse did. Thanks to Oleg Tihonov
	<oleg@benetnash.ffke-campus.mipt.ru> for reporting the problems.
	Also caught a small memory leak.

	* menu.h decor.h: Move #include-s *before* the EXTERN #define,
	since it could cause big problems to include a header file that
	redefined EXTERN before the rest of the .h file

	* font.h, drawmenu.c: don't use SAFE_FONTP, since FONTP now is safe

	* events.c: Replace gh_standard_handler -- bug in guile (?) is
	stopping my new scwm_error_handler from being used to evaluate
	SCWM_PROPERTY messages, but this seems to work and gives slightly
	more useful error messages.  Also removed some szIconFile
	references, and use sw->icon_image, not sw->picIcon

	* image.c: Rename image?-new to image?, added image_properties,
	check depth attribute return value and print a message if it looks
	like Xpm is screwing up (it does for me), added
	make_image_from_pixmap for internal C code.

	* window.c: added window-from-window-id function (needed for
	autoraise, broadcast stuff)
	

Wed Nov 26 11:07:51 1997  Greg Badros  <gjb@cs.washington.edu>

	* Do not define away the Broadcast{,Name,Config} functions -- call
 	the ones in module-interface.c, include module-types.h where
 	needed

	* Makefile.in: Stop using $(SHELL) -ec to build dependencies as
 	quoting becomes a burden giving the new complex setting of
 	CFLAGS.... not sure what the ramifications of this are, and I
 	still appear to be getting problems building dependences

	* borders.c: Changed check that had an extra "!" and was causing a
 	dereference of an image that was SCM_BOOL_F.  Fixes my core dump
 	problem.

	* image.c: Rename make-image-new to make-image, and change old
 	make-image back to make-picture (to ultimately be removed)

	* move.c: Remove overshooting target bug in AnimatedWindowShading
	by just stopping once we're at least 100% to the target.

	* scwm.c: init_scheme_string no longer const char *, just char *

Wed Nov 26 00:38:50 1997  Maciej Stachowiak  <mstachow@mit.edu>

	* image.c: Added support for registering a "default" image loader
 	which is used if no loader is registered for the file's extension
 	or if the registered image loader fails.

Tue Nov 25 16:37:01 1997  Maciej Stachowiak  <mstachow@mit.edu>

	* face.c, face.h: Use scheme image objects instead of Picture
 	structs for all images in faces; add mark_face which appropriately
 	gc-marks any referenced images.

	scmtypes.c: Use the new marker function for faces.

	add_window.c: Removed all code that tries to load the mini-icon
 	from a filename, and change AddWindow to expect the tiled pixmap
 	for the border, if any, to be a Scheme image object.

	screen.h: Replaced the p member of the u union in the ButtonFace
 	struct with an image member which is an SCM expected to hold
 	SCM_BOOL_F or an image object.

	scwm.h: Replaced picMiniIcon and szMiniIconFile fields in the
 	ScwmWindow struct with a mini_icon_image field which is an SCM
 	expected to hold SCM_BOOL_F or an image object.

	borders.c: Draw images specified by button/titlebar/border faces
	(including mini-icons) knowing that they are now Scheme image
 	objects.

	window.c: Changed set-mini-icon! to expect and use image objects
 	rather than picture objects. Changed set-icon! to make some effort
 	to remember the icon if it is turned off; this needs more work
 	however.

	* scwm.c: Initialize the new image code.

	* image.c, image.h: Added the init_image_colormap() function; the
 	colormap for images needs to be initialized separately and later
 	than the image code itself; also protect image_loader_hash_table
 	from gc.

Mon Nov 24 14:00:49 1997  Greg Badros  <gjb@cs.washington.edu>

	* Makefile.in: Fixed some dependence problems using image.x file.
  	Added rule to build init_scheme_string.c from
 	../scheme/minimal.scm and link that in with the binary

	* scwm.c: SetRCDefaults() now uses the extern char
	*init_scheme_string from the .c file that the makefile builds.

Mon Nov 24 00:07:05 1997  Maciej Stachowiak  <mstachow@mit.edu>

	* Makefile.in: Compile image.c; use guile-snarf on it as well to
 	create image.x.

Sun Nov 23 23:59:00 1997  Maciej Stachowiak  <mstachow@mit.edu>

	* image.c: Updated to be able to at least compile; experimentally
 	use the SCM_PROC macro and the guile-snarf program to register new
 	procedures.

Sun Nov 23 17:08:02 1997  Greg Badros  <gjb@cs.washington.edu>

	* xmisc.[hc]: added DrawImage to abstract drawing of both pixmaps
	and bitmaps.  Perhaps this should be in the new Image.[ch], but
	I'm holding off until that code is in use.

	* drawmenu.[ch]: rework much of the drawing code so that it now
	looks fairly reasonable.  Still need more item spacing, etc., but
	there are more important things to handle before polishing the
	look.

	* face.c, drawmenu.c, scwmmenu.c: remove the checking of
	HAVE_GH_LENGTH -- do this only in scwm.h

	* scwm.h: add above check.

	* menuitem.h: reduce the number of fields in MenuItemInMenu -- use
	more per-menu drawing information in MenuDrawingInfo struct

	* scwmmenu.c: Don't trust drawing code to set correct event mask--
	do it here instead
		

Sun Nov 23 01:42:37 1997  Greg J. Badros  <gjb@cs.washington.edu>

	* menu-item.h: added some more fields to MenuItemInMenu

	* scwmmenu.c: lots of new code to get drawing of the new menus and
 	popping up to work.  Added popup_menu(). Implementation is not
 	complete.

	* scwmmenu.h:  Added MenuDrawingInfo struct for caching
	information that the drawing code might use.  Changes to the
	DynamicMenu structu
	
	* scmprocs.c: added popup-menu function, for the new scwm menu
	code

	* scwm.c: call the new init_scwm_menu() [does nothing now]
	
	* menu-test.scm: Added for testing new menu code

	* colormaps.h: Added, for colormaps.c protos;  use where needed
	throughout;  pull these out of misc.h

	* colormaps.c: fixed protos to be (void) not ()

	* font.[ch]: use FONT_IMPLEMENTATION for file-globals, added
	SAFE_FONTP (perhaps this should be done for all the OBJECTP
	macros)

	* drawmenu.[ch]: Added, for drawing-only (look) code;  partially
	complete implementation of the fvwm menu look

	* xmisc.[ch]: Added for X/Xlib utility functions

	* Makefile.in: updated for above additions


Sun Nov 23 02:47:22 1997  Maciej Stachowiak  <mstachow@mit.edu>

	* image.c: Rewrite of the image code to support: hashed image
 	cache, garbage collection of all images including ones generated
 	by C code, eq?-ness for multiple loads of the same image, ability
 	to register additional image loaders, and image path in the
 	distinguished Scheme variable image-load-path which is interpreted
 	as containing a list of path strings. Basically, everything has
 	been totally rewritten except the low-level image loading calls,
 	which can't be written much differently. This code is not yet
 	integrated into the rest of the program or the build process.

Mon Nov 17 21:07:44 1997  Maciej Stachowiak  <mstachow@mit.edu>

	* string_token.h: Only give prototypes for strcasecmp and
 	strncasecmp if they are not already defined.

	* string_token.c: Only define strcasecmp and strncasecmp if they
 	are not already available.

	* system.c: Changed sleep_ms to use usleep() where available,
 	otherwise fall back to select().

Sat Nov 15 00:18:22 1997  Greg J. Badros  <gjb@cs.washington.edu>

	* menuitem.[ch]:  Added;  the beginnings of an scm object for menu
	items to replace those in menu.[ch]

	* scwmmenu.[ch]: Added; the beginnings of an scm object for menus
	to replace those in menu.[ch]

	* Makefile.in: Include above files in build.

	* system.h: Include config.h and #ifdef out get_hostname prototype
 	if we have the function -- patch from Harald Meland
 	<Harald.Meland@usit.uio.no>

	* gjb.scwmrc: add some commented out test code for new menu items
	and scwm menus.

Wed Nov 12 22:57:31 1997  Greg J. Badros  <gjb@cs.washington.edu>

	* window.c: Added current-window-with-{pointer,focus} functions.
	Abstract out SwFromWindow() instead of using the more obscure
	XContext calls inline.  scmprocs.c updated for new functions.
	Also have a place-holder for select-window-interactively, but it
	does nothing right now.

Wed Nov 12 15:41:28 1997  Maciej Stachowiak  <mstachow@mit.edu>

	* window.c: Fixed the remaining problems with DeferExecution - the
 	event it reads needs to be copied to the global event struct
 	before calling DispatchEvent(). 

	* scwm.c: Use getopt_long when available for argument parsing,
 	otherwise accept both long and short options by
 	hand-parsing. Patch from James LewisMoss <dres@dimensional.com>,
 	slightly reformated, and changed to provide both long and short
 	options for everything.

Wed Nov 12 00:36:21 1997  Greg J. Badros  <gjb@cs.washington.edu>
	* events.c (HandlePropertyNotify): don't resize shaded windows;
	this improves upon my prior bug fix which had an unfortunate
	timing dependence that I only caught after more testing.
	This should be a reliable fix.

	* Abstracted out SHADED_P, SET_SHADED and SET_UNSHADED, since it's
 	a gross field -- the shaded bit just gets thrown into the buttons
 	field's high-order bit; this should be fixed but not now.

Tue Nov 11 22:14:02 1997  Greg J. Badros  <gjb@cs.washington.edu>

	* scwm.c: Fix bug with -f "" core dumping, fixed other bugs nearby
	with argument handling.

	* binding.c: Fixed unbind_mouse to respect the context, and ungrab
	the button;  Added A- and H- modifiers for Alt and Hyper,
	respectively.  Abstract out more code to use
	PchModifiersToModmask, and give better error messages.  All mouse
	button numbers to be specified as Mouse{1..3}, etc.; added a
	recapture when the number of buttons w/ defined actions changes.

	* misc.h: more cleanup

	* resize.h, add_window.h, borders.h, colors.h: added for their
	respective implementations, and moved protos out from misc.h

	* add_window.c, borders.c, colors.c : rearranged function order
 	and made local functions static; diffs are pretty unhelpful for
 	these

	* window.c: fixed bug introduced by cut and paste in last update;
	last fix still does not work for me.
	
	* Updated all includes for the above

Tue Nov 11 18:17:15 1997  Maciej Stachowiak  <mstachow@mit.edu>

	* window.c, window.h, scmprocs.c: Fixed the bug with selecting a
 	window for interactive-move from the root menu. The fix added
 	extra optional arguments to get-window and select-window.

Tue Nov 11 12:49:37 1997  Greg Badros  <gjb@cs.washington.edu>

	* binding.c: Use SCM_BOOL_F to report a bad key binding

	* icons.c: Fix bug wrt application icon window; Thanks Andrei
 	Tcherepanov <tandr@ptc.com>.

Mon Nov 10 20:41:21 1997  Greg J. Badros  <gjb@cs.washington.edu>

	* move.c, window.c: Fix AnimatedShadeWindow()'s handling of
 	windows so that it works with Emacs windows; bug was a result of
 	the resizing of the window causing an extra PropertyNotify event,
 	which caused scwm to think that the newly shaded window had been
 	resized, which then makes it call SetupFrame again and re-expose
 	part of the client window.

	* borders.c: cleaned up SetupFrame a bit while tracking down the
	above bug.  Even found an old bug in fvwm2 (of no obvious
	consequence, though).

Mon Nov 10 10:06:59 1997  Greg Badros  <gjb@cs.washington.edu>

	* bindings.c: just warn when an unknown keysym is attempted to be
	bound, do not die;  uncommented uses in gjb.scwmrc of the
	only-sometimes-available keysyms KP_XX since now they will only
	produce a warning.

Mon Nov 10 05:17:36 1997  Maciej Stachowiak  <mstachow@mit.edu>

	* decor.c, face.c, Picture.c, system.c, ICCCM.c, Grab.c, 
	string_token.c: Added copyright notices.

	* errors.c, errors.h, window.c: Signal an error when the image
 	can't be loaded in set-icon!
	
	* scmprocs.c: Renamed make-picture to make-image and
 	set-picture-path! to set-image-path! (externally only for now,
 	will change all references in C code soon).

	* miscprocs.c, miscprocs.h, scmprocs.c : Renamed set-xor-value! to
 	set-rubber-band-mask!

Mon Nov 10 00:13:29 1997  Greg J. Badros  <gjb@cs.washington.edu>

	* move.c: wrote AnimatedShadeWindow(), similar to
	AnimatedMoveWindow(); visually not quite perfect, but very nice.
	Inspired by AfterStep's animation (did not look at its code,
	though).

	* move.h: Added this -- protos from move.c, removed from misc.h
	
	* window.c: give {un-,}window-shade another optional argument -- a
	boolean saying whether we want the (un-)window-shade-ing to be done
	animatedly

	* borders.c: some general cleanup of formatting due to
	automatically removing the #ifdef-s

	* events.c: removed unused macros MAX_NAME_LEN, MAX_ICON_NAME_LEN
		
Sun Nov  9 14:11:47 1997  Greg Badros  <gjb@cs.washington.edu>

	* Picture.c, window.c: Handle memory management of strings passed
 	to CachePicture better; gh_scm2newstr()-allocated strings must be
 	freed, so we give them a name.  LoadPicture uses strdup to get its
 	own copy of the filename --this was a bug before, as it might have
 	tried to free a local variable, or might have used memory that was
 	owned
 	(and later modified) by someone else.; free_picture() now calls
 	DestroyPicture before free-ing the scheme object.

	* system.c: Added note about char * return value in findFile --
 	that needs to be freed, too.

Sun Nov  9 07:15:45 1997  Maciej Stachowiak  <mstachow@mit.edu>

	* window.c: Make set-icon! and set-mini-icon! able to take strings
 	as well as pictures to be consistent with the handling of colors
 	and fonts by other functions.
	
Sun Nov  9 07:15:45 1997  Maciej Stachowiak  <mstachow@mit.edu>

	* face.c: Restore the calls to redraw_borders, since it is now
 	fixed.

	* util.c: Fixed the bug in redraw_borders - it turned out not to
 	be a problem with SetBorderX at all, but rather with some code I
 	mindlessly copied.

	* util.c: Fixed redraw_borders so that it works for now (but is
 	somewhat unattractive).

	* Picture.c, Picture.h, scmtypes.c: Removed mark_picture;
 	scm_mark0 can be used as the marker when no sub-objects need to be
 	marked.

Sun Nov  9 00:00:15 1997  Greg J. Badros  <gjb@cs.washington.edu>

	* icons.c: rearranged and improved the interface specification;
	non-public functions are now static

	* icons.h: added, pulled relevant protos out of misc.h; #include
	it as appropriate

	* menus.c: make LEFT_MENUS be the single version, remove those
	conditionals (fvwm2 menuing code was really broken w/o this
	option); also removed FindPopup() function
	
	* removed #include "module.h" from all files; remove module.h

	* removed #include "parse.h" from lots of files; still not
	completely unneeded yet

	* scwm.h reduced the redundancy in the ScwmWindow's icon handling; now
	picIcon has all the pixmap information about the icon, instead of
	having everything at the top level of the struct; use macros from
	icons.h to make accessing the new fields not so bad

	* Fixed the bug that prevented the current window from getting the
	focus initially at startup (long-time fvwm2 bug,
	too). CoerceEnterNotifyOnCurrentWindow() is added to misc.c

	* misc.h Still more clean up

	* Fixed the bug that prevented mini-icons from being redrawn once
	they are changed

	* string_token.c: Remove GetNextToken() function; last use of it
 	was obliterated; fixed protos in header to checking MISSING_STRCASECMP

	* Renamed lots of ScwmWindow *tmp_win arguments to *sw.  My
	pet-peeve about variable names is tmp -- all auto variables and
	formals are tmp, so it's redundant.  In this case the short
	Hungarian tag is really nice!

	* Rename the global "Tmp_win" to swCurrent; Tmp_win was a
 	  *terrible* name!; fixed extern refs that use this


Sat Nov  8 20:18:26 1997  Greg J. Badros  <gjb@cs.washington.edu>

	* Added picture object; use (make-picture "pic-filename")

	* Combined PixmapPath and IconPath into one variable:
	szPicturePath;  set with set-picture-path!
	[set-{icon,pixmap}-path! have been removed]

	* Permit pixmap arguments to still be strings, but also allow
	pixmap objects.  Improved the caching and sharing is almost
	complete, so little memory is wasted

	* Cleaned up GetXPMFile() to use CachePicture code; these changes
	still are making scwm smaller!  We're under 20klines of commented
	source!

Sat Nov  8 14:54:59 1997  Greg J. Badros  <gjb@cs.washington.edu>

	* misc.[ch]: Lots of cleanup
	
	* builtins.c: removed from the build

	* Started pixmap/picture re-implementation

Thu Nov  6 10:59:36 1997  Maciej Stachowiak  <mstachow@mit.edu>

	* window.c: Change set-mini-icon! to load the mini-icon file when
 	appropriate. This makes the #:mini-icon style option work.

	* paths.c, Makefile.in, envvar.c: Stop using the code in envvar.c
 	for environment variable expansion in paths and remove it from the
 	build process as well as from the repository.

Wed Nov  5 09:24:21 1997  Maciej Stachowiak  <mstachow@mit.edu>

	* wildcard.c, wildcard.h: Removed because they are not used any
 	more.

	* Makefile.in: Remove wildcard.c from the build process, it's not
 	used any more.

	* add_window.c: Commented out the part of LookInList that scans
 	the style list - there is no style list created anywhere in the
 	code any more so that part of it was never getting executed.

	* miscprocs.c: Change wait-for-window to take a predicate rather
 	than a name string, so we don't have to use matchWildcards. You
 	can pass (wildcard-matcher NAME) to get the old effect (and for
 	that matter, you could just bind the 'new-window event, so
 	wait-for-window will go away entirely sometime).

	* builtins.c: Deleted all the Decor stuff, it is not needed any
 	more.

	* window.c: Added a check that an object passed to a window
 	operation is non-immediate (using the SCM_NIMP macro) before
 	checking if it is a window (using WINDOWP). 

Tue Nov  4 11:57:37 1997  Greg Badros  <gjb@cs.washington.edu>

	* Lots of code cleanup;  integrate the few functions from libs/*
	into the scwm directory. Removed MS_DELETION_COMMENT blocks.
	Added some GJB_DELETION_COMMENT blocks for newly obsoleted code.

Tue Nov  4 13:45:31 1997  Maciej Stachowiak  <mstachow@mit.edu>

	* face.c, face.h: Added scheme-level procedures set-title-face!,
 	set-button-face!, set-button-mwm-flag! and
 	set-border-face!. Changing the border, button and title styles
 	should now be possible, although a higher-level interface still
 	needs to be written. Also, redraws are not done immediately for
 	anything but set-title-face!, because of a bug in
 	SetBorderX. Added appropriate prototypes.

	* util.c, util.h: New function redraw_borders to redraw borders of
 	all windows associated with a decor. However, it doesn't work
 	right now, as SetBorderX appears to be buggy. Added prototype for
 	redraw_borders.
	
Mon Nov  3 11:20:17 1997  Maciej Stachowiak  <mstachow@mit.edu>

	* Further changes that should bring things really close to user
 	face handling; only set-button-face! and friends need to be
 	written now.

	scwm.c: Changes to initialization of the default decor, and
 	decor initialization in general to support the creation of the
 	initial button, border and title faces as Scheme objects
 	
	face.c, face.h: Added creation of the default button, title and
 	border faces as Scheme bjects in the variables
 	default_titlebar_face, default_rbuton_face[],
 	default_lbutton_face[] and default_border_face.

	decor.c, decor.h: Added mark_decor, a new gc marker function that
 	marks all of the face objects associated with a decor object, so
 	garbage collection is happy. Also made make-decor initialize the
 	button, title and border faces from the defaults.

	* colors.c: Changed shadow handling in GetShadow slightly; don't
 	mod by %0xffff any more so very bright colors are not
 	automatically shadowed with black.

Sun Nov  2 00:20:29 1997  Maciej Stachowiak  <mstachow@mit.edu>

	* add_window.c, borders.c, builtins.c, face.c, functions.c,
 	screen.h, scwm.c: Made changes throughout so that ButtonFace
 	structs are only ever used through pointers; this prepares for the
 	change of using scheme face objects everywhere, which in turn
 	should make Scheme access to button, border and title syles
 	feasible.

	* Makefile.in: Added face.c to the build process.
	
	* scmprocs.c, scmtypes.c, scwm.c, screen.h: Uodated appropriately
 	for face-related procedures, types, initialization, and data

	* face.c, face.h: New files, a start on implementing fvwm's
 	{Button,Border,Title} Styles. For now, face objects (the back end
 	behind fvwm's assorted style commands) can only be created (using
 	make-face) and print and garbage-collect properly. They cannot yet
 	be associated with buttons, titles or borders.
	
Sat Nov  1 04:44:44 1997  Maciej Stachowiak  <mstachow@mit.edu>

	* events.c: Changed return values of send-button-press and
 	send-key-press from SCM_UNDEFINED to SCM_UNSPECIFIED.

Wed Oct 29 08:41:01 1997  Maciej Stachowiak  <mstachow@mit.edu>

	* scwm.c: Fixed silly bugs in the implementation of the -e and -f
 	options.

Mon Oct 27 06:53:54 1997  Maciej Stachowiak  <mstachow@mit.edu>

	* miscprocs.c: Added support for
 	set-smart-placement-is-really-smart!,
 	set-click-to-focus-passes-click!, set-click-to-focus-raises! and
 	set-mouse-focus-click-raises!. These are obscure, but being able
 	to have click-to-focus without raising the window is nice.

	* events.c: When not raising on click-to-focus, don't raise
 	regardless of where the click comes from.

Sun Oct 26 01:05:27 1997  Maciej Stachowiak  <mstachow@mit.edu>

	* color.c, decor.c, font.c, menu.c, window.c: changed all of the
 	printer functions, print_color, print_decor, print_font,
 	print_menu and print_window to be able to use either the old
	guile printing functions or the new ones.

	* window.c: Use the correct one of gh_vref or gh_vector_ref,
 	depending on what we have.

Sat Oct 25 23:15:40 1997 Greg J. Badros  <gjb@cs.washington.edu>

	* Added send-button-press for synthetic keypress events like GWM

Sun Oct 26 01:05:27 1997  Maciej Stachowiak  <mstachow@mit.edu>

	* scmprocs.c: Eliminate use of gh_new_procedureX_X; instead use
 	gh_new_procedure throughout, since gh_new_procedureX_X will be
 	going away in guile.

Sat Oct 25 21:42:36 1997  Greg J. Badros  <gjb@cs.washington.edu>

	* Added extra args to do animated moves to (move-to), also permit
	equivalent movement of the pointer as an option;  added
	AnimatedMoveWindow() to support this, and have it recognize
	"animation-ms-delay" variable; also wrote (set-animation! ..) to
	set the other animation parameters

	* Fix (get-window)/DeferExecution bug

	* Rename sleep_a_little to sleep_ms(), and take ms, not microsecs

	* Updated BUGS, TODO
	

Fri Oct 24 23:31:54 1997  Greg J. Badros  <gjb@cs.washington.edu>

	* Added (unbind-key), (unbind-mouse)

	* Reindent all of the source using indent

	* Clean up all the code so it builds with -Wall, make that the
	default.

	* Fix bugs in key handling -- required a recapture for
	new bindings to be noticed

	* Added gjb.scwmrc, a more full-featured configuration

	* Updated BUGS, added NEEDED (list of features missing)

1997-10-24  Jens-Ulrik Holger Petersen  <petersen@kurims.kyoto-u.ac.jp>

	* Makefile.in (mostlyclean): New target.
	(LIBS): Use relative directory to "libs/" for VPATH.
	(INCLUDES): Ditto for "include/".

	* deskpage.c (desk_size): Make result consistent with
	`set-desk-size!'. 

Thu Oct 23 19:54:16 1997  Maciej Stachowiak  <mstachow@mit.edu>

	* Added support for decors as Scheme objects. This includes the
	following changes:

	decor.c, decor.h: new files which implement make-decor, default-decor,
	current-decor, set-current-decor! and set-window-decor!

	scwm.c: wrap the default decor as a nice Scheme object.

	window.c: protect the decor attached to a window from garbage
 	collection in the marker for window.

	scmtypes.c: register the decor type.

	scmprocs.c: register the decor procedures.

	Makefile.in: add decor.c to the build process.

Tue Oct 21 21:03:03 1997  Maciej Stachowiak  <mstachow@mit.edu>

	* window.c: Don't attempt to redraw the border in
 	set-mwm-buttons!; it is now called only on 'new-window-hint, not
 	'new-window because the MWM_BUTTON_FLAG bit clashes with the
 	MAXIMIZE bit.

Mon Oct 20 15:40:48 1997  Maciej Stachowiak  <mstachow@mit.edu>

	* window.c: Changed set-mwm-buttons! to actually set the MWMButton
 	flag, not the MWMBorder flag.

Sat Oct 18 00:04:40 1997  Maciej Stachowiak  <mstachow@mit.edu>

	* miscprocs.c, miscprocs.h, scmprocs.c: Fixed scm-quit to take any
 	number of arguments. Patch from Mikael Djurfeldt <mdj@nada.kth.se>

	* virtual.c: Commented out: changeDesks_func, changeWindowsDesk,
 	scroll, goto_page_func.

	* Makefile.in: Removed bindings.c from the build process.

	* bindings.c: Commented this whole file with #if
 	MS_DELETION_COMMENT

	* window.c: Added another optional argument to get_window which
 	can be used to supress selecting a window.
	
	Added handling to the interactive-move procedure to start moves in
 	the right place.
	
	Changed show_titlebar and hide_titlebar to check the current state
 	of the titlebar before asking.
	
	Added set-lenience! procedure which sets the lenience flag.

Fri Oct 17 19:30:20 1997  Maciej Stachowiak  <mstachow@mit.edu>

	* window.h: Changed header for get_window.

	* scwm.h: Added macros for Broadcast, BroadcastConfig and
 	BroadcastName which do nothing.

	* scwm.c: Commented out several portions of unused code, including
 	the StartupStuff function.

	* windows.c: Commented the whole file; it is gone from the build
 	process.
	
	* style.c: Commented the whole file; it is gone from the build
 	process.

	* resize.c: Comented out the move_window function, which is no
 	longer used.
	
	* move.c: Comented out the move_window function, which is no
 	longer used, and fixed InteractiveMove so that moves are started
 	where the motion begins, not where the mouse cursor is when a move
 	is detected.

	* module.c: Commented out the whole file. It is no longer in the
 	build process so this is redundant, but it is a useful reminder.

	* misc.h: Commented out some of the prototypes for module
 	functions; several have been replaced by macros.

	* menus.c: events.c: Commented out some no longer used code with
 	pairs of "#ifdef MS_DELETION_COMMENT" and "#endif /*
 	MS_DELETION_COMMENT */" for easy removal later. Also explicitly
 	undefined MS_DELETION_COMMENT at the top of the file just in
 	case. One deletion is in HandleKey and HandleButton, where
 	ExecuteFunction used to be called. It is no longer possible for
 	flow control to reach this point, and ExecuteFunction no longer
 	exists. Also, the DestroyMenu function was removed.

	* functions.c: Commented out some no longer used code with pairs
 	of "#ifdef MS_DELETION_COMMENT" and "#endif /* MS_DELETION_COMMENT
 	*/" for easy removal later. Also explicitly undefined
 	MS_DELETION_COMMENT at the top of the file just in case. The
 	function ExecuteFunction and most entries in the func_config array
 	were removed.

	* focus.c: Changed SetFocus to correctly handle windows with a
 	focus style of 'none.

	* events.c: Commented out some no longer used code with pairs of
 	"#ifdef MS_DELETION_COMMENT" and "#endif /* MS_DELETION_COMMENT
 	*/" for easy removal later. Also explicitly undefined
 	MS_DELETION_COMMENT at the top of the file just in case. The two
 	deletions are in HandleKey and HandleButton, where ExecuteFunction
 	used to be called. It is no longer possible for flow control to
 	reach those points, and ExecuteFunction no longer exists.

	* complex.c: Commented out a lot of no longer used code with
        pairs of "#ifdef MS_DELETION_COMMENT" and "#endif /*
        MS_DELETION_COMMENT */" for easy removal later. Also explicitly
        undefined MS_DELETION_COMMENT at the top of the file just in
        case. Functions removed are:

        ComplexFunction,expand

	
	* builtins.c: Commented out a lot of no longer used code with
 	pairs of "#ifdef MS_DELETION_COMMENT" and "#endif /*
 	MS_DELETION_COMMENT */" for easy removal later. Also explicitly
 	undefined MS_DELETION_COMMENT at the top of the file just in
 	case. Functions and variables removed are:
	
	Maximize, WindowShade, Bell, add_item_to_menu, add_another_item,
 	destroy_menu, add_item_to_func, movecursor, iconify_function,
 	raise_function, lower_function, destroy_function, delete_function,
 	close_function, restart_function, exec_setup, strerror,
 	exec_function, refresh_function, refresh_win_function,
 	stick_function, wait_func, focus_func, warp_func, echo_func,
 	raiselower_func, SetEdgeScroll, SetEdgeResistance,
 	SetColormapFocus, SetClick, SetXOR, SetOpaque, SetDeskSize,
 	setPixmapPath, setIconPath, ModulePath, setModulePath, SetHiColor,
 	SetMenuStyle, LoadIconFont, LoadWindowFont, Circulate, PrevFunc,
 	NextFunc, NoneFunc, WindowIdFunc, module_zapper, Reborder.

	* Makefile.in: Added VPATH support.

	* add_window.c: AddWindow: eplace the call to resize_window with a
 	call to interactive_resize since resize_window is gone now.

	* binding.c: find_mouse_event_type: also store the location of the
 	original event for use by interactive moves.

Thu Oct 16 00:36:06 1997  Maciej Stachowiak  <mstachow@mit.edu>

	* Makefile.in: Removed read.c, module.c, windows.c and style.c
 	from the build process.

Tue Oct 14 01:13:59 1997  Maciej Stachowiak  <mstachow@mit.edu>

	* window.c: Added many new procedures to support window styles:
 	set-mwm-buttons!, set-mwm-border!, set-icon!, set-mini-icon!,
 	set-hint-override!, set-decorate-transient!, set-mwm-decor-hint!,
 	set-mwm-func-hint!, set-PPosition-hint!, set-OL-decor-hint!,
 	set-start-on-desk!, set-skip-mapping!

	* miscprocs.c: Added Scheme beep procedure which encapsulates
 	XBell.

	* borders.c: Added SetBorderX and redefined SetBorder in terms of
 	it to allow the border and title to be redrawn correcly on
 	interactive options changes.

	* add_window.c: Made several changes to AddWindow to support
 	Scheme callbacks upon the creation of a new window. Specifically,
 	run_new_window_hint_hook and run_new_window_hook are run at the
 	appropriate places.

	* binding.c: Added the 'new-window-hint event to take care of
	some issues relating to creating new windows and the time at
	which hint settings must be available.

Sun Oct  5 16:20:26 1997  Maciej Stachowiak  <mstachow@mit.edu>

	* window.c: Added many new procedures that should be useful for
 	both style purposes, and in some cases also for binding to
 	interactive commands.  The following have been added: keep-on-top,
 	un-keep-on-top, kept-on-top?, show-titlebar, hide-titlebar,
 	titlebar-shown?, normal-border, plain-border, border-normal?,
 	set-border-width!, stick-icon, unstick-icon, icon-sticky?,
 	set-icon-box!, set-window-focus!, set-window-colors! and
 	set-icon-title!.

	* binding.c: Added bind-event procedure to enable binding hooks
 	for special window manager events. Currently, only the 'new-window
 	event is implemented. Also added the run_new_window_hook()
 	procedure for C to let the code that initially decorates a window
 	do this.

	* add_window.c: AddWindow() - changed to call the new window
 	hook. This will enable handling of style options on window
 	startup.

	* events.c: Changed handling of MapNotify event to deal properly
 	with windows that start out iconified.

Wed Oct  1 21:47:36 1997  Maciej Stachowiak  <mstachow@mit.edu>

	* window.c: Added keep-on-top, un-keep-on-top, and kept-on-top?

Wed Sep 24 16:46:22 1997  Maciej Stachowiak  <mstachow@mit.edu>

	* binding.c,color.c,font.c,miscprocs.c,paths.c,window.c: Changed
 	deferring and allowing of ints to hopefully make things
 	thread-safe.

Mon Sep 22 00:09:43 1997  Maciej Stachowiak  <mstachow@mit.edu>

	* binding.c: Fixed nasty bug; previously forgot to gc-protect the
 	scheme procedure in a mouse binding,

	* binding.c: Corrected mouse bindings for buttons.

Sun Sep 21 09:22:26 1997  Maciej Stachowiak  <mstachow@mit.edu>

	* window.c: Implemented select-window. This means that window
 	operations off of root menus and such should be happy.

	* window.c: Renamed get-window-position, get-window-size,
 	get-window-id, get-window-desk, get-window-title and
 	get-window-list to window-position, window-size, window-id,
 	window-desk, window-title and list-all-windows. This change and
 	the ones to deskpage.c and miscproc.c are to provide "Schemier"
 	names before the current ones becomes at all established.

	* deskpage.c: Renamed get-display-size, get-desk-size,
 	get-viewport-position and get-current-desk to display-size,
 	desk-size, viewport-position and current-desk respectively.

	* miscprocs.c: Renamed get-pointer-position to pointer-position.

	* events.c: Added error handling to callbacks using
 	call_thunk_with_message_handler.

	* menus.c: Fixed the use of Scheme submenus, and also wrapped
 	callbacks to Scheme code in error handling using
 	call_thunk_with_message_handler.

	* events.c: Added error handling for key and mouse binding
 	callbacks.

	* menus.c: Added correct handling for submenus and error handling
 	for Scheme callbacks.

Fri Sep 19 00:34:05 1997  Maciej Stachowiak  <mstachow@mit.edu>

	* util.c: Added call_thunk_with_message_handler; this will enable
 	us to handle errors in callback code.

	* window.c: Added get-window-position, get-window-size,
 	get-window-id, get-window-desk, get-window-title and
 	get-window-list procedures. It should now be possible to get more
 	useful info on windows at runtime, and also write "window list"
 	type procedures in Scheme.	

Thu Sep 18 01:27:08 1997  Maciej Stachowiak  <mstachow@mit.edu>

	* menu.c: Added a marker for menu objects, so their thunks and
 	submenus don't get GC'd.

	* Imakefile: Added deskpage.c to the build process.

	* deskpage.c: New file. Adds procedures set-current-desk!
  	set-viewport-position!, set-edge-scroll!, set-edge-wrap!,
 	set-edge-resistance!, set-desk-size!, get-display-size,
 	get-desk-size, get-viewport-position, get-current-desk.

	* window.c: Added move-window-to-desk operation.

	* Imakefile: Added paths.c to build process.

	* paths.c: Added set-pixmap-path! and set-icon-path! functions.

Wed Sep 17 09:44:56 1997  Maciej Stachowiak  <mstachow@mit.edu>
	
	* miscprocs.c: Added get-pointer-position, move-pointer-to,
	recapture, restart and wait-for-window procedures.
	
