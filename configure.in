dnl Process this file with autoconf to produce a configure script.

dnl $Id$
dnl configure.in
dnl Autoconf script for SCWM
dnl (C) 1998 Maciej Stachowiak and Greg J. Badros


dnl ## Initialize autoconf ##
AC_INIT(scwm/scwm.c)
AC_PREREQ(2.4)

dnl ## Initialize automake ##
AM_INIT_AUTOMAKE(scwm, 0.7a)
AM_MAINTAINER_MODE
AM_CONFIG_HEADER(include/config.h)

dnl ## Checks for programs ##

AC_PROG_CC
dnl Ensure compiler sanity on pathological platforms
AC_ISC_POSIX
AC_AIX
AC_MINIX
dnl Use ANSI mode
AM_PROG_CC_STDC

AM_PROG_LIBTOOL

AC_CHECK_PROG(BUILD_GUILE, build-guile, yes, no)

if test $BUILD_GUILE = yes; then
  AC_MSG_CHECKING(whether build-guile works)
  if test x`build-guile link >/dev/null 2>&1 || echo no` = xno; then
    BUILD_GUILE=no
  fi
  AC_MSG_RESULT($BUILD_GUILE)
fi

dnl ## Find paths ##

AC_PATH_X
AC_PATH_XTRA
AM_PATH_LISPDIR

AC_ARG_WITH(lispdir,
[  --with-lispdir=DIR      Install Emacs Lisp files in DIR 
                          [PREFIX/share/site-lisp]],
[
	if test -n "$ac_prev"; then
  		AC_MSG_ERROR(missing argument to --with-lispdir)
	else
		AC_MSG_CHECKING(where .elc files should _reallly_ go)
		lispdir="${withval}"
		AC_MSG_RESULT("${lispdir}")
	fi
])

CASSOWARY_INCLUDES=""
CASSOWARY_LIBS=""

AC_ARG_WITH(cassowary,
[  --with-cassowary=DIR   Use Cassowary constraint solver from DIR ],
[
	if test -n "$ac_prev"; then
  		AC_MSG_ERROR(missing argument to --with-cassowary)
	else
		AC_DEFINE(USE_CASSOWARY)
		AC_DEFINE(CL_NO_TRACE)
		AC_MSG_CHECKING(where to expect to find cassowary headers and library)
		CASSOWARY_INCLUDES="-I${withval}"
		CASSOWARY_LIBS="-L${withval} -lcassowary-scwm"
		AC_MSG_RESULT("${withval}")

	fi
])

AC_SUBST(CASSOWARY_INCLUDES)
AC_SUBST(CASSOWARY_LIBS)


dnl ## Checks for libraries ##


dnl # X Window system checks #

if test "x$x_includes" = "x"; then
  x_includes="/usr/include"
fi

saved_cflags="$CFLAGS"
saved_ldflags="$LDFLAGS"

CFLAGS="$X_CFLAGS"
LDFLAGS="$X_LDFLAGS $X_LIBS"
orig_x_libs="$x_libs"

dnl # check for math library
AC_CHECK_LIB(m, main)

dnl # Check for the X11 library ##

AC_CHECK_LIB(X11, XOpenDisplay, x_libs="-lX11 $X_EXTRA_LIBS", no_x11_lib=yes, $X_EXTRA_LIBS)

dnl # Check for the Xext library (needed for Shape extention) ##
XEXT_LIB=""
AC_CHECK_LIB(Xext, XShapeCombineMask, [
XEXT_LIB="-lXext"
AC_DEFINE(HAVE_SHAPE)
], no_xext_lib=yes, $x_libs)

dnl # Check for the Xpm library #
XPM_LIB=""
AC_CHECK_LIB(Xpm, XpmReadFileToPixmap, [
XPM_LIB="-lXpm"
AC_DEFINE(HAVE_LIBXPM)
], , $x_libs)


x_cflags="$X_CFLAGS"
x_ldflags="$X_LDFLAGS $X_LIBS"

AC_SUBST(x_cflags)
AC_SUBST(x_includes)
AC_SUBST(x_ldflags)
AC_SUBST(x_libs)
AC_SUBST(XEXT_LIB)
AC_SUBST(XPM_LIB)
AC_SUBST(CASSOWARY_LIBS)
AC_SUBST(CASSOWARY_INCLUDES)

CFLAGS="$saved_cflags"
LDFLAGS="$saved_ldflags"

dnl # Check for readline library #


AC_CHECK_LIB(termcap, tgoto, [
	AC_CHECK_LIB(readline, readline, [
	READLINE_LIB="-lreadline -ltermcap"
	AC_DEFINE(HAVE_READLINE)
	AC_CHECK_LIB(readline, add_history, AC_DEFINE(HAVE_HISTORY),,"-ltermcap")
	], READLINE_LIB="", "-ltermcap")  
], AC_CHECK_LIB(ncurses, tgoto, [
	AC_CHECK_LIB(readline, readline, [
		READLINE_LIB="-lreadline -lncurses"
		AC_DEFINE(HAVE_READLINE)
		AC_CHECK_LIB(readline, add_history, AC_DEFINE(HAVE_HISTORY),,"-lncurses")
	], READLINE_LIB="", "-lncurses")
], READLINE_LIB=""))


AC_SUBST(READLINE_LIB)


dnl # Guile checks #

if test "x$exec_prefix" = "xNONE"; then
	GUILE_LIBS_PRE="-L$ac_default_prefix/lib"
else
	GUILE_LIBS_PRE="-L$exec_prefix/lib"
fi
if test "x$prefix" = "xNONE"; then
	GUILE_INCLUDES="-L$ac_default_prefix/include"
else
	GUILE_INCLUDES="-L$prefix/include"
fi

AC_ARG_WITH(guile-prefix,
[  --with-guile-prefix=DIR Expect guile to be installed in DIR [optional]],
[
	if test -n "$ac_prev"; then
  		AC_MSG_ERROR(missing argument to --with-guile-prefix)
	else
		AC_MSG_CHECKING(where to expect to find guile)
		guile_prefix="${withval}"
		GUILE_INCLUDES="-I${guile_prefix}/include"
		GUILE_LIBS_PRE="-L${guile_prefix}/lib"

		AC_MSG_RESULT("${guile_prefix}")
	fi
])


AC_ARG_WITH(guile-exec-prefix,
[  --with-guile-exec-prefix=DIR 
                          Expect guile binaries to be installed in DIR 
                          [optional]],
[
	if test -n "$ac_prev"; then
  		AC_MSG_ERROR(missing argument to --with-guile-prefix)
	else
		AC_MSG_CHECKING(where to expect to find guile binaries)
		guile_exec_prefix="${withval}"
		GUILE_LIBS_PRE="-L${guile_exec_prefix}/lib"

		AC_MSG_RESULT("${guile_exec_prefix}")
	fi
])


if test $BUILD_GUILE = yes; then
  AC_MSG_CHECKING(for guile libraries)
  GUILE_LIBS="${GUILE_LIBS_PRE} `build-guile link`"
  AC_MSG_RESULT($GUILE_LIBS)
else
  AC_CHECK_LIB(m, sin, GUILE_LIBS="-lm",, $GUILE_LIBS_PRE)
  AC_CHECK_LIB(rx, main, GUILE_LIBS="-lrx $GUILE_LIBS",, $GUILE_LIBS_PRE)
  AC_CHECK_LIB(qt, main, GUILE_LIBS="-lqt $GUILE_LIBS",, $GUILE_LIBS_PRE)
  AC_CHECK_LIB(dl, dlopen, GUILE_LIBS="-ldl $GUILE_LIBS",, $GUILE_LIBS_PRE)

  AC_CHECK_LIB(guile, scm_handle_by_message_noexit, GUILE_LIBS="${GUILE_LIBS_PRE} -lguile ${GUILE_LIBS}", [
  	AC_MSG_ERROR(Can not find Guile 1.2 or later on the system)
  ], $GUILE_LIBS_PRE $GUILE_LIBS)
fi

AC_SUBST(GUILE_INCLUDES)
AC_SUBST(GUILE_LIBS)


dnl ## Checks for header files ##

AC_STDC_HEADERS
AC_CHECK_HEADERS(getopt.h, AC_DEFINE(HAVE_GETOPT_H))


dnl ## Check for library functions ##

# AC_CHECK_FUNCS(select)
AC_CHECK_FUNCS(getopt_long)
AC_CHECK_FUNCS(gethostname waitpid sysconf uname)
AC_CHECK_FUNCS(strerror strcasecmp strncasecmp)
AC_CHECK_FUNCS(usleep)
AC_CHECK_FUNCS(setlinebuf setvbuf)

dnl # Check for bleeding-edge guile funcs

dnl This checks (roughly) if the guile lib is a sufficiently recent snapshot
dnl to have a scm_eval_string that is safe against re-entry by continuations. 
dnl I was to lazy to write a real test macro so I just check for a function
dnl that was added soon after.
AC_CHECK_LIB(guile, scm_done_malloc, AC_DEFINE(HAVE_SAFE_SCM_EVAL_STRING), ,$GUILE_LIBS)

dnl This checks if the new printer functions are available, and should 
dnl be used instead of the old ones.
AC_CHECK_LIB(guile, scm_puts, AC_DEFINE(HAVE_SCM_PUTS), ,$GUILE_LIBS)

dnl This checks if we have gh_vref or gh_vector_ref
AC_CHECK_LIB(guile, gh_vector_ref, AC_DEFINE(HAVE_GH_VECTOR_REF), ,$GUILE_LIBS)

dnl This checks if we have gh_vset or gh_vector_set
AC_CHECK_LIB(guile, gh_vector_set_x, AC_DEFINE(HAVE_GH_VECTOR_SET_X), ,$GUILE_LIBS)

dnl This checks if we have a guile with readline support
AC_CHECK_LIB(guile, scm_readline, AC_DEFINE(HAVE_SCM_READLINE), ,$GUILE_LIBS)

dnl This checks if we have a guile with gh_length, not gh_list_length
AC_CHECK_LIB(guile, gh_length, AC_DEFINE(HAVE_GH_LENGTH), ,$GUILE_LIBS)

AC_CHECK_LIB(guile, scm_parse_path, AC_DEFINE(HAVE_SCM_PARSE_PATH), ,$GUILE_LIBS)

AC_CHECK_LIB(guile, scm_internal_select, AC_DEFINE(HAVE_SCM_INTERNAL_SELECT), ,$GUILE_LIBS)

AC_CHECK_LIB(guile, scm_internal_cwdr, AC_DEFINE(HAVE_SCM_INTERNAL_CWDR), ,$GUILE_LIBS)

AC_CHECK_LIB(guile, scm_internal_stack_catch, AC_DEFINE(HAVE_SCM_INTERNAL_STACK_CATCH), ,$GUILE_LIBS)

AC_CHECK_LIB(guile, scm_internal_parse_path, AC_DEFINE(HAVE_SCM_INTERNAL_PARSE_PATH), ,$GUILE_LIBS)

dnl check for scm_the_last_fluid in place of scm_the_last_stack_var

saved_LIBS="${LIBS}"
LIBS="${LIBS} ${GUILE_LIBS}"
saved_CFLAGS="${CFLAGS}"
CFLAGS="${CFLAGS} ${GUILE_INCLUDES}"
AC_MSG_CHECKING(for scm_the_last_stack_fluid in -lguile)
AC_TRY_LINK([
#include <guile/gh.h>
],[
return scm_the_last_stack_fluid;
], [
AC_DEFINE(HAVE_SCM_THE_LAST_STACK_FLUID)
AC_MSG_RESULT(yes)
],[
AC_MSG_RESULT(no)
])

LIBS="${saved_LIBS}"
CFLAGS="${saved_CFLAGS}"

saved_LIBS="${LIBS}"
LIBS="${LIBS} ${GUILE_LIBS}"
saved_CFLAGS="${CFLAGS}"
CFLAGS="${CFLAGS} ${GUILE_INCLUDES}"
AC_MSG_CHECKING(whether scm_make_vector in -lguile takes a third argument)
AC_TRY_LINK([
#include <guile/gh.h>
],[
return scm_make_vector(SCM_MAKINUM(0), SCM_BOOL_F, SCM_BOOL_F);
], [
AC_DEFINE(HAVE_SCM_MAKE_VECTOR_3_ARGS)
AC_MSG_RESULT(yes)
],[
AC_MSG_RESULT(no)
])

LIBS="${saved_LIBS}"
CFLAGS="${saved_CFLAGS}"


dnl ## Checks for typedefs, structures, and compiler characteristics. ##

AC_C_CONST
AC_C_INLINE

dnl ## Define directories ##

scwm_load_path=${datadir}/${PACKAGE}-modules
scwm_schemedir=${scwm_load_path}/app/scwm
scwmrcdir=${libdir}/X11/${PACKAGE}
scwm_image_load_path="(\\\"${x_includes}/X11/bitmaps\\\" \\\"${x_includes}/X11/pixmaps\\\" \\\"${orig_x_libs}/X11/mini-icons\\\" \\\"${includedir}/X11/pixmaps\\\" \\\"${includedir}/X11/bitmaps\\\" \\\"${libdir}/X11/mini-icons\\\")"

AC_SUBST(scwm_load_path)
AC_SUBST(scwm_schemedir)
AC_SUBST(scwmrcdir)
AC_SUBST(scwm_image_load_path)


dnl # Check for optional settings #

AC_MSG_CHECKING(wether to enable multibyte support)
AC_ARG_ENABLE(multibyte,
[  --enable-multibyte      Handle multibyte strings for window titles, etc],
[
	if test $enableval = yes; then
		AC_DEFINE(I18N)
	fi

	AC_MSG_RESULT($enableval);
],
[
	AC_MSG_RESULT(no);
])


AC_OUTPUT(Makefile \
          sample.scwmrc/Makefile \
          scwm/Makefile \
          scheme/Makefile \
          app/Makefile \
          utilities/Makefile \
          utilities/libscwmexec/Makefile \
          utilities/scwmexec/Makefile \
          utilities/scwmrepl/Makefile \
          utilities/dev/Makefile \
          utilities/emacs/Makefile \
          doc/Makefile)
