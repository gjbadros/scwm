<!-- $Id$ -->
<!-- "-//OASIS//DTD DocBook V3.1//EN">
<!DOCTYPE Book PUBLIC "-//Davenport//DTD DocBook V3.0//EN">
<book>
  <bookinfo>
    <title>Scwm Reference Manual</title>
    <subtitle>The Emacs of Window Managers</subtitle>
    <authorgroup>
      <author>
  	<firstname>Greg</firstname>
  	<othername>J.</othername>
  	<surname>Badros</surname>
  	<affiliation>
  	  <address>
  	    <email>gjb@cs.washington.edu</email>
  	  </address>
  	</affiliation>
      </author>
      <author>
  	<firstname>Maciej</firstname>
  	<surname>Stachowiak</surname>
  	<affiliation>
  	  <address>
  	    <email>mstachow@alum.mit.edu</email>
  	  </address>
  	</affiliation>
      </author>
    </authorgroup>
    <releaseinfo>Release pre-1.0</releaseinfo>
    <pubdate>14 September 1999</pubdate>
    <copyright>
      <year>1997-1999</year>
      <holder>Greg J. Badros and Maciej Stachowiak</holder>
    </copyright>
  </bookinfo>
  <chapter>
    <title>Concepts</title>
      <sect1 id="Concepts-Introduction"><title>Introduction</title>
	<!-- $Id$ -->
<!-- Concepts Chapter Introduction -->
<para>This chapter discusses some high level concepts in Scwm.</para>

      </sect1>
    <sect1 id="Colors"><title>Colors</title><para>

  Colors are first-class objects. However, anywhere that a color is
taken as an argument, a string containing an X color specification
will also be accepted, and will be automatically converted to the
proper color object. Using the same color specifier string more than
once is not inefficient, as caching ensures that color objects are
shared.

    </para></sect1>
    <sect1 id="Creating-themes"><title>Creating themes</title><para>
Currently, the best documentation on themes is the source code;
however, here are a few notes.
To create a theme, create a new subdirectory of a directory in
`*theme-path*' (you'll probably want to add a private directory to 
`*theme-path*').  This subdirectory should be named the same as the
theme.  This subdirectory must contain (at least) a file named
theme.scm.  This file must create a module named
(app scwm theme your-theme-name), and define (in this module)
a theme object named <link linkend="the-theme"><function>the-theme</function></link>.  See the existing themes for
examples of what you can do when building <link linkend="the-theme"><function>the-theme</function></link>.

    </para></sect1>
    <sect1 id="Decors"><title>Decors</title><para>


  Decors are a means of managing the abundance of visual appearance
options for windows. In the original Fvwm code, there were many
options that could only be set globally, although they affected window
appearance. Decors are a compromise between leaving them global and
making them fully settable per window. These quasi-global options may
be set in a particular decor, and a decor may be attached to one or
more windows.

  Having to use decors to change certain aspects of the look and feel
is confusing. Scwm will probably move to some way of making these
options directly settable per-window at some point, especially if we
can figure out a way to not increase the memory overhead much.

    </para></sect1>
    <sect1 id="Desks"><title>Desks</title><para>


  Multiple virtual desktops are supported. A virtual desktop may be
bigger than the physical screen, in which case the current viewport on
the desktop may be moved around, as described in the Viewports entry.
Desks are identified by integers. There is currently an arbitrary
limit on the number of desks, but it should be much higher than anyone
will ever need. You can change the current desk with
<link linkend="set-current-desk-x"><function>set-current-desk!</function></link>; find out what the current desk is with
<link linkend="current-desk"><function>current-desk</function></link>; and set the desk a window is on with
<link linkend="set-window-desk-x"><function>set-window-desk!</function></link>.

    </para></sect1>
    <sect1 id="Event-Contexts"><title>Event Contexts</title><para>


There are various event contexts that are used as arguments
to the binding procedures.  Among these are:

  'window
  'title
  'icon
  'root
  'frame-corners
  'frame-sides
  'client-window
  'root-window
  'left-button-N  (N=1-5)
  'right-button-N (N=1-5)

GJB:FIXME:: This should be a definition list or a table, and give real
explanations of what these contexts mean!
 
    </para></sect1>
    <sect1 id="Face-Flags"><title>Face Flags</title><para>

   Face flags are two-element lists that specify certain properties
that are set once and only once for a give face (as opposed to specs,
which may be chained arbitrarily). Nearly all flags may be used for
button faces. Exceptions, as well as the flags that may be used for
title and border faces, are indicated below.

<table colsep="1" rowsep="0" frame="all">
<title>Face Flags</title>
<tgroup align="char" cols="3">
<thead><row>
 <entry>Key</entry>  <entry>Possible values</entry>  <entry>Explanation</entry>
</row></thead>
<tbody><row>
  <entry>'justify</entry>
     <entry>'left 'right 'center</entry>
     <entry>Horizontal justification for the face (pixmap, relief pattern, etc.)</entry>
  </row>
  <row>
  <entry>'vertical-justify</entry>
     <entry>'top 'bottom 'center</entry>
     <entry>Vertical justification for the face (pixmap, relief pattern, etc.)</entry>
  </row>
  <row>
  <entry>'relief</entry>
     <entry>'flat 'sunk 'raised</entry>
     <entry>Use for titles and buttons to control appearance (only flag for titles)</entry>
  </row>
  <row>
  <entry>'use-style-of</entry>
     <entry>'title 'border <literal>#f</literal></entry>
     <entry>Inherit the face flags from the title or border first, then add these flags</entry>
  </row>
  <row>
  <entry>'hidden-handles</entry>
     <entry><literal>#t</literal> <literal>#f</literal></entry>
     <entry>Set visibility of the corner handles -- only used for border faces</entry>
  </row>
  <row>
  <entry>'no-inset</entry>
     <entry><literal>#t</literal> <literal>#f</literal></entry>
     <entry>Win-9x-like effect of relieving borders on outside instead of inside</entry>
  </row>
</tbody>
</tgroup>
</table>

    </para></sect1>
    <sect1 id="Face-Specification-Flags"><title>Face Specification Flags</title><para>

  Face specification flags are two-element lists that specify certain
properties that may be chained to indicate how a face is drawn. Face
specs may be fully or partially destructive. A fully destructive spec
indicates how the whole area of the element is to be drawn, making
previous specs irrelevant. A partially destructive spec overlays part,
but not all, of the drawing area.

  All specs may be used for button faces. All but non-tiled pixmaps may
be used for titlebars, and only tiled pixmaps may be used for borders.


<table colsep="1" rowsep="0" frame="all">
<title>Face Specification Flags</title>
<tgroup align="char" cols="2">
<thead><row>
 <entry>Format</entry>  <entry>Explanation</entry>
</row></thead>
<tbody><row>
  <entry><para><informalexample><programlisting>
     '(relief-pattern ((X Y BOOL) ...))
       </programlisting></informalexample></para></entry><entry>
      Draw a relief pattern using the list of triples, each of which
indicates a pair of X,Y coordinates given as a percentage of the
button size, and a boolean value indicating whether to use the lighter
or darker color. This spec is partially destructive.
  </entry></row>
  <row>
  <entry><para><informalexample><programlisting>
     '(solid COLOR)
         </programlisting></informalexample></para></entry><entry>
      Use COLOR as the color for this element; fully destructive.
  </entry></row>
  <row>
  <entry><para><informalexample><programlisting>
     '(gradient ({horizontal|vertical} NCOLORS {COLOR_PERCENT}* FINAL))
         </programlisting></informalexample></para></entry><entry>
     Draw a gradient in this element.  The gradient may be horizontal or
vertical. The number of colors is specified, followed by a number of
colors with percentages and a final color. The percentages must add to
100.
  </entry></row>
  <row>
  <entry><para><informalexample><programlisting>
      '(pixmap {mini-icon|IMAGE|(tiled IMAGE)})
         </programlisting></informalexample></para></entry><entry>
      Specify a pixmap to use, either the window's mini-icon, an image
object or image specifier string, or a list of tiled and an image,
indicating the image should be tiled. Partially destructive, except
when tiled, which makes it fully destructive.
  </entry></row>
</tbody>
</tgroup>
</table>

    </para></sect1>
    <sect1 id="Faces"><title>Faces</title><para>

  Faces are a data type used to specify in detail the way in which
window decorations like the titlebar, the border and titlebar buttons
will be drawn. They are currently somewhat kludgey and
ad-hoc. However, they offer a great deal of flexibility. All faces are
set in the current decor, so multiple decors must be used to use
different faces for different windows. The low-level functionality
offered in the face primitives will rarely be needed; the
<link linkend="button-style"><function>button-style</function></link>, <link linkend="title-style"><function>title-style</function></link> and <link linkend="border-style"><function>border-style</function></link> procedures in the
(app scwm face) module provide a more convenient interface to this
functionality.

    </para></sect1>
    <sect1 id="Focus-Styles"><title>Focus Styles</title><para>


   Scwm supports several focus styles, which are settable
per-window. A window with the 'click focus style is click-to-focus: it
requires that the user click on it before it will receive the input
focus, and will not lose it again until some other window gains
focus. The 'mouse focus style is mouse-focus in the traditional sense
- the window will gain and lose focus as the mouse enters and leaves
it.

  'sloppy indicates the sloppy-focus style. This is like mouse-focus,
but the window will not lose the focus until another gains it. So if
you focus the window with the mouse and then let the pointer slide
into the root window or a window that has focus styles of 'click or
'none, the window will not lose the focus. This style of focus was
first introduced in fvwm.

  A focus style of 'none indicates that the window should never gain
the input focus, no matter what. This can be used for clocks,
mailboxes, and other desktop gadgets that never need keyboard input.

    </para></sect1>
    <sect1 id="Fonts"><title>Fonts</title><para>

  Fonts are first-class objects. However, anywhere that a font is
taken as an argument, a string containing an X font specification
will also be accepted, and will be automatically converted to the
proper font object. Using the same font specifier string more than
once is not inefficient, as caching ensures that font objects are
shared.

    </para></sect1>
    <sect1 id="Hooks"><title>Hooks</title><para>

  Hooks are used throughout scwm to provide a convenient mechanism for
user callbacks on particular events. Fundamentally, a hook is just a
variable that contains a list of procedures that are called in order
when the relevant event occurs. However, several convenience macros
are provided for manipulating hooks; see <link linkend="add-hook-x"><function>add-hook!</function></link>, <link linkend="remove-hook-x"><function>remove-hook!</function></link>,
<link linkend="reset-hook-x"><function>reset-hook!</function></link>, and <link linkend="run-hook"><function>run-hook</function></link>. 

    </para></sect1>
    <sect1 id="Image-Loaders"><title>Image Loaders</title><para>

  Different loaders are available for various images types. <link linkend="load-xbm"><function>load-xbm</function></link>
and <link linkend="load-xpm"><function>load-xpm</function></link> load X bitmaps and X pixmaps respectively. The user may
register other image loaders using the extension or the special string
"default" for the loader to be tried for an image that cannot be
loaded any other way.

    </para></sect1>
    <sect1 id="Images"><title>Images</title><para>

  Images are first-class objects. However, anywhere that an image is
taken as an argument, a string containing a filename will also be
accepted, and will be automatically converted to the proper image
object by loading the image. Using the same image filename more than
once is not inefficient, as caching ensures that image objects are
shared.

    </para></sect1>
    <sect1 id="Input-Hooks"><title>Input Hooks</title><para>

  Input hooks are a special form of hook that is called whenever input
is available on a particular port. They are treated differently than
normal hooks - use <link linkend="add-input-hook-x"><function>add-input-hook!</function></link> and <link linkend="remove-input-hook-x"><function>remove-input-hook!</function></link> to
manipulate them. Like regular hooks and unlike timer hooks, input
hooks are not one-shot - they trigger every time input is made
available on the particular port, and do not go away until explicitly
removed. An input hook may safely remove itself from within its own
invocation.

    </para></sect1>
    <sect1 id="Key-Specifier"><title>Key Specifier</title><para>

   A key specifier is a string denoting a keystroke, perhaps including
modifiers.  The available modifiers include S-, C-, M-, A-, H-, and s-
for Shift, Control, Meta, Alt, Hyper, and Super, respectively.  They
can be combined arbitrarily, and in any order, but should precede the
key name. They may also be combined without the dash separator;  e.g.,
CSM-Left refers to the keysym "Left" with the control, shift, and meta
modifiers.

When a key specifier is being used to indicate a binding, the
additional special modifier *- may be used; it indicates that the key
should be bound with every possible modifier combination, including
possibly no modifiers. *- may not be combined with any other modifier.  
    </para></sect1>
    <sect1 id="Menu-Looks"><title>Menu Looks</title><para>


  Menus have an associated menu look, which determines how the menus
are drawn.  Menu look objects are created by dynamically-loaded
C modules.  For example, the xpm-menus module creates a variable
<link linkend="xpm-shaped-menu-look"><function>xpm-shaped-menu-look</function></link> that specifies that the menu should be drawn
using that code.  <link linkend="copy-menu-look"><function>copy-menu-look</function></link> can be used to copy a menu
look and change some of its properties.

    </para></sect1>
    <sect1 id="Run-time-command-line-options"><title>Run-time command-line options</title><para>

<segmentedlist>
<segtitle/Option/
<segtitle/Description/

<seglistitem>
<seg/-D or --debug/ <seg/enable lots of debugging messages./
</seglistitem><seglistitem>

<seg/-n or --nobacktrace/ <seg/disable guile's debugging backtraces./
</seglistitem><seglistitem>

<seg/-p or --segv-cleanup-and-stop/ <seg/abort on segv signal, but cleanup first/
</seglistitem><seglistitem>

<seg/-P or --segv-just-stop/ <seg/abort on segv signal without catching signal at all/
</seglistitem><seglistitem>

<seg/-s or --single-screen/ <seg/run only on on the first screen of the display./
</seglistitem><seglistitem>

<seg/-d or --display dpy/ <seg/run on display dpy./
</seglistitem><seglistitem>

<seg/-f or --file file/ <seg>read startup commands from the specified
file instead of ".scwmrc" or "system.scwmrc".</seg>
</seglistitem><seglistitem>

<seg/-e or --expression expr/ <seg>evaluate Scheme expression expr
instead of reading from ".scwmrc" or "system.scwmrc". Multiple -e and
-f options may be specified on a single command line and in this case
will be processed in the order in which they were specified.</seg>
</seglistitem><seglistitem>

<seg/-F or --document-formals/ <seg/document formal parameters of primitives./
</seglistitem><seglistitem>

<seg/-h or --help/ <seg/prints a usage message and exits./
</seglistitem><seglistitem>

<seg/-b or --blackout/ <seg/blacks the screen out to hide the initial capture./
</seglistitem><seglistitem>

<seg/--client-id id/ <seg>sets scwm's client id to a specific value. This
is probably of no use to you unless you're a session manager or debbuging.
</seg>
</seglistitem><seglistitem>

<seg/-v or --version/ <seg/prints the version and exits./
</seglistitem>
</segmentedlist>
  
    </para></sect1>
    <sect1 id="SCWMEXEC-Protocol"><title>SCWMEXEC Protocol</title><para>

  Scwm supports a protocol for other programs to send commands to the
window manager. Programs send ordinary configuration language
expressions and are returned a string representation of the return
value, and the output and error output generated, if any.

  For more information on how to make use of this protocol, see the
documentation for the scwmexec and scwmrepl programs, the scwm.el
emacs interaction mode, the libscwmexec library, and the details of
the SCWMEXEC protocol (as documented in
<filename>doc/scwmexec.proto</filename>).
FIXDOC: Link to file!

    </para></sect1>
    <sect1 id="Shadow-and-Highlight-Factors"><title>Shadow and Highlight Factors</title><para>

  Many decorations are supposed to look "three-dimensional".
To implement this, the decorations use three colors: the specified
decoration color, a brighter "highlight" color, and a darker "shadow"
color.  For "raised" decorations, the top and left edges are drawn in
the highlight color, and the bottom and right edges are drawn in the
shadow color; this is reversed for "sunken" decorations.

The highlight and shadow colors are computed from the decoration color
using the highlight and shadow factors.  The highlight factor should be
a floating-point number greater than 1.  If the highlight factor is
1, then the highlight color is the same as the decoration color;
the larger the highlight factor, the brighter the highlight color.
The shadow factor should be a floating-point number between 0 and 1.  If 
the shadow factor is 1, then the shadow color is the same as the
decoration color; the smaller the shadow factor, the darker the
shadow color.

(It is actually possible to give a highlight factor which is less than
1 (which makes the highlight color darker than the decoration color)
and a shadow factor which is greater than 1 (which makes the shadow
color brighter than the decoration color); the effect is to reverse
"raised" and "sunken" elements throughout the user interface.)


    </para></sect1>
    <sect1 id="Sticky"><title>Sticky</title><para>


  A "sticky" window will appear on all desktops, and will remain at the
same screen position regardless of scrolling within the current
desktop.

    </para></sect1>
    <sect1 id="Themes"><title>Themes</title><para>
A theme is a named collection of window manager settings.
Themes are still under development, but they are planned to
affect window styles, menus, icons, backgrounds, and various
global settings.

    </para></sect1>
    <sect1 id="Timer-Hooks"><title>Timer Hooks</title><para>

  Timer hooks are a special form of hook that is called after a
specified amount of time has passed. They are treated differently than
normal hooks - use <link linkend="add-timer-hook-x"><function>add-timer-hook!</function></link> and <link linkend="remove-timer-hook-x"><function>remove-timer-hook!</function></link> to
manipulate them. Timer hooks, unlike regular hooks, are one-shot -
once the time limit expires and the timer hook is triggered, it is
removed.

    </para></sect1>
    <sect1 id="Viewports"><title>Viewports</title><para>

  The current viewport is the area of the current desk that may be
seen on the physical screen. Since a desk can be larger than the
physical screen size, the viewport can move around the desk.

  Viewports give rise to two concepts of coordinates.  A viewport
coordinate is relative to the current viewport (i.e., it is the 
coordinate you actually see on the screen).  A virtual coordinate
is relative to the origin of the current desk.

    </para></sect1>
    <sect1 id="Window-Context"><title>Window Context</title><para>


  When actions are triggered by mouse or keyboard events, or menu
actions from menus originally popped up by mouse or keyboard events, a
context window is saved, which is used as the default for window
operations that are not passed their optional window argument. This
allows the user to easily bind actions to events without worrying
about passing around the window argument.

  However, it is unclear whether behind-the-scenes magic like this is
a good idea.  The merit of this approach is still under consideration;
it may be changed entirely. 
    </para></sect1>
    <sect1 id="Window-Style"><title>Window Style</title><para>

  Window styles encapsulate the behaviour and appearance of windows.
They are applied to windows arbitrarily so different windows can
use different styles at the same time.  Numerous options are permitted
for window styles.  For some of the below options you will
need to use the appropriate module to make the options available. 
The options include at least:


<table>
<title>window style options</title>
<tgroup align="char" cols="3">
<thead><row>
 <entry>Option</entry>  <entry>Type</entry>  <entry>Implementation</entry>
</row></thead>
<tbody>
<row><entry/auto-raise/ <entry/window-style/ <entry>scheme/auto-raise.scm:138</entry>  </row>
<row><entry/auto-raise-delay/ <entry/window-style/ <entry>scheme/auto-raise.scm:139</entry>  </row>
<row><entry/auto-raise-unfocus-delay/ <entry/window-style/ <entry>scheme/auto-raise.scm:140</entry>  </row>
<row><entry/auto-raise-focus-proc/ <entry/window-style/ <entry>scheme/auto-raise.scm:142</entry>  </row>
<row><entry/auto-raise-unfocus-proc/ <entry/window-style/ <entry>scheme/auto-raise.scm:143</entry>  </row>
<row><entry/hover-focus-delay/ <entry/window-style/ <entry>scheme/hover-focus.scm:74</entry>  </row>
<row><entry/hover-focus/ <entry/window-style/ <entry>scheme/hover-focus.scm:96</entry>  </row>
<row><entry/border-width/ <entry/window-style/ <entry>scheme/style.scm:197</entry>  </row>
<row><entry/background/ <entry/window-style/ <entry>scheme/style.scm:198</entry>  </row>
<row><entry/bg/ <entry/window-style/ <entry>scheme/style.scm:199</entry>  </row>
<row><entry/foreground/ <entry/window-style/ <entry>scheme/style.scm:200</entry>  </row>
<row><entry/fg/ <entry/window-style/ <entry>scheme/style.scm:201</entry>  </row>
<row><entry/highlight-background/ <entry/window-style/ <entry>scheme/style.scm:202</entry>  </row>
<row><entry/highlight-bg/ <entry/window-style/ <entry>scheme/style.scm:204</entry>  </row>
<row><entry/highlight-foreground/ <entry/window-style/ <entry>scheme/style.scm:205</entry>  </row>
<row><entry/highlight-fg/ <entry/window-style/ <entry>scheme/style.scm:207</entry>  </row>
<row><entry/focus/ <entry/window-style/ <entry>scheme/style.scm:208</entry>  </row>
<row><entry/plain-border/ <entry/boolean-style/ <entry>scheme/style.scm:209</entry>  </row>
<row><entry/icon-title/ <entry/window-style/ <entry>scheme/style.scm:210</entry>  </row>
<row><entry/icon-box/ <entry/window-style/ <entry>scheme/style.scm:211</entry>  </row>
<row><entry/sticky-icon/ <entry/boolean-style/ <entry>scheme/style.scm:214</entry>  </row>
<row><entry/start-iconified/ <entry/boolean-style/ <entry>scheme/style.scm:215</entry>  </row>
<row><entry/kept-on-top/ <entry/boolean-style/ <entry>scheme/style.scm:216</entry>  </row>
<row><entry/sticky/ <entry/boolean-style/ <entry>scheme/style.scm:217</entry>  </row>
<row><entry/no-side-decorations/ <entry/boolean-style/ <entry>scheme/style.scm:220</entry>  </row>
<row><entry/mwm-buttons/ <entry/window-hint/ <entry>scheme/style.scm:224</entry>  </row>
<row><entry/mwm-border/ <entry/window-style/ <entry>scheme/style.scm:226</entry>  </row>
<row><entry/show-icon/ <entry/window-style/ <entry>scheme/style.scm:228</entry>  </row>
<row><entry/force-icon/ <entry/window-style/ <entry>scheme/style.scm:229</entry>  </row>
<row><entry/icon/ <entry/window-style/ <entry>scheme/style.scm:230</entry>  </row>
<row><entry/mini-icon/ <entry/window-style/ <entry>scheme/style.scm:231</entry>  </row>
<row><entry/random-placement/ <entry/window-hint/ <entry>scheme/style.scm:233</entry>  </row>
<row><entry/smart-placement/ <entry/window-hint/ <entry>scheme/style.scm:234</entry>  </row>
<row><entry/button/ <entry/window-hint/ <entry>scheme/style.scm:237</entry>  </row>
<row><entry/no-button/ <entry/window-hint/ <entry>scheme/style.scm:239</entry>  </row>
<row><entry/hint-override/ <entry/window-hint/ <entry>scheme/style.scm:242</entry>  </row>
<row><entry/decorate-transient/ <entry/window-hint/ <entry>scheme/style.scm:243</entry>  </row>
<row><entry/mwm-decor-hint/ <entry/window-hint/ <entry>scheme/style.scm:244</entry>  </row>
<row><entry/mwm-func-hint/ <entry/window-hint/ <entry>scheme/style.scm:245</entry>  </row>
<row><entry/PPosition-hint/ <entry/window-hint/ <entry>scheme/style.scm:246</entry>  </row>
<row><entry/OL-decor-hint/ <entry/window-hint/ <entry>scheme/style.scm:247</entry>  </row>
<row><entry/start-on-desk/ <entry/window-hint/ <entry>scheme/style.scm:249</entry>  </row>
<row><entry/skip-mapping/ <entry/window-hint/ <entry>scheme/style.scm:250</entry>  </row>
<row><entry/lenience/ <entry/window-hint/ <entry>scheme/style.scm:251</entry>  </row>
<row><entry/placement-proc/ <entry/window-hint/ <entry>scheme/style.scm:272</entry>  </row>
<row><entry/transient-placement-proc/ <entry/window-hint/ <entry>scheme/style.scm:273</entry>  </row>
<row><entry/start-lowered/ <entry/boolean-style/ <entry>scheme/style.scm:277</entry>  </row>
<row><entry/start-window-shaded/ <entry/boolean-style/ <entry>scheme/style.scm:278</entry>  </row>
<row><entry/other-proc/ <entry/window-style/ <entry>scheme/style.scm:279</entry>  </row>
<row><entry/other-hint-proc/ <entry/window-hint/ <entry>scheme/style.scm:281</entry>  </row>
<row><entry/use-theme/ <entry/window-style/ <entry>scheme/themes.scm:48</entry>  </row>
<row><entry/winlist-skip/ <entry/boolean-style/ <entry>scheme/winlist.scm:113</entry>  </row>
<row><entry/circulate-skip/ <entry/boolean-style/ <entry>scheme/winlist.scm:307</entry>  </row>
<row><entry/circulate-skip-icon/ <entry/boolean-style/ <entry>scheme/winlist.scm:308</entry>  </row>
<row><entry/start-maximized/ <entry/window-style/ <entry>scheme/winops.scm:188</entry>  </row>
</tbody></tgroup></table>

    </para></sect1>
    <sect1 id="Windows"><title>Windows</title><para>

  Windows are the most important scwm data type. A window object
represents an on-screen window that scwm is managing, and is used to
perform window management operations on the window, as well as to set
options and retrieve information about the window.
 
    </para></sect1>
    <sect1 id="X-atoms"><title>X atoms</title><para>

   X windows allows certain entities (for example, X properties [FIXME: XREF
to X properties]) to have arbitrary names. To avoid exchanging strings ever so
often, these names are in fact X atoms.

New X atoms can be created, or old ones retrieved simply by specifying
the string the atom stands for. An X atom can also be converted back to a
string. Scwm provides primitives for these actions. 
    </para></sect1>
    <sect1 id="X-Properties"><title>X Properties</title><para>

   X has a notion of window properties, which live in the X
server. X window properties are often used to implement protocols
between applications and the window manager, which can have several
levels of standardization, from official X standard, to standardized
by some other organization, to made up informally by groups of
programmers, to specific to one window manager, to specific to an
individual, or installation.

  Scwm already internally implements many of these protocols,
including all X standard protocols, as well as the Motif and Open Look
protocols. However, the user should be able to implement any of these
he likes, including making up his own for personal use.

  This is possible through the low-level X property interface. Scwm has
one procedure to get, and set them, respectively.
 
    </para></sect1>
  </chapter>
  <chapter>
    <title>Hooks</title>
      <sect1 id="Hooks-Introduction"><title>Introduction</title>
	<!-- $Id$ -->
<!-- Hooks Chapter Introduction -->
<para>
This chapter lists the hooks provided by Scwm
ordered alphabetically by name.
</para>

      </sect1>
    <sect1 id="after-change-desk-hook"><title>after-change-desk-hook (2 args)</title><para>
This hook is invoked whenever the current desktop is changed.
It is called with two argument, both integers.  The first is the
new desktop number, the second is the old desktop number.  It
is called after the desk is changed. See also <link linkend="change-desk-hook"><function>change-desk-hook</function></link>. 
    </para></sect1>
    <sect1 id="after-new-window-hook"><title>after-new-window-hook (1 arg)</title><para>
This hook is invoked after a window is created and placed.
Its procedures are each called with a single argument, WIN, the new window.
Any window operations may be performed at this time. However, it is
recommended that placement-related operations, such as setting the
position, desk, viewport location and z-ordering of a window be done
in the placement procedure instead.  It should be used for setting
window styles, as the window geometry needs to be fully and correctly
specified before the window is placed.  The <link linkend="window-style"><function>window-style</function></link> mechanism
from the "(app scwm style)" module provides a convenient interface to
setting the relevant parameters when a new window is created. 

See also <link linkend="before-new-window-hook"><function>before-new-window-hook</function></link> and <link linkend="before-place-new-window-hook"><function>before-place-new-window-hook</function></link>.

    </para></sect1>
    <sect1 id="before-new-window-hook"><title>before-new-window-hook (1 arg)</title><para>
This hook is invoked when first creating a new window object.
Its procedures are each called with a single argument, WIN, the new
window.  Only a subset of the usual window parameters should be set
here, in particular, those that control what hints will be respected
for this window, and those that control how the window will be placed.

This hook does not typically need to be used directly by the user;
<link linkend="window-style"><function>window-style</function></link> from the "(app scwm style)" module provides a convenient
interface to setting the relevant parameters when a new window is
created.

See also <link linkend="before-place-new-window-hook"><function>before-place-new-window-hook</function></link> and <link linkend="after-new-window-hook"><function>after-new-window-hook</function></link>.  
    </para></sect1>
    <sect1 id="before-place-new-window-hook"><title>before-place-new-window-hook (1 arg)</title><para>
This hook is invoked just before placing a new window.
It comes after <link linkend="before-new-window-hook"><function>before-new-window-hook</function></link>, but before <link linkend="after-new-window-hook"><function>after-new-window-hook</function></link>. 
Its procedures are each called with a single argument, WIN, the new window.
This hook may be removed later since it is mostly redundant with the other
two hooks, despite being invoked at a slightly different time. 

See also <link linkend="before-new-window-hook"><function>before-new-window-hook</function></link> and <link linkend="after-new-window-hook"><function>after-new-window-hook</function></link>.

    </para></sect1>
    <sect1 id="broadcast-config-hook"><title>broadcast-config-hook (2 args)</title><para>
This hook is invoked whenever fvwm2 would call BroadcastConfig.
This hook is principally of use in implementing the fvwm2
module interface and for stuff that needs to be notified in ways that
can't be done with the proper hooks that have been included so
far. The procedures in this hook are passed two arguments: the event-type
and the window object. 
    </para></sect1>
    <sect1 id="broadcast-hook"><title>broadcast-hook (9 args)</title><para>
This hook is invoked whenever fvwm2 would call Broadcast.
This hook is principally of use in implementing the fvwm2
module interface and for stuff that needs to be notified in ways that
can't be done with the proper hooks that have been included so
far. The procedures in this hook are passed a numerical code
representing the event type, a number that indicates how many of the
following data arguments are meaningful, and 7 numeric data arguments. 
    </para></sect1>
    <sect1 id="broadcast-mini-icon-hook"><title>broadcast-mini-icon-hook (2 args)</title><para>
This hook is invoked whenever fvwm2 would call BroadcastMiniIcon.
This hook is principally of use in implementing the fvwm2
module interface and for stuff that needs to be notified in ways that
can't be done with the proper hooks that have been included so
far. The procedures The procedures in this hook are passed two arguments:
the event-type and the window object. 
    </para></sect1>
    <sect1 id="broadcast-name-hook"><title>broadcast-name-hook (5 args)</title><para>
This hook is invoked whenever fvwm2 would call BroadcastName.
This hook is principally of use in implementing the fvwm2
module interface and for stuff that needs to be notified in ways
that can't be done with the proper hooks that have been included so
far. The procedures in this hook are passed an event type, three
numeric data arguments, and a string. 
    </para></sect1>
    <sect1 id="change-desk-hook"><title>change-desk-hook (2 args)</title><para>
This hook is invoked whenever the current desktop is changed.
It is called with two argument, both integers.  The first is the
new desktop number, the second is the old desktop number. It is
called before the desk is changed.  See also <link linkend="after-change-desk-hook"><function>after-change-desk-hook</function></link>. 
    </para></sect1>
    <sect1 id="client-message-hook"><title>client-message-hook (4 args)</title><para>
This hook is invoked whenever Scwm receives an X/11 client message.
It is called with four arguments: the window, the message-type atom, the format (8, 16, or 32), 
and the vector of data. 
    </para></sect1>
    <sect1 id="deiconify-hook"><title>deiconify-hook (2 args)</title><para>
This hook is invoked when a window is deiconified.
It is called with two arguments: WINDOW, WAS-ICONIFIED?.
WINDOW is the window iconfied, and WAS-ICONIFIED? is
a boolean telling whether the window was iconified previously. 
    </para></sect1>
    <sect1 id="desk-size-change-hook"><title>desk-size-change-hook (2 args)</title><para>
This hook is invoked whenever the desk size is changed.  It is
called with two arguments, both integers, which are the width and
height of the new desk size in screens. 
    </para></sect1>
    <sect1 id="edge-enter-hook"><title>edge-enter-hook (1 arg)</title><para>
This hook is invoked whenever the mouse pointer enters a screen edge.
Procedures in the hook are called with one argument, one of the
symbols 'north, 'south, 'east or 'west indicating which edge was
entered. 
    </para></sect1>
    <sect1 id="edge-leave-hook"><title>edge-leave-hook (1 arg)</title><para>
This hook is invoked whenever the mouse pointer leaves a screen edge.
Procedures in the hook are called with one argument, one of the
symbols 'north, 'south, 'east or 'west indicating which edge was
entered. 
    </para></sect1>
    <sect1 id="edge-scroll-hook"><title>edge-scroll-hook (thunk)</title><para>
This hook is invoked whenever an edge scroll takes place.
Procedures in the hook are called with no arguments. 
    </para></sect1>
    <sect1 id="error-hook"><title>error-hook (5 args)</title><para>
Called on all kinds of errors and exceptions.
Whenever an error or other uncaught throw occurs on any callback,
whether a hook, a mouse binding, a key binding, a menu entry, a file
being processed, or anything else, error-hook will be invoked. Each
procedure in the hook will be called with the throw arguments; these
will generally include information about the nature of the error. 

    </para></sect1>
    <sect1 id="iconify-hook"><title>iconify-hook (2 args)</title><para>
This hook is invoked when a window is iconified.
It is called with two arguments: WINDOW, WAS-ICONIFIED?.
WINDOW is the window iconfied, and WAS-ICONIFIED? is
a boolean telling whether the window was iconified previously.

    </para></sect1>
    <sect1 id="image-not-found-hook"><title>image-not-found-hook (1 arg)</title><para>
Called with image name as a string when not found. 
    </para></sect1>
    <sect1 id="interactive-move-finish-hook"><title>interactive-move-finish-hook (1 arg)</title><para>
This hook is invoked at the end of an interactive move.
It is called with one argument, WINDOW. 
    </para></sect1>
    <sect1 id="interactive-move-new-position-hook"><title>interactive-move-new-position-hook (3 args)</title><para>
This hook is invoked during an interactive move.
It is called with three arguments, WINDOW, NEW-VP-X, and NEW-VP-Y,
whenever the window is moved to a new location. The position refers
to the position of the frame window (not the client window) in
viewport coordinates. 
    </para></sect1>
    <sect1 id="interactive-move-start-hook"><title>interactive-move-start-hook (1 arg)</title><para>
This hook is invoked at the start of an interactive move.
It is called with one argument, WINDOW. 
    </para></sect1>
    <sect1 id="interactive-resize-finish-hook"><title>interactive-resize-finish-hook (1 arg)</title><para>
This hook is invoked at the end of an interactive resize.
It is called with one argument, WINDOW. 
    </para></sect1>
    <sect1 id="interactive-resize-new-size-hook"><title>interactive-resize-new-size-hook (7 args)</title><para>
This hook is invoked during an interactive resize.  
It is called with seven arguments, WINDOW, X-POSITION, Y-POSITION,
NEW-WIDTH-PIXELS, NEW-HEIGHT-PIXELS, NEW-WIDTH-UNITS, and
NEW-HEIGHT-UNITS whenever the window is changed to a new size.  The
first five arguments refer to the size and position of the frame
window (not the client window). The -UNITS arguments refer to the size
of the client window and are in client units (e.g., characters for
Emacsen and XTerms).  
    </para></sect1>
    <sect1 id="interactive-resize-start-hook"><title>interactive-resize-start-hook (3 args)</title><para>
This hook is invoked at the start of an interactive resize.
It is called with three arguments: WINDOW, XMOTION, YMOTION.
XMOTION and YMOTION are -1, 0, or 1, indicating motion in that dimension
can happen on the right/bottom side, not at all, or the top/left side,
respectively. 
    </para></sect1>
    <sect1 id="invalid-interaction-hook"><title>invalid-interaction-hook (thunk)</title><para>
This hook is invoked with no arguments when the user hits an invalid
key or performs an invalid mouse action during an interactive
operation like <link linkend="interactive-resize"><function>interactive-resize</function></link> or <link linkend="interactive-move"><function>interactive-move</function></link>. <link linkend="beep"><function>beep</function></link> is
one example of a procedure to use here. 
    </para></sect1>
    <sect1 id="load-processing-hook"><title>load-processing-hook (1 arg)</title><para>
This hook is invoked for every several top-level s-exps in the startup file.
The hook procedures are invoked with one argument, the count of the
s-expressions evaluated thus far. See also <link linkend="set-load-processing-hook-frequency-x"><function>set-load-processing-hook-frequency!</function></link>. 
    </para></sect1>
    <sect1 id="select-window-done-hook"><title>select-window-done-hook (1 arg)</title><para>
This hooks is run when a window is selected.
The hook procedures are called with a single argument, the window just left.
See also <link linkend="select-window-enter-hook"><function>select-window-enter-hook</function></link> and <link linkend="select-window-leave-hook"><function>select-window-leave-hook</function></link>. 
    </para></sect1>
    <sect1 id="select-window-enter-hook"><title>select-window-enter-hook (1 arg)</title><para>
This hook is invoked when a window is entered during window selection.
The hook procedures are called with a single argument, the window just entered.
This hook is invoked once <link linkend="select-window-interactively-no-message"><function>select-window-interactively-no-message</function></link> is
called if the pointer is already in a window.  (But the
leave hook is not invoked similarly when the selection completes).

    </para></sect1>
    <sect1 id="select-window-leave-hook"><title>select-window-leave-hook (1 arg)</title><para>
This hook is invoked when a window is left during window selection.
The hook procedures are called with a single argument, the window just left.
This hook is not invoked upon selection completion (unlike
<link linkend="select-window-enter-hook"><function>select-window-enter-hook</function></link> that is called initially upon calling
<link linkend="select-window-interactively-no-message"><function>select-window-interactively-no-message</function></link>). See also <link linkend="select-window-done-hook"><function>select-window-done-hook</function></link>.

    </para></sect1>
    <sect1 id="shutdown-hook"><title>shutdown-hook (1 arg)</title><para>
The procedures in shutdown-hook are before scwm quits or restarts.
A single boolean argument is passed that is <literal>#t</literal> iff scwm is restarting. 
    </para></sect1>
    <sect1 id="startup-hook"><title>startup-hook (thunk)</title><para>
The procedures in startup-hook are called with no arguments after scwm
has processed the scwmrc and captured all application windows, and
right before it enters the main event loop.  Note that during
processing of the .scwmrc startup file, windows have not already been
captured, so the window-list (as reported by <link linkend="list-all-windows"><function>list-all-windows</function></link>) is
empty.  To provide behviour conditioned on a property of an existing
window, this hook should be used instead. 
    </para></sect1>
    <sect1 id="viewport-position-change-hook"><title>viewport-position-change-hook (4 args)</title><para>
This hook is invoked whenever the viewport position is changed.
It is called with four arguments, all integers.  The first two are 
the x and y coordinates of the new viewport position in pixels and
the second two are the change in x and y from the previous position. 
    </para></sect1>
    <sect1 id="window-close-hook"><title>window-close-hook (1 arg)</title><para>
This hook is invoked whenever a scwm-managed window is closed.
It is invoked on deletes, destroys, or for any reason that a window
is closed. The hook procedures are invoked with one argument,
WIN, the window being closed.  The WIN is still valid during the hook
procedures. 
    </para></sect1>
    <sect1 id="window-enter-hook"><title>window-enter-hook (1 arg)</title><para>
This hook is invoked whenever the mouse pointer enters a top-level window.
It is called with one argument, the window object of the window just
entered. 
    </para></sect1>
    <sect1 id="window-focus-change-hook"><title>window-focus-change-hook (1 arg)</title><para>
This hook is invoked whenever the keyboard focus is changed.
It is called with one argument, the window object of the window
that now has the focus, or <literal>#f</literal> if no window now has the focus. 
See also <link linkend="window-focus-lost-hook"><function>window-focus-lost-hook</function></link>. 
    </para></sect1>
    <sect1 id="window-focus-lost-hook"><title>window-focus-lost-hook (1 arg)</title><para>
This hook is invoked whenever the focus is lost on a window.
It is called with one argument, the window object of the window
that just lost the keyboard focus. See also <link linkend="window-focus-change-hook"><function>window-focus-change-hook</function></link>. 
    </para></sect1>
    <sect1 id="window-fully-obscured-hook"><title>window-fully-obscured-hook (1 arg)</title><para>
Invoked when window receives a VisibilityFullyObscured event.
The hook procedures are invoked with one argument, the window object
of the window that is now fully obscured. 
    </para></sect1>
    <sect1 id="window-leave-hook"><title>window-leave-hook (1 arg)</title><para>
This hook is invoked whenever the mouse pointer leaves a top-level window.
The hook procedures are invoked with one argument, the window object
of the window just left. 
    </para></sect1>
    <sect1 id="window-partially-obscured-hook"><title>window-partially-obscured-hook (1 arg)</title><para>
Invoked when window receives a VisibilityPartiallyObscured
event.  The hook procedures are invoked with one argument, the window
object of the window that is now partially obscured.  Beware that this
event happens more often than you might expect and an action procedure
attached here should be very careful about manipulating windows in a way
that might cause more Visibility events. 
    </para></sect1>
    <sect1 id="window-property-change-hook"><title>window-property-change-hook (4 args)</title><para>
This hook is invoked whenever a window property changes.
The hook procedures are invoked with four arguments, the window whose
property changed, the name of the changed property, the new value and
the old value. 
    </para></sect1>
    <sect1 id="window-unobscured-hook"><title>window-unobscured-hook (1 arg)</title><para>
Invoked when window receives a VisibilityUnobscured event.
The hook procedures are invoked with one argument, the window object
of the window that is now fully visible. Beware that this
event happens more often than you might expect and an action procedure
attached here should be very careful about manipulating windows in a way
that might cause more Visibility events. 
    </para></sect1>
    <sect1 id="X-DestroyNotify-hook"><title>X-DestroyNotify-hook (1 arg)</title><para>
This hook is invoked upon DestroyNotify X events.
It indicates a window is being destroyed.  The hook procedures are
invoked with one argument, WIN, the window being destroyed.
The WIN is still valid during the hook procedures. 
    </para></sect1>
    <sect1 id="X-MappingNotify-hook"><title>X-MappingNotify-hook (thunk)</title><para>
This hook is invoked whenever a MappingNotify X event is
received. A MappingNotify event indicates a change of keymapping - in
particular, it may indicate a change of available modifiers or mouse
buttons. The hook procedures are invoked with no arguments. 
    </para></sect1>
    <sect1 id="X-MapRequest-hook"><title>X-MapRequest-hook (1 arg)</title><para>
This hook is invoked upon MapRequest X events.  It indicates a
window is trying to map itself (add itself to the display).  The hook 
procedures are invoked with one argument, WIN, the window being mapped.  
The WIN is valid during the hook procedures. 
    </para></sect1>
    <sect1 id="X-PropertyNotify-hook"><title>X-PropertyNotify-hook (2 args)</title><para>
This hook is invoked whenever a PropertyNotify event is received
for a window scwm is managing. This indicates that an X window
property has changed. Watching for window property changes can be used
to construct your own custom window manager protocols. The hook
procedures are invoked with two arguments, the name of the property
that changed (as a string) and the window that it changed for. 
    </para></sect1>
    <sect1 id="X-root-PropertyNotify-hook"><title>X-root-PropertyNotify-hook (2 args)</title><para>
This hook is invoked whenever a PropertyNotify event is received
on the root window.  This indicates that an X window
property has changed. Watching for window property changes can be used
to construct your own custom window manager protocols, or interface
to other desktop environments such as KDE or GNOME. The hook
procedures are invoked with two arguments: the atom for the changed
property and a boolean telling whether the property was deleted. 
These arguments are different from those passed to
X-PropertyNotify-hook's procedures. 
    </para></sect1>
    <sect1 id="X-UnmapNotify-hook"><title>X-UnmapNotify-hook (1 arg)</title><para>
This hook is invoked upon UnmapNotify X events.  It indicates a
window is being unmapped (removed from display).  The hook procedures
are invoked with one argument, WIN, the window being destroyed.  The
WIN is still valid during the hook procedures. 
    </para></sect1>
  </chapter>
  <chapter>
    <title>User variables</title>
      <sect1 id="Vars-Introduction"><title>Introduction</title>
	<!-- $Id$ -->
<!-- User Variables Chapter Introduction -->
<para>This chapter lists the user options defined by Scwm.</para>

      </sect1>
    <sect1 id="circle-pie-menu-look"><title>circle-pie-menu-look</title><para>
A menu-look that gives pie menus in a circular window. 
    </para></sect1>
    <sect1 id="cursor-icon"><title>cursor-icon</title><para>
The cursor to use for icon windows, defaults to top_left_arrow. 
    </para></sect1>
    <sect1 id="cursor-kill"><title>cursor-kill</title><para>
The cursor to use for selecting a window to kill, defaults to pirate. 
    </para></sect1>
    <sect1 id="cursor-menu"><title>cursor-menu</title><para>
The cursor to use when in a menu, defaults to sb_left_arrow. 
    </para></sect1>
    <sect1 id="cursor-move"><title>cursor-move</title><para>
The cursor to use for move actions, defaults to fleur. 
    </para></sect1>
    <sect1 id="cursor-select"><title>cursor-select</title><para>
The cursor to use for selecting a window, defaults to dot. 
    </para></sect1>
    <sect1 id="cursor-set-focus"><title>cursor-set-focus</title><para>
The cursor to use for set focus actions, defaults to hand2. 
    </para></sect1>
    <sect1 id="image-load-path"><title>image-load-path</title><para>
List of strings of directories in which to look for image files. 
    </para></sect1>
    <sect1 id="locale-fullname"><title>locale-fullname</title><para>
Full name of the current locale, as a string. 
    </para></sect1>
    <sect1 id="locale-language-territory"><title>locale-language-territory</title><para>
The language territory name, as a string 
    </para></sect1>
    <sect1 id="pie-menu-look"><title>pie-menu-look</title><para>
A menu-look that gives pie menus in a rectangular window 
    </para></sect1>
    <sect1 id="scroll-region"><title>scroll-region</title><para>
The number of pixels at the edge of the screen within which virtual scrolling will occur. 
    </para></sect1>
    <sect1 id="scwm-menu-look"><title>scwm-menu-look</title><para>
The default menu look for Scwm.
Used as an argument to <link linkend="set-menu-look"><function>set-menu-look</function></link>. 
    </para></sect1>
    <sect1 id="shaped-pie-menu-look"><title>shaped-pie-menu-look</title><para>
A menu-look that gives pie menus with only the labels visible 
    </para></sect1>
    <sect1 id="xpm-shaped-menu-look"><title>xpm-shaped-menu-look</title><para>
The shaped XPM menu look. 
    </para></sect1>
  </chapter>
  <chapter>
    <title>Procedure Synopses by Group</title>
      <sect1 id="Procs-ByGroup-Introduction"><title>Introduction</title>
	<!-- $Id$ -->
<!-- Procedures-by-group Chapter Introduction -->
<para>
  This chapter lists the procedures supplied by Scwm
  grouped and ordered by the source file that they are defined in.
</para>

      </sect1>
    <sect1><title>modules/background/background.c</title> <itemizedlist>
      <listitem><para><link linkend="set-background-color-x"><function>set-background-color!</function></link> -- Sets the color of the root window to COLOR.</para></listitem>
      <listitem><para><link linkend="clone-resized-image"><function>clone-resized-image</function></link> -- Makes a new image from IMAGE of the given WIDTH and HEIGHT.</para></listitem>
      <listitem><para><link linkend="set-background-image-x"><function>set-background-image!</function></link> -- Sets the background of the root window to be IMAGE.</para></listitem>
      <listitem><para><link linkend="reset-background-x"><function>reset-background!</function></link> -- Resets the root window to the default "weave".</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>modules/c-animation/c-animation.c</title> <itemizedlist>
      <listitem><para><link linkend="set-animation-x"><function>set-animation!</function></link> -- Set the animation parameters to VECTOR.</para></listitem>
      <listitem><para><link linkend="animated-window-shade"><function>animated-window-shade</function></link> -- Cause WIN to become "window-shaded".</para></listitem>
      <listitem><para><link linkend="animated-window-unshade"><function>animated-window-unshade</function></link> -- Reverse the effect of <link linkend="window-shade"><function>window-shade</function></link> on WIN.</para></listitem>
      <listitem><para><link linkend="animated-move-window"><function>animated-move-window</function></link> -- Move WIN to virtual coordinates X, Y with animation.</para></listitem>
      <listitem><para><link linkend="animated-resize-window"><function>animated-resize-window</function></link> -- Resize the client area of WIN to size W, H (pixels) with animation.</para></listitem>
      <listitem><para><link linkend="animated-resize-frame"><function>animated-resize-frame</function></link> -- Resize the frame of WIN to size W, H (pixels) with animation.</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>modules/corba/scwmcorba.c</title> <itemizedlist>
      <listitem><para><link linkend="corba-evaluator-ior"><function>corba-evaluator-ior</function></link> -- Returns the IOR string for the scwm-scheme-evaluator servant.</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>modules/esdsound/sound.c</title> <itemizedlist>
      <listitem><para><link linkend="sound-load"><function>sound-load</function></link> -- Load sound from FILE, tagging it with NAME.</para></listitem>
      <listitem><para><link linkend="sound-unload"><function>sound-unload</function></link> -- Unload SOUND, freeing any resources it occupies.</para></listitem>
      <listitem><para><link linkend="sound-play"><function>sound-play</function></link> -- Play SOUND.</para></listitem>
      <listitem><para><link linkend="esd-reconnect"><function>esd-reconnect</function></link> -- Connect to the ESound daemon on the machine named HOST.</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>modules/overlay-plane/overlay-plane.c</title> <itemizedlist>
      <listitem><para><link linkend="has-overlay-plane-p"><function>has-overlay-plane?</function></link> -- Return <literal>#t</literal> if the current screen has an overlay plane, <literal>#f</literal> otherwise.</para></listitem>
      <listitem><para><link linkend="draw-overlay-plane"><function>draw-overlay-plane</function></link> -- Draw a box in the overlay plane.</para></listitem>
      <listitem><para><link linkend="hide-overlay-plane"><function>hide-overlay-plane</function></link> -- Draw a box in the overlay plane.</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>modules/proplist/scwmproplist.c</title> <itemizedlist>
      <listitem><para><link linkend="proplist-make-array-from-elements"><function>proplist-make-array-from-elements</function></link> -- Return a newly created array object populated with elements ITEMS.</para></listitem>
      <listitem><para><link linkend="proplist-make-dictionary-from-entries"><function>proplist-make-dictionary-from-entries</function></link> -- Return a newly created dictionary object with elements ITEMS.</para></listitem>
      <listitem><para><link linkend="proplist-remove-array-element"><function>proplist-remove-array-element</function></link> -- Return PL-ARRAY after deleting the element at position INDEX.</para></listitem>
      <listitem><para><link linkend="proplist-insert-array-element"><function>proplist-insert-array-element</function></link> -- Return the PL-ARRAY after inserting ITEM at offset INDEX.</para></listitem>
      <listitem><para><link linkend="proplist-append-array-element"><function>proplist-append-array-element</function></link> -- Return the PL-ARRAY after appending ITEM to the end.</para></listitem>
      <listitem><para><link linkend="proplist-insert-dictionary-entry"><function>proplist-insert-dictionary-entry</function></link> -- Return PL-DICT after inserting (KEY,VALUE) into it.</para></listitem>
      <listitem><para><link linkend="proplist-remove-dictionary-entry"><function>proplist-remove-dictionary-entry</function></link> -- Return PL-DICT after removing KEY and its corresponding value from it.</para></listitem>
      <listitem><para><link linkend="proplist-merge-dictionaries"><function>proplist-merge-dictionaries</function></link> -- Return PL-DICT-DEST after merging in all entries from PL-DICT-SOURCE.</para></listitem>
      <listitem><para><link linkend="proplist-shallow-copy"><function>proplist-shallow-copy</function></link> -- Return a shallow copy of property list PL.</para></listitem>
      <listitem><para><link linkend="proplist-deep-copy"><function>proplist-deep-copy</function></link> -- Return a deep copy of property list PL.</para></listitem>
      <listitem><para><link linkend="proplist-is-equal"><function>proplist-is-equal</function></link> -- Return <literal>#t</literal> iff PLA is equal to PLB.</para></listitem>
      <listitem><para><link linkend="proplist-set-string-cmp-hook"><function>proplist-set-string-cmp-hook</function></link> -- Use PRED as a predicate for doing proplist string comparisons.</para></listitem>
      <listitem><para><link linkend="string-to-proplist"><function>string->proplist</function></link> -- Return a proplist object containing STRING.</para></listitem>
      <listitem><para><link linkend="proplist-make-data"><function>proplist-make-data</function></link> -- Return a proplist argument containing arbitrary data from DATA.</para></listitem>
      <listitem><para><link linkend="proplist-get-container"><function>proplist-get-container</function></link> -- Return the array or dictionary of which PL is an element.</para></listitem>
      <listitem><para><link linkend="proplist-get-array-element"><function>proplist-get-array-element</function></link> -- Return the element at INDEX offset of PL.</para></listitem>
      <listitem><para><link linkend="proplist-get-number-of-elements"><function>proplist-get-number-of-elements</function></link> -- Return the number of elements in PL.</para></listitem>
      <listitem><para><link linkend="proplist-get-all-dictionary-keys"><function>proplist-get-all-dictionary-keys</function></link> -- Return a proplist array object that contains all the keys of PL-DICT.</para></listitem>
      <listitem><para><link linkend="proplist-get-dictionary-entry"><function>proplist-get-dictionary-entry</function></link> -- Return the proplist dictionary entry associated with entry KEY in PL-DICT.</para></listitem>
      <listitem><para><link linkend="proplist-get-string-description"><function>proplist-get-string-description</function></link> -- Retuns a description of PL (a string proplist object) in GNUstep format.</para></listitem>
      <listitem><para><link linkend="proplist-get-data-description"><function>proplist-get-data-description</function></link> -- Returns a description of PL (a data proplist object) in GNUstep format.</para></listitem>
      <listitem><para><link linkend="proplist-get-data"><function>proplist-get-data</function></link> -- Returns the raw data from PL (a data proplist object) as a string.</para></listitem>
      <listitem><para><link linkend="proplist-get-string"><function>proplist-get-string</function></link> -- Returns the string from PL (a string proplist object).</para></listitem>
      <listitem><para><link linkend="proplist-is-string"><function>proplist-is-string</function></link> -- Return <literal>#t</literal> iff PL is a string proplist object, <literal>#f</literal> otherwise.</para></listitem>
      <listitem><para><link linkend="proplist-is-data"><function>proplist-is-data</function></link> -- Return <literal>#t</literal> iff PL is a data proplist object, <literal>#f</literal> otherwise.</para></listitem>
      <listitem><para><link linkend="proplist-is-array"><function>proplist-is-array</function></link> -- Return <literal>#t</literal> iff PL is an array proplist object, <literal>#f</literal> otherwise.</para></listitem>
      <listitem><para><link linkend="proplist-is-dictionary"><function>proplist-is-dictionary</function></link> -- Return <literal>#t</literal> iff PL is a dictionary proplist object, <literal>#f</literal> otherwise.</para></listitem>
      <listitem><para><link linkend="proplist-is-simple"><function>proplist-is-simple</function></link> -- Return <literal>#t</literal> iff PL is a string or data proplist object, <literal>#f</literal> otherwise.</para></listitem>
      <listitem><para><link linkend="proplist-is-compound"><function>proplist-is-compound</function></link> -- Return <literal>#t</literal> iff PL is a dictionary or array proplist object, <literal>#f</literal> otherwise.</para></listitem>
      <listitem><para><link linkend="proplist-unregister"><function>proplist-unregister</function></link> -- No longer invoke callback when domain associated with PL-DOMAIN-NAME is changed.</para></listitem>
      <listitem><para><link linkend="proplist-register"><function>proplist-register</function></link> -- Register thunk CALLBACK to be called when PL-DOMAIN-NAME changes.</para></listitem>
      <listitem><para><link linkend="proplist-set-domain"><function>proplist-set-domain</function></link> -- Set PL-DOMAIN-NAME to have VALUE.</para></listitem>
      <listitem><para><link linkend="proplist-delete-domain"><function>proplist-delete-domain</function></link> -- Delete domain PL-DOMAIN-NAME.</para></listitem>
      <listitem><para><link linkend="proplist-get-domain"><function>proplist-get-domain</function></link> -- Return a property list represeting the domain PL-DOMAIN-NAME.</para></listitem>
      <listitem><para><link linkend="proplist-get-domainnames"><function>proplist-get-domainnames</function></link> -- Return a array proplist containing all registered domain names.</para></listitem>
      <listitem><para><link linkend="proplist-get-filename"><function>proplist-get-filename</function></link> -- Return the filename of PL.</para></listitem>
      <listitem><para><link linkend="proplist-set-filename-x"><function>proplist-set-filename!</function></link> -- Set the filename for PL to be FILENAME.</para></listitem>
      <listitem><para><link linkend="proplist-save"><function>proplist-save</function></link> -- Save PL, atomically if ATOMICALLY? is <literal>#t</literal>.</para></listitem>
      <listitem><para><link linkend="proplist-synchronize"><function>proplist-synchronize</function></link> -- Synchronize the in-memory proplist PL with the disk contents.</para></listitem>
      <listitem><para><link linkend="get-proplist-with-path"><function>get-proplist-with-path</function></link> -- Return the proplist from path FILENAME.</para></listitem>
      <listitem><para><link linkend="get-proplist-with-description"><function>get-proplist-with-description</function></link> -- Return a property list by parsing DESC in GNUstep proplist format.</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>modules/scwmgtkhelper/scwmgtkhelper.c</title> <itemizedlist>
      <listitem><para><link linkend="scwm-gdk-X-fdes"><function>scwm-gdk-X-fdes</function></link> -- Return the integer connection number of the gdk_display.</para></listitem>
      <listitem><para><link linkend="restore-scwm-handlers"><function>restore-scwm-handlers</function></link> -- Restore the scwm behavior for signals and for X errors.</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>modules/xlib-drawing/drawing.c</title> <itemizedlist>
      <listitem><para><link linkend="xlib-set-drawing-mask-x"><function>xlib-set-drawing-mask!</function></link> -- Set the drawing mask used by the xlib-* primitives.</para></listitem>
      <listitem><para><link linkend="xlib-draw-rectangle-x"><function>xlib-draw-rectangle!</function></link> -- Draws a rectangle to the screen using the Xlib call XDrawRectangle.</para></listitem>
      <listitem><para><link linkend="xlib-draw-line-x"><function>xlib-draw-line!</function></link> -- Draws a line using the Xlib call XDrawLine.</para></listitem>
      <listitem><para><link linkend="xlib-draw-arc-x"><function>xlib-draw-arc!</function></link> -- Draws a arc to the screen using the Xlib call XDrawArc.</para></listitem>
      <listitem><para><link linkend="xlib-set-line-width-x"><function>xlib-set-line-width!</function></link> -- Sets the line width of the DrawingGC to WIDTH.</para></listitem>
      <listitem><para><link linkend="xlib-set-fill-style-x"><function>xlib-set-fill-style!</function></link> -- Sets the fill style of the DrawingGC to STYLE.</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>modules/xtest/scwmxtest.c</title> <itemizedlist>
      <listitem><para><link linkend="xtest-supported-p"><function>xtest-supported?</function></link> -- Returns <literal>#t</literal> iff the XTest extension is supported on this server.</para></listitem>
      <listitem><para><link linkend="xtest-fake-button-event"><function>xtest-fake-button-event</function></link> -- Fake an X event of button number BUTTON after a delay of MS-DELAY.</para></listitem>
      <listitem><para><link linkend="xtest-fake-key-event"><function>xtest-fake-key-event</function></link> -- Fake an X event of key KEYCODE after a delay of MS-DELAY.</para></listitem>
      <listitem><para><link linkend="xtest-fake-motion-event"><function>xtest-fake-motion-event</function></link> -- Fake an X motion event to X,Y after a delay of MS-DELAY on SCREEN.</para></listitem>
      <listitem><para><link linkend="xtest-fake-relative-motion-event"><function>xtest-fake-relative-motion-event</function></link> -- Fake an X motion relative event of a move DX, DY after a delay of MS-DELAY.</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>scheme/animated-iconify.scm</title> <itemizedlist>
      <listitem><para><link linkend="animated-iconify"><function>animated-iconify</function></link> -- Iconify WIN using a simple animation of a shrinking rectangle.</para></listitem>
      <listitem><para><link linkend="animated-deiconify"><function>animated-deiconify</function></link> -- Deiconify WIN using a simple animation of a growing rectangle.</para></listitem>
      <listitem><para><link linkend="animated-deiconify-to-last-viewport-position"><function>animated-deiconify-to-last-viewport-position</function></link> -- Deiconify WIN with an animation to the same viewport position as it was iconified from.</para></listitem>
      <listitem><para><link linkend="animated-deiconify-to-current-viewport"><function>animated-deiconify-to-current-viewport</function></link> -- Deicionify WIN with an animation to the current viewport.</para></listitem>
      <listitem><para><link linkend="animated-toggle-iconify"><function>animated-toggle-iconify</function></link> -- Iconify WIN if not iconified, or de-iconify WIN if it is iconified.</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>scheme/animation.scm</title> <itemizedlist>
      <listitem><para><link linkend="animated-move-to"><function>animated-move-to</function></link> -- Move WIN to viewport coordinates X, Y with animation.</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>scheme/auto-raise.scm</title> <itemizedlist>
      <listitem><para><link linkend="set-auto-raise-x"><function>set-auto-raise!</function></link> -- Turn auto-raise on (<literal>#t</literal>) or off (<literal>#f</literal>) for WIN.</para></listitem>
      <listitem><para><link linkend="set-auto-raise-delay-x"><function>set-auto-raise-delay!</function></link> -- Set the auto-raise delay to DELAY (in ms) for WIN.</para></listitem>
      <listitem><para><link linkend="set-auto-raise-unfocus-delay-x"><function>set-auto-raise-unfocus-delay!</function></link> -- Set the timeout to DELAY (in ms) for the unfocus-proc of WIN.</para></listitem>
      <listitem><para><link linkend="set-auto-raise-focus-proc-x"><function>set-auto-raise-focus-proc!</function></link> -- Set the auto-raise-focus-proc for WIN.</para></listitem>
      <listitem><para><link linkend="set-auto-raise-unfocus-proc-x"><function>set-auto-raise-unfocus-proc!</function></link> -- Set the auto-raise-unfocus-proc for WIN.</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>scheme/base.scm</title> <itemizedlist>
      <listitem><para><link linkend="program-exists-p"><function>program-exists?</function></link> -- Return <literal>#t</literal> iff PROGRAM-NAME is in the current $PATH.</para></listitem>
      <listitem><para><link linkend="round-d"><function>round/</function></link> -- Return the closest integer to X divided by Y.</para></listitem>
      <listitem><para><link linkend="half"><function>half</function></link> -- Return the closest integer to half of X.</para></listitem>
      <listitem><para><link linkend="maybe-make-color"><function>maybe-make-color</function></link> -- Try to make OBJ into a color and return that color object.</para></listitem>
      <listitem><para><link linkend="pctx"><function>%x</function></link> -- Return the number of pixels that is X percent of the display width.</para></listitem>
      <listitem><para><link linkend="pcty"><function>%y</function></link> -- Return the number of pixels that is Y percent of the display height.</para></listitem>
      <listitem><para><link linkend="pix-to-pctx"><function>pix->%x</function></link> -- Return the percent of the display width that PIX is.</para></listitem>
      <listitem><para><link linkend="pix-to-pcty"><function>pix->%y</function></link> -- Return the percent of the display height that PIX is.</para></listitem>
      <listitem><para><link linkend="x-"><function>x-</function></link> -- Return the viewport pixel coordinate X pixels left of the right display edge.</para></listitem>
      <listitem><para><link linkend="y-"><function>y-</function></link> -- Return the viewport pixel coordinate Y pixels up from the bottom display edge.</para></listitem>
      <listitem><para><link linkend="viewport-x-position"><function>viewport-x-position</function></link> -- Return the x coordinate of the current viewport.</para></listitem>
      <listitem><para><link linkend="viewport-y-position"><function>viewport-y-position</function></link> -- Return the y coordinate of the current viewport.</para></listitem>
      <listitem><para><link linkend="viewport-to-virtual"><function>viewport->virtual</function></link> -- Return the virtual coordinates for viewport X,Y.</para></listitem>
      <listitem><para><link linkend="virtual-to-viewport"><function>virtual->viewport</function></link> -- Return the viewport coordinates for virtual X,Y.</para></listitem>
      <listitem><para><link linkend="virtual-size"><function>virtual-size</function></link> -- Return the size of the virtual screen in pixels.</para></listitem>
      <listitem><para><link linkend="vx-"><function>vx-</function></link> -- Return the virtual coordinate X pixels left of the right virtual edge.</para></listitem>
      <listitem><para><link linkend="vy-"><function>vy-</function></link> -- Return the virtual coordinate Y pixels up from the bottom virtual edge.</para></listitem>
      <listitem><para><link linkend="pctx-"><function>%x-</function></link> -- Return the pixel coordinate X percent of the width away from the right edge.</para></listitem>
      <listitem><para><link linkend="pcty-"><function>%y-</function></link> -- Return the pixel coordinate Y percent of the height away from the bottom edge.</para></listitem>
      <listitem><para><link linkend="wpctx"><function>w%x</function></link> -- Return a pixel width X percent of the width of window W.</para></listitem>
      <listitem><para><link linkend="wpcty"><function>w%y</function></link> -- Return a pixel height Y percent of the height of window W.</para></listitem>
      <listitem><para><link linkend="set-default-menu-foreground-x"><function>set-default-menu-foreground!</function></link> -- Set the default color for menu text to FG.</para></listitem>
      <listitem><para><link linkend="set-default-menu-background-x"><function>set-default-menu-background!</function></link> -- Set the default background for menus to BG.</para></listitem>
      <listitem><para><link linkend="set-default-menu-stipple-x"><function>set-default-menu-stipple!</function></link> -- Set the default color for stippled (inactive) menu text to STIPPLE.</para></listitem>
      <listitem><para><link linkend="set-default-menu-font-x"><function>set-default-menu-font!</function></link> -- Set the default font for menu text to FONT.</para></listitem>
      <listitem><para><link linkend="set-default-menu-title-font-x"><function>set-default-menu-title-font!</function></link> -- Set the default font for menu title text to FONT.</para></listitem>
      <listitem><para><link linkend="set-default-menu-side-image-x"><function>set-default-menu-side-image!</function></link> -- Set the default menu side image to IMAGE.</para></listitem>
      <listitem><para><link linkend="set-default-menu-side-background-x"><function>set-default-menu-side-background!</function></link> -- Set the default background for the menu side image to BG.</para></listitem>
      <listitem><para><link linkend="set-default-menu-bg-image-x"><function>set-default-menu-bg-image!</function></link> -- Set the default menu background image to IMAGE.</para></listitem>
      <listitem><para><link linkend="set-default-menu-look-x"><function>set-default-menu-look!</function></link> -- Set the default menu look to LOOK.</para></listitem>
      <listitem><para><link linkend="set-default-menu-hl-fg-color-x"><function>set-default-menu-hl-fg-color!</function></link> -- Set the default menu highlight foreground color to FG.</para></listitem>
      <listitem><para><link linkend="set-default-menu-hl-bg-color-x"><function>set-default-menu-hl-bg-color!</function></link> -- Set the default menu highlight background color to BG.</para></listitem>
      <listitem><para><link linkend="set-window-colors-x"><function>set-window-colors!</function></link> -- Set WIN's background color to BG, foreground color to FG.</para></listitem>
      <listitem><para><link linkend="move-pointer"><function>move-pointer</function></link> -- Move the X11 pointer X pixels to the right, and Y pixels down.</para></listitem>
      <listitem><para><link linkend="move-to"><function>move-to</function></link> -- Move WIN to viewport position X, Y.</para></listitem>
      <listitem><para><link linkend="delta-position"><function>delta-position</function></link> -- Return a new coordinate list that is DX,DY offset from XY-LIST.</para></listitem>
      <listitem><para><link linkend="move-window-relative"><function>move-window-relative</function></link> -- Move WIN X, Y pixels from where it is currently.</para></listitem>
      <listitem><para><link linkend="window-title-height"><function>window-title-height</function></link> -- Return WIN's titlebar's height.</para></listitem>
      <listitem><para><link linkend="window-title-width"><function>window-title-width</function></link> -- Return WIN's titlebar's width.</para></listitem>
      <listitem><para><link linkend="window-viewport-position"><function>window-viewport-position</function></link> -- Return the position of WIN in pixels within the viewport.</para></listitem>
      <listitem><para><link linkend="window-virtual-position"><function>window-virtual-position</function></link> -- Return the virtual position of WIN in pixels.</para></listitem>
      <listitem><para><link linkend="icon-viewport-position"><function>icon-viewport-position</function></link> -- Return the position of WIN's icon in pixels within the viewport.</para></listitem>
      <listitem><para><link linkend="move-viewport"><function>move-viewport</function></link> -- Move the viewport onto the virtual desktop relatively.</para></listitem>
      <listitem><para><link linkend="use-placement-hint"><function>use-placement-hint</function></link> -- Do nothing when placing WIN, just let it be where hinted to be.</para></listitem>
      <listitem><para><link linkend="menu-style"><function>menu-style</function></link> -- Set various properites for the menus.</para></listitem>
      <listitem><para><link linkend="simple-title-style"><function>simple-title-style</function></link> -- Set the style for titlebars.</para></listitem>
      <listitem><para><link linkend="menu-title"><function>menu-title</function></link> -- Return a menuitem object that is a title.</para></listitem>
      <listitem><para><link linkend="menuitem"><function>menuitem</function></link> -- Return a menuitem object with the given attributes.</para></listitem>
      <listitem><para><link linkend="menu"><function>menu</function></link> -- Return a menu object with the given attributes.</para></listitem>
      <listitem><para><link linkend="popup-menu-from-decoration"><function>popup-menu-from-decoration</function></link> -- Popup MENU from WIN's decoration numbered BUTTON-NUMBER.</para></listitem>
      <listitem><para><link linkend="image-property"><function>image-property</function></link> -- Return the KEY property of IMAGE.</para></listitem>
      <listitem><para><link linkend="font-property"><function>font-property</function></link> -- Return the KEY property of FONT.</para></listitem>
      <listitem><para><link linkend="color-property"><function>color-property</function></link> -- Return the KEY property of COLOR.</para></listitem>
      <listitem><para><link linkend="exe"><function>exe</function></link> -- Return a procedure that, when invoked, executes COMMAND in the background.</para></listitem>
      <listitem><para><link linkend="run-in-xterm"><function>run-in-xterm</function></link> -- Return a procedure that runs CMD in an xterm.</para></listitem>
      <listitem><para><link linkend="set-edge-resistance-x"><function>set-edge-resistance!</function></link> -- Set the edge scroll delay to S, and the edge move threshold to M.</para></listitem>
      <listitem><para><link linkend="set-edge-wrap-x"><function>set-edge-wrap!</function></link> -- Set the edge x and y wrap values to X and Y, respectively.</para></listitem>
      <listitem><para><link linkend="set-edge-scroll-x"><function>set-edge-scroll!</function></link> -- Set the edge scroll values to X and Y, respectively.</para></listitem>
      <listitem><para><link linkend="unset-message-window-position-x"><function>unset-message-window-position!</function></link> -- Move the message window back to the default screen-center position.</para></listitem>
      <listitem><para><link linkend="scwm-is-constraint-enabled-p"><function>scwm-is-constraint-enabled?</function></link> -- Return <literal>#t</literal> if scwm has the constraint solver primitives, <literal>#f</literal> otherwise.</para></listitem>
      <listitem><para><link linkend="scwm-system"><function>scwm-system</function></link> -- Run CMD using /bin/sh -c CMD and return a list: (exit-status child-pid).</para></listitem>
      <listitem><para><link linkend="execute"><function>execute</function></link> -- Execute COMMAND in the background.</para></listitem>
      <listitem><para><link linkend="background-system"><function>background-system</function></link> -- Run CMD using /bin/sh -c CMD and return the exit status.</para></listitem>
      <listitem><para><link linkend="select-window"><function>select-window</function></link> -- Select a window interactively, and return the specified window.</para></listitem>
      <listitem><para><link linkend="select-window-interactively"><function>select-window-interactively</function></link> -- Return an interactively-selected window after prompting (optionally) with MSG.</para></listitem>
      <listitem><para><link linkend="run-dot-xclients-script"><function>run-dot-xclients-script</function></link> -- Runs the ~/.</para></listitem>
      <listitem><para><link linkend="run-dot-xclients-at-startup"><function>run-dot-xclients-at-startup</function></link> -- After done reading your startup file, run your ~/.</para></listitem>
      <listitem><para><link linkend="keycode-to-keysym"><function>keycode->keysym</function></link> -- Return a string containing the X11 keysym for key with code KEYCODE.</para></listitem>
      <listitem><para><link linkend="window-class"><function>window-class</function></link> -- Return the window resources class of WIN.</para></listitem>
      <listitem><para><link linkend="window-resource"><function>window-resource</function></link> -- Return the window resource instance of WIN.</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>scheme/bincomm.scm</title> <itemizedlist>
      <listitem><para><link linkend="binary-write"><function>binary-write</function></link> -- Writes STR as binary data to PORT.</para></listitem>
      <listitem><para><link linkend="binary-read"><function>binary-read</function></link> -- Reads LENGTH bytes of binary data from PORT and return it as a string.</para></listitem>
      <listitem><para><link linkend="binary-read-long"><function>binary-read-long</function></link> -- Reads a binary representation of a C long and return as a scheme number.</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>scheme/cascade.scm</title> <itemizedlist>
      <listitem><para><link linkend="cascade-windows"><function>cascade-windows</function></link> -- Cascade WINDOWS according to several parameters.</para></listitem>
      <listitem><para><link linkend="cascade"><function>cascade</function></link> -- Cascade the windows on the specified desk.</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>scheme/constraints.scm</title> <itemizedlist>
      <listitem><para><link linkend="reset-constraints"><function>reset-constraints</function></link> -- Reset the constraint solving system.</para></listitem>
      <listitem><para><link linkend="start-constraints"><function>start-constraints</function></link> -- Start using the constraint solver.</para></listitem>
      <listitem><para><link linkend="end-constraints"><function>end-constraints</function></link> -- Terminate using the constraint solver.</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>scheme/corba.scm</title> <itemizedlist>
      <listitem><para><link linkend="publish-scwm-evaluator-servant"><function>publish-scwm-evaluator-servant</function></link> -- Publish the scwm-evaluator-servant by putting its IOR as a property on the root window.</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>scheme/decor.scm</title> <itemizedlist>
      <listitem><para><link linkend="call-with-decor"><function>call-with-decor</function></link> -- Eval THUNK using DECOR as the current decor.</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>scheme/defoption.scm</title> <itemizedlist>
      <listitem><para><link linkend="define-scwm-group-proc"><function>define-scwm-group-proc</function></link> -- No documentation supplied.</para></listitem>
      <listitem><para><link linkend="scwm-group-properties"><function>scwm-group-properties</function></link> -- Return the group properties for group SYM.</para></listitem>
      <listitem><para><link linkend="scwm-group-name"><function>scwm-group-name</function></link> -- Return the prettified name for group SYM.</para></listitem>
      <listitem><para><link linkend="scwm-group-docstring"><function>scwm-group-docstring</function></link> -- Return the prettified name for group SYM.</para></listitem>
      <listitem><para><link linkend="scwm-group-icon"><function>scwm-group-icon</function></link> -- Return the icon for group SYM.</para></listitem>
      <listitem><para><link linkend="define-scwm-option-proc"><function>define-scwm-option-proc</function></link> -- Helper procedure for <link linkend="define-scwm-option"><function>define-scwm-option</function></link>.</para></listitem>
      <listitem><para><link linkend="scwm-option-module"><function>scwm-option-module</function></link> -- Return the module in which option SYM was defined.</para></listitem>
      <listitem><para><link linkend="scwm-option-name"><function>scwm-option-name</function></link> -- Return the name of SYM.</para></listitem>
      <listitem><para><link linkend="scwm-option-documentation"><function>scwm-option-documentation</function></link> -- Return the documentation for SYM.</para></listitem>
      <listitem><para><link linkend="scwm-option-setter"><function>scwm-option-setter</function></link> -- Return the setter for SYM.</para></listitem>
      <listitem><para><link linkend="scwm-option-getter"><function>scwm-option-getter</function></link> -- Return the getter for SYM.</para></listitem>
      <listitem><para><link linkend="scwm-option-range"><function>scwm-option-range</function></link> -- Return the range for SYM.</para></listitem>
      <listitem><para><link linkend="scwm-option-favorites"><function>scwm-option-favorites</function></link> -- Return the favorites for SYM.</para></listitem>
      <listitem><para><link linkend="scwm-option-group"><function>scwm-option-group</function></link> -- Return the group for SYM.</para></listitem>
      <listitem><para><link linkend="scwm-option-permit-disable"><function>scwm-option-permit-disable</function></link> -- Return the permit-disable flag for SYM.</para></listitem>
      <listitem><para><link linkend="scwm-option-layout-hint"><function>scwm-option-layout-hint</function></link> -- Return the permit-disable flag for SYM.</para></listitem>
      <listitem><para><link linkend="scwm-option-type"><function>scwm-option-type</function></link> -- Return the type for SYM.</para></listitem>
      <listitem><para><link linkend="scwm-option-symset-x"><function>scwm-option-symset!</function></link> -- Set option SYM to VALUE.</para></listitem>
      <listitem><para><link linkend="scwm-option-symget"><function>scwm-option-symget</function></link> -- Get option SYM's value.</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>scheme/desk-background.scm</title> <itemizedlist>
      <listitem><para><link linkend="desk-background"><function>desk-background</function></link> -- Set the background to use on desk DESK.</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>scheme/dir-focus.scm</title> <itemizedlist>
      <listitem><para><link linkend="dir-focus"><function>dir-focus</function></link> -- Move focus to the closest window in direction DIR.</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>scheme/doc.scm</title> <itemizedlist>
      <listitem><para><link linkend="hook-documentation"><function>hook-documentation</function></link> -- Return the docstring for HOOK.</para></listitem>
      <listitem><para><link linkend="documentation"><function>documentation</function></link> -- Print the documentation for the string or symbol.</para></listitem>
      <listitem><para><link linkend="help"><function>help</function></link> -- Print all possible documentation for string or symbol.</para></listitem>
      <listitem><para><link linkend="object-documentation"><function>object-documentation</function></link> -- Return documentation attached to SYM or to (eval SYM).</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>scheme/face.scm</title> <itemizedlist>
      <listitem><para><link linkend="title-style"><function>title-style</function></link> -- Set the title style in the current decor.</para></listitem>
      <listitem><para><link linkend="border-style"><function>border-style</function></link> -- Set the border style in the current decor.</para></listitem>
      <listitem><para><link linkend="set-left-button-face-x"><function>set-left-button-face!</function></link> -- Set the button face for the left-button numbered BUTTON.</para></listitem>
      <listitem><para><link linkend="set-right-button-face-x"><function>set-right-button-face!</function></link> -- Set the button face for the right-button numbered BUTTON.</para></listitem>
      <listitem><para><link linkend="button-style"><function>button-style</function></link> -- Set the button style for button number BUTTON in the current decor.</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>scheme/file.scm</title> <itemizedlist>
      <listitem><para><link linkend="filename-is-complete-p"><function>filename-is-complete?</function></link> -- Return true if FNAME is a fully qualified pathname.</para></listitem>
      <listitem><para><link linkend="find-file-in-path"><function>find-file-in-path</function></link> -- Search for file named FNAME in PATH.</para></listitem>
      <listitem><para><link linkend="path-list-to-string-with-colons"><function>path-list->string-with-colons</function></link> -- Convert L, a list of string directory names, to a single colon-separated string.</para></listitem>
      <listitem><para><link linkend="string-with-colons-to-path-list"><function>string-with-colons->path-list</function></link> -- Convert S, a colon-separated directory pathlist, into a list of directory strings.</para></listitem>
      <listitem><para><link linkend="read-until-eof"><function>read-until-eof</function></link> -- Return all the text from input port IN until eof.</para></listitem>
      <listitem><para><link linkend="output-of-system-cmd"><function>output-of-system-cmd</function></link> -- Return the output of command shell execution of CMD.</para></listitem>
      <listitem><para><link linkend="first-line-output-of-system-cmd"><function>first-line-output-of-system-cmd</function></link> -- Return the first line of output of command shell execution of CMD.</para></listitem>
      <listitem><para><link linkend="execute-with-pidprop"><function>execute-with-pidprop</function></link> -- Execute COMMAND in the background and permit use of <link linkend="window-pid"><function>window-pid</function></link> on its windows.</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>scheme/flash-window.scm</title> <itemizedlist>
      <listitem><para><link linkend="flash-window-on"><function>flash-window-on</function></link> -- Flash WIN's titlebar and boundary color to COLOR indefinitely.</para></listitem>
      <listitem><para><link linkend="flash-window"><function>flash-window</function></link> -- Flash WIN's titlebar and boundary color to COLOR for UNFLASH-DELAY seconds.</para></listitem>
      <listitem><para><link linkend="window-flashing-p"><function>window-flashing?</function></link> -- Return <literal>#t</literal> iff WIN is currently flashing, <literal>#f</literal> otherwise.</para></listitem>
      <listitem><para><link linkend="unflash-window"><function>unflash-window</function></link> -- Revert WIN's titlebar and boundary color to state before a <link linkend="flash-window"><function>flash-window</function></link>.</para></listitem>
      <listitem><para><link linkend="stop-flashing-window"><function>stop-flashing-window</function></link> -- Turn off window flashing of WIN.</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>scheme/flux-gtk.scm</title> <itemizedlist>
      <listitem><para><link linkend="rename-window-interactively"><function>rename-window-interactively</function></link> -- Prompt for a new name for WIN and change its title.</para></listitem>
      <listitem><para><link linkend="show-window-list-matching-interactively"><function>show-window-list-matching-interactively</function></link> -- Prompt for a wildcard, and popup a list of matching windows (by title).</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>scheme/flux.scm</title> <itemizedlist>
      <listitem><para><link linkend="interactive-move-window-with-focus"><function>interactive-move-window-with-focus</function></link> -- Interactively move the window which currently has the focus.</para></listitem>
      <listitem><para><link linkend="interactive-resize-window-with-focus"><function>interactive-resize-window-with-focus</function></link> -- Interactively resize the window which currently has the focus.</para></listitem>
      <listitem><para><link linkend="interactive-move-window-with-pointer"><function>interactive-move-window-with-pointer</function></link> -- Interactively move the window which currently contains the pointer.</para></listitem>
      <listitem><para><link linkend="interactive-resize-window-with-pointer"><function>interactive-resize-window-with-pointer</function></link> -- Interactively resize the window which currently contains the pointer.</para></listitem>
      <listitem><para><link linkend="toggle-max-vert"><function>toggle-max-vert</function></link> -- Toggle the current window's maximized-vertically state.</para></listitem>
      <listitem><para><link linkend="toggle-max-horz"><function>toggle-max-horz</function></link> -- Toggle the WIN's maximized-horizontally state.</para></listitem>
      <listitem><para><link linkend="toggle-max-both"><function>toggle-max-both</function></link> -- Toggle the WIN's maximization (both vertically and horizontally).</para></listitem>
      <listitem><para><link linkend="toggle-max-vert-part"><function>toggle-max-vert-part</function></link> -- Toggle the WIN's maximization-vertically to 95% of the screen height.</para></listitem>
      <listitem><para><link linkend="wiggle-window"><function>wiggle-window</function></link> -- Animatedly window shade and then unshade WIN.</para></listitem>
      <listitem><para><link linkend="system-info-string"><function>system-info-string</function></link> -- Return a string with various system information.</para></listitem>
      <listitem><para><link linkend="make-file-menu"><function>make-file-menu</function></link> -- Return a menu-object for viewing or editing FILE.</para></listitem>
      <listitem><para><link linkend="quotify-single-quotes"><function>quotify-single-quotes</function></link> -- Return a string that has single quote characters backslashified.</para></listitem>
      <listitem><para><link linkend="message"><function>message</function></link> -- Display the string arguments STR in a message window.</para></listitem>
      <listitem><para><link linkend="show-mesg"><function>show-mesg</function></link> -- Return a lambda to display the string arguments STR in a message window.</para></listitem>
      <listitem><para><link linkend="show-file"><function>show-file</function></link> -- Return a lambda to display the contents of filename in a window.</para></listitem>
      <listitem><para><link linkend="show-com"><function>show-com</function></link> -- Return a lambda to show the stdout generated by the COM shell pipeline.</para></listitem>
      <listitem><para><link linkend="window-info"><function>window-info</function></link> -- Display information about WIN in a message window.</para></listitem>
      <listitem><para><link linkend="show-system-info"><function>show-system-info</function></link> -- Display the <link linkend="system-info-string"><function>system-info-string</function></link> system details in a window.</para></listitem>
      <listitem><para><link linkend="make-menuitems-from-menu-information-list"><function>make-menuitems-from-menu-information-list</function></link> -- Return a list of menu-items from a list of detailed programs list.</para></listitem>
      <listitem><para><link linkend="sleep-ms"><function>sleep-ms</function></link> -- Delay for MS milliseconds.</para></listitem>
      <listitem><para><link linkend="select-window-group"><function>select-window-group</function></link> -- Prompt for multiple windows and return the list of selected windows.</para></listitem>
      <listitem><para><link linkend="make-rhosts-menu"><function>make-rhosts-menu</function></link> -- Returns a menu which lets you rlogin to each host mentioned in your .</para></listitem>
      <listitem><para><link linkend="close-all-xlogo-windows"><function>close-all-xlogo-windows</function></link> -- Close each window with class == XLogo.</para></listitem>
      <listitem><para><link linkend="use-change-desk-commands"><function>use-change-desk-commands</function></link> -- Execute one of the VECTOR-OF-COMMANDS shell commands when the desk changes.</para></listitem>
      <listitem><para><link linkend="extreme"><function>extreme</function></link> -- Find extreme value e of PRED in LST.</para></listitem>
      <listitem><para><link linkend="take-screenshot"><function>take-screenshot</function></link> -- Take a snapshot of the whole screen.</para></listitem>
      <listitem><para><link linkend="put-string-in-palm-clipboard"><function>put-string-in-palm-clipboard</function></link> -- No documentation supplied.</para></listitem>
      <listitem><para><link linkend="X-cut-buffer-to-palm-clipboard"><function>X-cut-buffer->palm-clipboard</function></link> -- No documentation supplied.</para></listitem>
      <listitem><para><link linkend="delete-multiple-windows-interactively"><function>delete-multiple-windows-interactively</function></link> -- No documentation supplied.</para></listitem>
      <listitem><para><link linkend="move-nonsticky-windows-relative"><function>move-nonsticky-windows-relative</function></link> -- Move all windows right X, down Y pixels.</para></listitem>
      <listitem><para><link linkend="show-X-properties"><function>show-X-properties</function></link> -- Displays the X properties of WIN in a message window.</para></listitem>
      <listitem><para><link linkend="window-corners"><function>window-corners</function></link> -- Return the four coordinates of the corners of the location of WIN.</para></listitem>
      <listitem><para><link linkend="enclosing-rectangle"><function>enclosing-rectangle</function></link> -- Return the smallest rectangle that encloses the windows WINS.</para></listitem>
      <listitem><para><link linkend="tile-windows-interactively"><function>tile-windows-interactively</function></link> -- Tile a set of selected windows either vertically or horizontally based on ORDER.</para></listitem>
      <listitem><para><link linkend="nonant-to-gravity"><function>nonant->gravity</function></link> -- Return a gravity symbol given NONANT in [0,8].</para></listitem>
      <listitem><para><link linkend="interactive-set-window-gravity-x"><function>interactive-set-window-gravity!</function></link> -- Permit user to click on an area of a window and anchor that nonant.</para></listitem>
      <listitem><para><link linkend="procedure-to-string"><function>procedure->string</function></link> -- No documentation supplied.</para></listitem>
      <listitem><para><link linkend="describe-key"><function>describe-key</function></link> -- No documentation supplied.</para></listitem>
      <listitem><para><link linkend="describe-mouse"><function>describe-mouse</function></link> -- No documentation supplied.</para></listitem>
      <listitem><para><link linkend="context-to-brief-context"><function>context->brief-context</function></link> -- No documentation supplied.</para></listitem>
      <listitem><para><link linkend="context-to-string"><function>context->string</function></link> -- No documentation supplied.</para></listitem>
      <listitem><para><link linkend="raw-binding-to-string"><function>raw-binding->string</function></link> -- No documentation supplied.</para></listitem>
      <listitem><para><link linkend="procedure-to-bindings-description"><function>procedure->bindings-description</function></link> -- No documentation supplied.</para></listitem>
      <listitem><para><link linkend="add-ms-timer-hook-x"><function>add-ms-timer-hook!</function></link> -- No documentation supplied.</para></listitem>
      <listitem><para><link linkend="remove-suffix"><function>remove-suffix</function></link> -- No documentation supplied.</para></listitem>
      <listitem><para><link linkend="interactive-move-selected-group-or-window"><function>interactive-move-selected-group-or-window</function></link> -- No documentation supplied.</para></listitem>
      <listitem><para><link linkend="make-small-window-ops-menu"><function>make-small-window-ops-menu</function></link> -- No documentation supplied.</para></listitem>
      <listitem><para><link linkend="make-window-group-menu"><function>make-window-group-menu</function></link> -- No documentation supplied.</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>scheme/focus-titlebar.scm</title> <itemizedlist>
      <listitem><para><link linkend="turn-on-only-focus-window-has-titlebar"><function>turn-on-only-focus-window-has-titlebar</function></link> -- Start displaying a titlebar only on the focussed window.</para></listitem>
      <listitem><para><link linkend="turn-off-only-focus-window-has-titlebar"><function>turn-off-only-focus-window-has-titlebar</function></link> -- Do not display titlebars on only the focuessed window.</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>scheme/fvwm-compat.scm</title> <itemizedlist>
      <listitem><para><link linkend="fvwm-exec-use-shell"><function>fvwm-exec-use-shell</function></link> -- No documentation supplied.</para></listitem>
      <listitem><para><link linkend="fvwm-exec"><function>fvwm-exec</function></link> -- No documentation supplied.</para></listitem>
      <listitem><para><link linkend="fvwm-none"><function>fvwm-none</function></link> -- No documentation supplied.</para></listitem>
      <listitem><para><link linkend="fvwm-pipe-read"><function>fvwm-pipe-read</function></link> -- No documentation supplied.</para></listitem>
      <listitem><para><link linkend="fvwm-nop"><function>fvwm-nop</function></link> -- No documentation supplied.</para></listitem>
      <listitem><para><link linkend="pctx-permit-negative"><function>%x-permit-negative</function></link> -- No documentation supplied.</para></listitem>
      <listitem><para><link linkend="pcty-permit-negative"><function>%y-permit-negative</function></link> -- No documentation supplied.</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>scheme/fvwm-eval.scm</title> <itemizedlist>
      <listitem><para><link linkend="eval-fvwm-command"><function>eval-fvwm-command</function></link> -- Evaluate an fvwm2 command.</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>scheme/fvwm-module.scm</title> <itemizedlist>
      <listitem><para><link linkend="get-fvwm2-module-config"><function>get-fvwm2-module-config</function></link> -- No documentation supplied.</para></listitem>
      <listitem><para><link linkend="register-fvwm2-module-config"><function>register-fvwm2-module-config</function></link> -- No documentation supplied.</para></listitem>
      <listitem><para><link linkend="append-fvwm2-module-config"><function>append-fvwm2-module-config</function></link> -- No documentation supplied.</para></listitem>
      <listitem><para><link linkend="clear-fvwm2-module-config"><function>clear-fvwm2-module-config</function></link> -- No documentation supplied.</para></listitem>
      <listitem><para><link linkend="run-fvwm2-module"><function>run-fvwm2-module</function></link> -- No documentation supplied.</para></listitem>
      <listitem><para><link linkend="kill-fvwm2-module"><function>kill-fvwm2-module</function></link> -- No documentation supplied.</para></listitem>
      <listitem><para><link linkend="kill-all-fvwm2-modules"><function>kill-all-fvwm2-modules</function></link> -- No documentation supplied.</para></listitem>
      <listitem><para><link linkend="kill-fvwm2-modules-by-name"><function>kill-fvwm2-modules-by-name</function></link> -- No documentation supplied.</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>scheme/gnome-hints.scm</title> <itemizedlist>
      <listitem><para><link linkend="gnome-desktop-press"><function>gnome-desktop-press</function></link> -- Send a button-press N to the gnome desktop manager.</para></listitem>
      <listitem><para><link linkend="gnome-desktop-click"><function>gnome-desktop-click</function></link> -- Send a button-press N to the gnome desktop manager.</para></listitem>
      <listitem><para><link linkend="gnome-desktop-press-1"><function>gnome-desktop-press-1</function></link> -- Send a button-press 1 to the gnome desktop manager.</para></listitem>
      <listitem><para><link linkend="gnome-desktop-press-2"><function>gnome-desktop-press-2</function></link> -- Send a button-press 1 to the gnome desktop manager.</para></listitem>
      <listitem><para><link linkend="gnome-desktop-press-3"><function>gnome-desktop-press-3</function></link> -- Send a button-press 1 to the gnome desktop manager.</para></listitem>
      <listitem><para><link linkend="gnome-desktop-click-1"><function>gnome-desktop-click-1</function></link> -- Send a button-press 1 and button-release 1 to the gnome desktop manager.</para></listitem>
      <listitem><para><link linkend="gnome-desktop-click-2"><function>gnome-desktop-click-2</function></link> -- Send a button-press 1 and button-release 2 to the gnome desktop manager.</para></listitem>
      <listitem><para><link linkend="gnome-desktop-click-3"><function>gnome-desktop-click-3</function></link> -- Send a button-press 1 and button-release 3 to the gnome desktop manager.</para></listitem>
      <listitem><para><link linkend="enable-gnome-hints"><function>enable-gnome-hints</function></link> -- Enable support for GNOME hints.</para></listitem>
      <listitem><para><link linkend="disable-gnome-hints"><function>disable-gnome-hints</function></link> -- Disable support for GNOME hints.</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>scheme/group.scm</title> <itemizedlist>
      <listitem><para><link linkend="group-window"><function>group-window</function></link> -- Returns a distinguished window of GROUP.</para></listitem>
      <listitem><para><link linkend="group-to-windows"><function>group->windows</function></link> -- Returns a list of windows belonging to GROUP.</para></listitem>
      <listitem><para><link linkend="raise-group"><function>raise-group</function></link> -- Raise members of GROUP above all other windows.</para></listitem>
      <listitem><para><link linkend="lower-group"><function>lower-group</function></link> -- Raise members of GROUP above all other windows.</para></listitem>
      <listitem><para><link linkend="move-group-relative"><function>move-group-relative</function></link> -- Move all members of GROUP by DX, DY pixels.</para></listitem>
      <listitem><para><link linkend="move-group"><function>move-group</function></link> -- Move GROUP to virtual coordinates X, Y.</para></listitem>
      <listitem><para><link linkend="move-group-to-desk"><function>move-group-to-desk</function></link> -- Move all members of GROUP to DESK.</para></listitem>
      <listitem><para><link linkend="interactive-move-group"><function>interactive-move-group</function></link> -- Move GROUP interactively.</para></listitem>
      <listitem><para><link linkend="deiconify-group"><function>deiconify-group</function></link> -- Deiconify all members of GROUP.</para></listitem>
      <listitem><para><link linkend="deiconify-group-or-window"><function>deiconify-group-or-window</function></link> -- Deiconify WIN, and perhaps all members of its group.</para></listitem>
      <listitem><para><link linkend="iconify-group"><function>iconify-group</function></link> -- Iconify GROUP into one icon.</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>scheme/gtk.scm</title> <itemizedlist>
      <listitem><para><link linkend="scwm-gtk-sync"><function>scwm-gtk-sync</function></link> -- Dispatch all pending gtk-events.</para></listitem>
      <listitem><para><link linkend="gtk-pixmap-new-search-scwm-path"><function>gtk-pixmap-new-search-scwm-path</function></link> -- Return the new pixmap object as <link linkend="gtk-pixmap-new"><function>gtk-pixmap-new</function></link> does, but search Scwm's image-load-path for it.</para></listitem>
      <listitem><para><link linkend="gtk-window-to-scwm-window"><function>gtk-window->scwm-window</function></link> -- Return the Scwm window object corresponding to GTKWIN.</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>scheme/highlight-current-window.scm</title> <itemizedlist>
      <listitem><para><link linkend="start-highlighting-selected-window"><function>start-highlighting-selected-window</function></link> -- Highlight the current window during window selections.</para></listitem>
      <listitem><para><link linkend="end-highlighting-selected-window"><function>end-highlighting-selected-window</function></link> -- Stop highlighting the current window during window selections.</para></listitem>
      <listitem><para><link linkend="start-highlighting-current-window"><function>start-highlighting-current-window</function></link> -- Add appropriate hook procedures to make the window with the mouse be highlighted.</para></listitem>
      <listitem><para><link linkend="end-highlighting-current-window"><function>end-highlighting-current-window</function></link> -- Remove the hook procedures that make the window with mouse be highlighted.</para></listitem>
      <listitem><para><link linkend="highlight-current-window"><function>highlight-current-window</function></link> -- No documentation supplied.</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>scheme/hover-focus.scm</title> <itemizedlist>
      <listitem><para><link linkend="set-hover-focus-delay-x"><function>set-hover-focus-delay!</function></link> -- Set the hover-focus delay to DELAY (in ms) for WIN.</para></listitem>
      <listitem><para><link linkend="set-hover-focus-x"><function>set-hover-focus!</function></link> -- Turn hover-focus on (<literal>#t</literal>) or off (<literal>#f</literal>) for WIN.</para></listitem>
      <listitem><para><link linkend="uninstall-hover-focus"><function>uninstall-hover-focus</function></link> -- Remove the hover-focus procedures from the Scwm hooks.</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>scheme/image-loaders.scm</title> <itemizedlist>
      <listitem><para><link linkend="ImageMagick-loader"><function>ImageMagick-loader</function></link> -- Tries to load an arbitrary image using ImageMagick's <link linkend="convert"><function>convert</function></link>.</para></listitem>
      <listitem><para><link linkend="netpbm-loader"><function>netpbm-loader</function></link> -- Tries to load an arbitrary image using the netpbm packge.</para></listitem>
      <listitem><para><link linkend="try-everything-loader"><function>try-everything-loader</function></link> -- Tries to load an arbitrary image, using any available loader.</para></listitem>
      <listitem><para><link linkend="support-image-conversion"><function>support-image-conversion</function></link> -- Set things up to try to load arbitrary images.</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>scheme/kde-hints.scm</title> <itemizedlist>
      <listitem><para><link linkend="kwm-send-window-list"><function>kwm-send-window-list</function></link> -- No documentation supplied.</para></listitem>
      <listitem><para><link linkend="kwm-emulation-initialize"><function>kwm-emulation-initialize</function></link> -- No documentation supplied.</para></listitem>
      <listitem><para><link linkend="kwm-emulation-reset"><function>kwm-emulation-reset</function></link> -- No documentation supplied.</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>scheme/key-mover-xtest.scm</title> <itemizedlist>
      <listitem><para><link linkend="key-mouse-moves"><function>key-mouse-moves</function></link> -- Bind four keys to move the mouse in compass directions by PCT-OF-SCREEN.</para></listitem>
      <listitem><para><link linkend="key-viewport-moves"><function>key-viewport-moves</function></link> -- Bind four keys to move the viewport in compass directions by PCT-OF-SCREEN.</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>scheme/key-mover.scm</title> <itemizedlist>
      <listitem><para><link linkend="key-mouse-moves"><function>key-mouse-moves</function></link> -- Bind four keys to move the mouse in compass directions by PCT-OF-SCREEN.</para></listitem>
      <listitem><para><link linkend="key-viewport-moves"><function>key-viewport-moves</function></link> -- Bind four keys to move the viewport in compass directions by PCT-OF-SCREEN.</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>scheme/listops.scm</title> <itemizedlist>
      <listitem><para><link linkend="iota"><function>iota</function></link> -- Generate a list of the integers from 0 to N-1 in order.</para></listitem>
      <listitem><para><link linkend="reverse-iota"><function>reverse-iota</function></link> -- Generate a list of the integers from N-1 to 0 in order.</para></listitem>
      <listitem><para><link linkend="accumulate"><function>accumulate</function></link> -- Repeatedly apply PROC to a current value and a member of L.</para></listitem>
      <listitem><para><link linkend="reduce"><function>reduce</function></link> -- Repeatedly apply PROC to a current value and a member of L.</para></listitem>
      <listitem><para><link linkend="append-map"><function>append-map</function></link> -- Do the same thing as map, but collect results with <link linkend="append"><function>append</function></link>,  not <link linkend="cons"><function>cons</function></link>.</para></listitem>
      <listitem><para><link linkend="filter"><function>filter</function></link> -- Return a list of those elements of L for which PRED is true.</para></listitem>
      <listitem><para><link linkend="there-exists-p"><function>there-exists?</function></link> -- Return true if PRED is true for at least one elements of L, otherwise false.</para></listitem>
      <listitem><para><link linkend="for-all-p"><function>for-all?</function></link> -- Return true if PRED is true for all elements of L, otherwise false.</para></listitem>
      <listitem><para><link linkend="and-map"><function>and-map</function></link> -- Apply PROC repeatedly, returning the first false value.</para></listitem>
      <listitem><para><link linkend="or-map"><function>or-map</function></link> -- Apply PROC repeatedly, returning the first true value.</para></listitem>
      <listitem><para><link linkend="list-index"><function>list-index</function></link> -- Return the integer position of OBJ in list L.</para></listitem>
      <listitem><para><link linkend="make-list"><function>make-list</function></link> -- Return a list containing N elements equal to the optional second argument.</para></listitem>
      <listitem><para><link linkend="map-in-order"><function>map-in-order</function></link> -- Process FIRST and the lists comprising REST as <link linkend="map"><function>map</function></link> would.</para></listitem>
      <listitem><para><link linkend="filter-map"><function>filter-map</function></link> -- Process FIRST and the lists comprising REST as <link linkend="map"><function>map</function></link> would.</para></listitem>
      <listitem><para><link linkend="delete-duplicates"><function>delete-duplicates</function></link> -- Return a list that has the elements of L with duplicates omitted.</para></listitem>
      <listitem><para><link linkend="list-without-elem"><function>list-without-elem</function></link> -- Return the list L with element E deleted.</para></listitem>
      <listitem><para><link linkend="repeat"><function>repeat</function></link> -- Builds a list of repeating values.</para></listitem>
      <listitem><para><link linkend="flatten"><function>flatten</function></link> -- Return LIST-OF-LISTS as a single flat list.</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>scheme/menus-extras.scm</title> <itemizedlist>
      <listitem><para><link linkend="menu-max-fold-lines"><function>menu-max-fold-lines</function></link> -- Return an approximation of the number of menuitems that will fit vertically on screen.</para></listitem>
      <listitem><para><link linkend="sorted-by-car-string"><function>sorted-by-car-string</function></link> -- Sort the elements of list L based on the string value of their <link linkend="car"><function>car</function></link>.</para></listitem>
      <listitem><para><link linkend="fold-menu-list"><function>fold-menu-list</function></link> -- Split ML into chained menus of no more than MAX-LINES items.</para></listitem>
      <listitem><para><link linkend="split-list-by-group"><function>split-list-by-group</function></link> -- No documentation supplied.</para></listitem>
      <listitem><para><link linkend="fold-menu-list-by-group"><function>fold-menu-list-by-group</function></link> -- Split ML-CONS into chained menus based on their group.</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>scheme/message-window.scm</title> <itemizedlist>
      <listitem><para><link linkend="gravity-to-alignments"><function>gravity->alignments</function></link> -- Return a list of two numeric alignments corresponding to a GRAVITY.</para></listitem>
      <listitem><para><link linkend="position-message-window-x"><function>position-message-window!</function></link> -- Move the move/resize message window's GRAVITY point to (X,Y).</para></listitem>
      <listitem><para><link linkend="message-window-options"><function>message-window-options</function></link> -- Allow specification of message-window behavior for standard actions.</para></listitem>
      <listitem><para><link linkend="message-window-style"><function>message-window-style</function></link> -- Set visual style of MSGWIN.</para></listitem>
      <listitem><para><link linkend="make-message-window-with-image"><function>make-message-window-with-image</function></link> -- Return a new message window with IMG as a background, sized appropriately.</para></listitem>
      <listitem><para><link linkend="make-message-window-clone-default"><function>make-message-window-clone-default</function></link> -- Return a new message window that has the default style.</para></listitem>
      <listitem><para><link linkend="message-window-copy-style-x"><function>message-window-copy-style!</function></link> -- Copy the visual style of MSGWIN-SOURCE to the style for MSGWIN.</para></listitem>
      <listitem><para><link linkend="display-message-briefly"><function>display-message-briefly</function></link> -- Display MSG in the message window for SEC-TIMEOUT seconds.</para></listitem>
      <listitem><para><link linkend="make-message-window-win-copy"><function>make-message-window-win-copy</function></link> -- Return a message window with a background that is a copy of the image in WIN.</para></listitem>
      <listitem><para><link linkend="with-frozen-root-window"><function>with-frozen-root-window</function></link> -- Execute THUNK with a frozen root window.</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>scheme/minimal.scm</title> <itemizedlist>
      <listitem><para><link linkend="scwm-module-loaded-p"><function>scwm-module-loaded?</function></link> -- Return <literal>#t</literal> iff MODULE has been loaded.</para></listitem>
      <listitem><para><link linkend="eval-after-load"><function>eval-after-load</function></link> -- Run PROC after MODULE is loaded.</para></listitem>
      <listitem><para><link linkend="process-use-scwm-modules"><function>process-use-scwm-modules</function></link> -- Returns a list of all the modules loaded in successfully.</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>scheme/modifier-key-bindings.scm</title> <itemizedlist>
      <listitem><para><link linkend="bind-two-modifier-key-events"><function>bind-two-modifier-key-events</function></link> -- Bind PROC-PRESS and PROC-RELEASE to be invoked on a multi-modifier key event.</para></listitem>
      <listitem><para><link linkend="unbind-two-modifier-key-events"><function>unbind-two-modifier-key-events</function></link> -- Unbind events attached to a multi-modifier key event.</para></listitem>
      <listitem><para><link linkend="bind-three-modifier-key-events"><function>bind-three-modifier-key-events</function></link> -- Bind PROC-PRESS and PROC-RELEASE to be invoked on a multi-modifier key event.</para></listitem>
      <listitem><para><link linkend="unbind-three-modifier-key-events"><function>unbind-three-modifier-key-events</function></link> -- Unbind events attached to a multi-modifier key event.</para></listitem>
      <listitem><para><link linkend="bind-four-modifier-key-events"><function>bind-four-modifier-key-events</function></link> -- Bind PROC-PRESS and PROC-RELEASE to be invoked on a multi-modifier key event.</para></listitem>
      <listitem><para><link linkend="unbind-four-modifier-key-events"><function>unbind-four-modifier-key-events</function></link> -- Unbind events attached to a multi-modifier key event.</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>scheme/module-types.scm</title> <itemizedlist>
      <listitem><para><link linkend="module-event-name-from-number"><function>module-event-name-from-number</function></link> -- Return the string module event name for event number NUM.</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>scheme/netscape.scm</title> <itemizedlist>
      <listitem><para><link linkend="netscape-win"><function>netscape-win</function></link> -- Return a netscape window, prefer a visible netscape window.</para></listitem>
      <listitem><para><link linkend="run-in-netscape"><function>run-in-netscape</function></link> -- Runs COMMAND in a Netscape window, calling COMPLETION when done, if set.</para></listitem>
      <listitem><para><link linkend="uri-escapify-comma"><function>uri-escapify-comma</function></link> -- Replace commas in URI with the %2C escape code.</para></listitem>
      <listitem><para><link linkend="netscape-goto-url"><function>netscape-goto-url</function></link> -- Make netscape go to the location URL.</para></listitem>
      <listitem><para><link linkend="netscape-goto-cut-buffer-url"><function>netscape-goto-cut-buffer-url</function></link> -- Goto the url that is held in the X11 cut buffer.</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>scheme/nonants.scm</title> <itemizedlist>
      <listitem><para><link linkend="get-window-with-nonant"><function>get-window-with-nonant</function></link> -- Select a WINDOW and a NONANT, defaulting to the current window context.</para></listitem>
      <listitem><para><link linkend="get-window-with-nonant-interactively"><function>get-window-with-nonant-interactively</function></link> -- Interactively select a window and a nonant.</para></listitem>
      <listitem><para><link linkend="window-and-offsets-to-nonant"><function>window-and-offsets->nonant</function></link> -- Return a nonant number in [0,8] from a window position and an offset.</para></listitem>
      <listitem><para><link linkend="get-window-nonant"><function>get-window-nonant</function></link> -- SELECT-LIST is a list of (win x y), returns the nonant selected.</para></listitem>
      <listitem><para><link linkend="nonant-to-string"><function>nonant->string</function></link> -- Return the brief string name for NONANT, an integer.</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>scheme/number-convert.scm</title> <itemizedlist>
      <listitem><para><link linkend="char-value"><function>char-value</function></link> -- Return the integer that corresponds to the Ascii code for CH.</para></listitem>
      <listitem><para><link linkend="number-in-base"><function>number-in-base</function></link> -- Return the integer that corresponds to string NUMBER in base BASE.</para></listitem>
      <listitem><para><link linkend="hex"><function>hex</function></link> -- Return the integer that corresponds to string NUMBER as a hexadecimal value.</para></listitem>
      <listitem><para><link linkend="oct"><function>oct</function></link> -- Return the integer that corresponds to string NUMBER as an octal value.</para></listitem>
      <listitem><para><link linkend="binary"><function>binary</function></link> -- Return the integer that corresponds to string NUMBER as a binary value.</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>scheme/path-cache.scm</title> <itemizedlist>
      <listitem><para><link linkend="program-exists-p"><function>program-exists?</function></link> -- Return <literal>#t</literal> iff PROGRAM-NAME is in the current $PATH.</para></listitem>
      <listitem><para><link linkend="initialize-programs-that-exist"><function>initialize-programs-that-exist</function></link> -- Initializes the cache with programs that exist in the current $PATH.</para></listitem>
      <listitem><para><link linkend="cached-program-exists-p"><function>cached-program-exists?</function></link> -- Return <literal>#t</literal> if PROGRAM-NAME is in the cache of programs that exist.</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>scheme/placement.scm</title> <itemizedlist>
      <listitem><para><link linkend="place-in-viewport"><function>place-in-viewport</function></link> -- Move WIN to the (XX, YY) viewport.</para></listitem>
      <listitem><para><link linkend="place-on-desk"><function>place-on-desk</function></link> -- Move window WIN to desk DESK.</para></listitem>
      <listitem><para><link linkend="interactive-place"><function>interactive-place</function></link> -- Place WIN interactively.</para></listitem>
      <listitem><para><link linkend="place-at-point"><function>place-at-point</function></link> -- Place WIN at the pointer position.</para></listitem>
      <listitem><para><link linkend="center-placement"><function>center-placement</function></link> -- Place window in the center of the current viewport.</para></listitem>
      <listitem><para><link linkend="in-viewport-placement"><function>in-viewport-placement</function></link> -- Return a procedure that takes a window and places it in viewport (XX, YY).</para></listitem>
      <listitem><para><link linkend="on-desk-placement"><function>on-desk-placement</function></link> -- Return a procedure that takes a window and places it on DESK.</para></listitem>
      <listitem><para><link linkend="interactive-placement"><function>interactive-placement</function></link> -- Return a procedure that takes a window and places it interactively.</para></listitem>
      <listitem><para><link linkend="at-point-placement"><function>at-point-placement</function></link> -- Return a procedure that places a window at the pointer position.</para></listitem>
      <listitem><para><link linkend="virtual-switch-placement"><function>virtual-switch-placement</function></link> -- Wrap placement procedure PROC with virtual switching code.</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>scheme/preferences.scm</title> <itemizedlist>
      <listitem><para><link linkend="scwm-option-short-documentation"><function>scwm-option-short-documentation</function></link> -- No documentation supplied.</para></listitem>
      <listitem><para><link linkend="popup-docs-for"><function>popup-docs-for</function></link> -- No documentation supplied.</para></listitem>
      <listitem><para><link linkend="toggle-docs-for"><function>toggle-docs-for</function></link> -- No documentation supplied.</para></listitem>
      <listitem><para><link linkend="gui-set"><function>gui-set</function></link> -- No documentation supplied.</para></listitem>
      <listitem><para><link linkend="prompt-from-name"><function>prompt-from-name</function></link> -- No documentation supplied.</para></listitem>
      <listitem><para><link linkend="dummy-prompt-hbox"><function>dummy-prompt-hbox</function></link> -- Create and return a dummy-prompting hbox and entry.</para></listitem>
      <listitem><para><link linkend="option-widget-and-getter"><function>option-widget-and-getter</function></link> -- No documentation supplied.</para></listitem>
      <listitem><para><link linkend="option-menu"><function>option-menu</function></link> -- No documentation supplied.</para></listitem>
      <listitem><para><link linkend="popup-option-menu"><function>popup-option-menu</function></link> -- No documentation supplied.</para></listitem>
      <listitem><para><link linkend="scwm-options-menu"><function>scwm-options-menu</function></link> -- No documentation supplied.</para></listitem>
      <listitem><para><link linkend="scwm-options-dialog"><function>scwm-options-dialog</function></link> -- Popup a scwm options dialog box.</para></listitem>
      <listitem><para><link linkend="sort-options-by-type"><function>sort-options-by-type</function></link> -- No documentation supplied.</para></listitem>
      <listitem><para><link linkend="scwm-options-notebook"><function>scwm-options-notebook</function></link> -- No documentation supplied.</para></listitem>
      <listitem><para><link linkend="scwm-options-listbook"><function>scwm-options-listbook</function></link> -- No documentation supplied.</para></listitem>
      <listitem><para><link linkend="scwm-options-vbox-page"><function>scwm-options-vbox-page</function></link> -- Popup a scwm options dialog box.</para></listitem>
      <listitem><para><link linkend="scwm-options-string"><function>scwm-options-string</function></link> -- Return a string that, when evalled, resets preferences to current values.</para></listitem>
      <listitem><para><link linkend="save-preferences"><function>save-preferences</function></link> -- Save the current Scwm preferences to FILENAME.</para></listitem>
      <listitem><para><link linkend="load-preferences"><function>load-preferences</function></link> -- Load FILENAME to restore the Scwm preferences.</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>scheme/prefs-menu.scm</title> <itemizedlist>
      <listitem><para><link linkend="save-settings"><function>save-settings</function></link> -- No documentation supplied.</para></listitem>
      <listitem><para><link linkend="mod-desk-size-x"><function>mod-desk-size!</function></link> -- Modify the current desktop size by the given parameter.</para></listitem>
      <listitem><para><link linkend="help-mesg"><function>help-mesg</function></link> -- No documentation supplied.</para></listitem>
      <listitem><para><link linkend="ask-string"><function>ask-string</function></link> -- Ask for a string with PROMPT.</para></listitem>
      <listitem><para><link linkend="menu-prefs"><function>menu-prefs</function></link> -- Generate the <link linkend="Preferences"><function>Preferences</function></link> menu.</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>scheme/prompt-bool.scm</title> <itemizedlist>
      <listitem><para><link linkend="prompt-bool"><function>prompt-bool</function></link> -- Prompt with PROMPT for a boolean value, and call PROC with result if Ok button is clicked.</para></listitem>
      <listitem><para><link linkend="prompt-bool-hbox"><function>prompt-bool-hbox</function></link> -- Create and return a boolean-prompting hbox and button.</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>scheme/prompt-color.scm</title> <itemizedlist>
      <listitem><para><link linkend="prompt-color"><function>prompt-color</function></link> -- Prompt using PROMPT for a color and call PROC with value if Ok is clicked.</para></listitem>
      <listitem><para><link linkend="prompt-color-hbox"><function>prompt-color-hbox</function></link> -- Create and return a color-prompting hbox, complete with link to full color dialog.</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>scheme/prompt-file.scm</title> <itemizedlist>
      <listitem><para><link linkend="prompt-file"><function>prompt-file</function></link> -- Prompt using PROMPT for a file and call PROC with value if Ok is clicked.</para></listitem>
      <listitem><para><link linkend="prompt-file-hbox"><function>prompt-file-hbox</function></link> -- Create and return a file-prompting hbox, complete with link to full file dialog.</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>scheme/prompt-font.scm</title> <itemizedlist>
      <listitem><para><link linkend="prompt-font"><function>prompt-font</function></link> -- Prompt using PROMPT for a font and call PROC with value if Ok is clicked.</para></listitem>
      <listitem><para><link linkend="prompt-font-hbox"><function>prompt-font-hbox</function></link> -- Create and return a font-prompting hbox, complete with link to full font dialog.</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>scheme/prompt-proc.scm</title> <itemizedlist>
      <listitem><para><link linkend="prompt-proc"><function>prompt-proc</function></link> -- Prompt using PROMPT for a proc and call PROC with value if Ok is clicked.</para></listitem>
      <listitem><para><link linkend="prompt-proc-hbox"><function>prompt-proc-hbox</function></link> -- Create and return a proc-prompting hbox, complete with link to full proc dialog.</para></listitem>
      <listitem><para><link linkend="gtk-text-replace"><function>gtk-text-replace</function></link> -- No documentation supplied.</para></listitem>
      <listitem><para><link linkend="gtk-proc-selection-new"><function>gtk-proc-selection-new</function></link> -- Returns a new procedure-selecting dialog box.</para></listitem>
      <listitem><para><link linkend="gtk-proc-selection-toplevel-widget"><function>gtk-proc-selection-toplevel-widget</function></link> -- Returns the toplevel window widget from PROC-DIALOG.</para></listitem>
      <listitem><para><link linkend="gtk-proc-selection-ok-button"><function>gtk-proc-selection-ok-button</function></link> -- Returns the ok button from PROC-DIALOG.</para></listitem>
      <listitem><para><link linkend="gtk-proc-selection-cancel-button"><function>gtk-proc-selection-cancel-button</function></link> -- Returns the cancel button from PROC-DIALOG.</para></listitem>
      <listitem><para><link linkend="gtk-proc-selection-clist-widget"><function>gtk-proc-selection-clist-widget</function></link> -- Returns the clist widgetfrom PROC-DIALOG.</para></listitem>
      <listitem><para><link linkend="gtk-proc-selection-get-procname"><function>gtk-proc-selection-get-procname</function></link> -- Returns the currently selected procedure name from PROC-DIALOG.</para></listitem>
      <listitem><para><link linkend="gtk-proc-selection-get-procedure"><function>gtk-proc-selection-get-procedure</function></link> -- Returns the currently selected procedure from PROC-DIALOG.</para></listitem>
      <listitem><para><link linkend="gtk-clist-get-row-values"><function>gtk-clist-get-row-values</function></link> -- Return a list of the COL columns of row ROW of CLIST.</para></listitem>
      <listitem><para><link linkend="module-and-proc-names-to-proc"><function>module-and-proc-names->proc</function></link> -- Return the procedure named PROC-NAME from module named MODULE-NAME.</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>scheme/prompt-range.scm</title> <itemizedlist>
      <listitem><para><link linkend="prompt-range"><function>prompt-range</function></link> -- Prompt using PROMPT for a numeric value in RANGE, and call PROC with value if Ok is clicked.</para></listitem>
      <listitem><para><link linkend="prompt-integer-range"><function>prompt-integer-range</function></link> -- Prompt using PROMPT for an integer value in RANGE, and call PROC with value if Ok is clicked.</para></listitem>
      <listitem><para><link linkend="prompt-range-hbox"><function>prompt-range-hbox</function></link> -- Create and return a range-prompting hbox and scale, label.</para></listitem>
      <listitem><para><link linkend="prompt-integer-range-hbox"><function>prompt-integer-range-hbox</function></link> -- Create and return an integer-range-prompting hbox and scale, label.</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>scheme/prompt-string.scm</title> <itemizedlist>
      <listitem><para><link linkend="prompt-string"><function>prompt-string</function></link> -- Use PROMPT as prompt in text entry widget and call PROC with the entered string.</para></listitem>
      <listitem><para><link linkend="prompt-string-hbox"><function>prompt-string-hbox</function></link> -- Create and return a string-prompting hbox and entry.</para></listitem>
      <listitem><para><link linkend="prompt-path-hbox"><function>prompt-path-hbox</function></link> -- Create and return a path-prompting hbox and entry.</para></listitem>
      <listitem><para><link linkend="simple-prompt-proc-hbox"><function>simple-prompt-proc-hbox</function></link> -- Create and return a procedure-prompting hbox and entry.</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>scheme/property-respond.scm</title> <itemizedlist>
      <listitem><para><link linkend="property-changed-debug"><function>property-changed-debug</function></link> -- Print debugging information about the property change of PROP on WIN.</para></listitem>
      <listitem><para><link linkend="property-changed-respond"><function>property-changed-respond</function></link> -- Handle various property changes of PROP on WIN.</para></listitem>
      <listitem><para><link linkend="start-property-respond"><function>start-property-respond</function></link> -- Turn on property-change responses.</para></listitem>
      <listitem><para><link linkend="stop-property-respond"><function>stop-property-respond</function></link> -- Turn off property-change responses.</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>scheme/quote.scm</title> <itemizedlist>
      <listitem><para><link linkend="quote-key-event"><function>quote-key-event</function></link> -- No documentation supplied.</para></listitem>
      <listitem><para><link linkend="quote-mouse-event"><function>quote-mouse-event</function></link> -- No documentation supplied.</para></listitem>
      <listitem><para><link linkend="mask-to-keycodes"><function>mask->keycodes</function></link> -- No documentation supplied.</para></listitem>
      <listitem><para><link linkend="xtest-fake-modmask"><function>xtest-fake-modmask</function></link> -- No documentation supplied.</para></listitem>
      <listitem><para><link linkend="xtest-fake-modmask-key"><function>xtest-fake-modmask-key</function></link> -- No documentation supplied.</para></listitem>
      <listitem><para><link linkend="xtest-fake-modmask-button"><function>xtest-fake-modmask-button</function></link> -- No documentation supplied.</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>scheme/reflection.scm</title> <itemizedlist>
      <listitem><para><link linkend="procedure-arity"><function>procedure-arity</function></link> -- Return the arity values for PROC.</para></listitem>
      <listitem><para><link linkend="procedure-num-required-args"><function>procedure-num-required-args</function></link> -- Return the number of required arguments for PROC.</para></listitem>
      <listitem><para><link linkend="procedure-num-optional-args"><function>procedure-num-optional-args</function></link> -- Return the number of optional arguments for PROC.</para></listitem>
      <listitem><para><link linkend="procedure-takes-rest-arg-p"><function>procedure-takes-rest-arg?</function></link> -- Return <literal>#t</literal> iff PROC take a rest argument.</para></listitem>
      <listitem><para><link linkend="procedure-formals"><function>procedure-formals</function></link> -- Return a list of the formal arguments for PROC.</para></listitem>
      <listitem><para><link linkend="procedure-required-formals"><function>procedure-required-formals</function></link> -- Return a list of the required formal arguments for PROC.</para></listitem>
      <listitem><para><link linkend="procedure-optargs-arglist"><function>procedure-optargs-arglist</function></link> -- Return a list of the optargs keyword arguments for PROC.</para></listitem>
      <listitem><para><link linkend="procedure-keyword-formals"><function>procedure-keyword-formals</function></link> -- Returns an a-list of the optargs keyword arguments and default values for PROC.</para></listitem>
      <listitem><para><link linkend="procedure-optional-formals"><function>procedure-optional-formals</function></link> -- Returns a list of the optional arguments for PROC.</para></listitem>
      <listitem><para><link linkend="apropos-internal-with-modules"><function>apropos-internal-with-modules</function></link> -- Return a list of accessible variable names and the modules they are defined in.</para></listitem>
      <listitem><para><link linkend="procedure-is-interactive-p"><function>procedure-is-interactive?</function></link> -- Return <literal>#t</literal> iff PROC can take no arguments.</para></listitem>
      <listitem><para><link linkend="procedure-apropos-with-modules"><function>procedure-apropos-with-modules</function></link> -- Returns a list of procedures that match RGX along with defined-in modules.</para></listitem>
      <listitem><para><link linkend="procedure-apropos"><function>procedure-apropos</function></link> -- Returns a list of procedures that match RGX.</para></listitem>
      <listitem><para><link linkend="interactive-procedure-apropos-with-modules"><function>interactive-procedure-apropos-with-modules</function></link> -- Returns a list of procedures that match RGX and that can take no arguments.</para></listitem>
      <listitem><para><link linkend="interactive-procedure-apropos"><function>interactive-procedure-apropos</function></link> -- Returns a list of interactive procedures that match RGX.</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>scheme/register.scm</title> <itemizedlist>
      <listitem><para><link linkend="get-register-name"><function>get-register-name</function></link> -- No documentation supplied.</para></listitem>
      <listitem><para><link linkend="set-register"><function>set-register</function></link> -- Set contents of Scwm register named REGISTER to VALUE.</para></listitem>
      <listitem><para><link linkend="get-register"><function>get-register</function></link> -- Return contents of Emacs register named REGISTER, or <literal>#f</literal> if none.</para></listitem>
      <listitem><para><link linkend="focus-to-register"><function>focus-to-register</function></link> -- No documentation supplied.</para></listitem>
      <listitem><para><link linkend="window-configuration-to-register"><function>window-configuration-to-register</function></link> -- No documentation supplied.</para></listitem>
      <listitem><para><link linkend="global-window-configuration-to-register"><function>global-window-configuration-to-register</function></link> -- No documentation supplied.</para></listitem>
      <listitem><para><link linkend="jump-to-register"><function>jump-to-register</function></link> -- No documentation supplied.</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>scheme/report-usage.scm</title> <itemizedlist>
      <listitem><para><link linkend="report-scwm-usage"><function>report-scwm-usage</function></link> -- Log your usage of scwm to a central host.</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>scheme/rgb-database.scm</title> <itemizedlist>
      <listitem><para><link linkend="read-and-append-to"><function>read-and-append-to</function></link> -- Read in the lines from port P and return them.</para></listitem>
      <listitem><para><link linkend="rgb-colors"><function>rgb-colors</function></link> -- Read in the rgb-colors database.</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>scheme/ScwmBiff.scm</title> <itemizedlist>
      <listitem><para><link linkend="close-ScwmBiff"><function>close-ScwmBiff</function></link> -- Close the ScwmBiff notification window.</para></listitem>
      <listitem><para><link linkend="activate-ScwmBiff"><function>activate-ScwmBiff</function></link> -- Turn on the ScwmBiff notification service.</para></listitem>
      <listitem><para><link linkend="deactivate-ScwmBiff"><function>deactivate-ScwmBiff</function></link> -- Make ScwmBiff no longer notify, but leave visible.</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>scheme/ScwmButtons.scm</title> <itemizedlist>
      <listitem><para><link linkend="run-ScwmButtons"><function>run-ScwmButtons</function></link> -- No documentation supplied.</para></listitem>
      <listitem><para><link linkend="close-ScwmButtons"><function>close-ScwmButtons</function></link> -- Close the ScwmButtons window of SB.</para></listitem>
      <listitem><para><link linkend="button-item"><function>button-item</function></link> -- Create a button item for a ScwmButtons window.</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>scheme/ScwmClock.scm</title> <itemizedlist>
      <listitem><para><link linkend="run-ScwmClock"><function>run-ScwmClock</function></link> -- No documentation supplied.</para></listitem>
      <listitem><para><link linkend="close-ScwmClock"><function>close-ScwmClock</function></link> -- Close the ScwmClock with handle SC.</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>scheme/ScwmDeskButtons.scm</title> <itemizedlist>
      <listitem><para><link linkend="run-ScwmDeskButtons"><function>run-ScwmDeskButtons</function></link> -- No documentation supplied.</para></listitem>
      <listitem><para><link linkend="close-ScwmDeskButtons"><function>close-ScwmDeskButtons</function></link> -- No documentation supplied.</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>scheme/send-string.scm</title> <itemizedlist>
      <listitem><para><link linkend="printable-char-to-keysym-string"><function>printable-char->keysym-string</function></link> -- Return the keysym string corresponding to a printable character.</para></listitem>
      <listitem><para><link linkend="X-synthetic-send-string"><function>X-synthetic-send-string</function></link> -- Send string STR to WIN via synthetic X events.</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>scheme/shutdown-opts.scm</title> <itemizedlist>
      <listitem><para><link linkend="shutdown-options"><function>shutdown-options</function></link> -- Configure shutdown preferences.</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>scheme/simple-constraints.scm</title> <itemizedlist>
      <listitem><para><link linkend="keep-tops-even"><function>keep-tops-even</function></link> -- Keep W1 and W2 aligned at the top.</para></listitem>
      <listitem><para><link linkend="keep-lefts-even"><function>keep-lefts-even</function></link> -- Keep W1 and W2 aligned at the left.</para></listitem>
      <listitem><para><link linkend="keep-bottoms-even"><function>keep-bottoms-even</function></link> -- Keep W1 and W2 aligned at the bottom.</para></listitem>
      <listitem><para><link linkend="keep-rights-even"><function>keep-rights-even</function></link> -- Keep W1 and W2 aligned at the right.</para></listitem>
      <listitem><para><link linkend="keep-to-left-of"><function>keep-to-left-of</function></link> -- Keep W1 to the left of W2.</para></listitem>
      <listitem><para><link linkend="keep-above"><function>keep-above</function></link> -- Keep W1 wholly above W2.</para></listitem>
      <listitem><para><link linkend="keep-top-at-v"><function>keep-top-at-v</function></link> -- Keep W1's top at cl-variable V's pixel value.</para></listitem>
      <listitem><para><link linkend="keep-left-at-v"><function>keep-left-at-v</function></link> -- Keep W1's left at cl-variable V's pixel value.</para></listitem>
      <listitem><para><link linkend="keep-right-at-v"><function>keep-right-at-v</function></link> -- Keep W1's right at cl-variable Vs pixel value.</para></listitem>
      <listitem><para><link linkend="keep-full-width"><function>keep-full-width</function></link> -- Keep W1 and W2 sum of widths equal to the display's width.</para></listitem>
      <listitem><para><link linkend="keep-full-height"><function>keep-full-height</function></link> -- Keep W1 and W2 sum of heights equal to the display's height.</para></listitem>
      <listitem><para><link linkend="keep-adjacent-horizontal"><function>keep-adjacent-horizontal</function></link> -- Keep W1's right edge aligned with W2's left edge.</para></listitem>
      <listitem><para><link linkend="keep-adjacent-vertical"><function>keep-adjacent-vertical</function></link> -- Keep W1's bottom edge aligned with W2's top edge.</para></listitem>
      <listitem><para><link linkend="keep-at-left-edge"><function>keep-at-left-edge</function></link> -- Keep W's left edge at the left edge of the desktop.</para></listitem>
      <listitem><para><link linkend="keep-at-top-edge"><function>keep-at-top-edge</function></link> -- Keep W's top edge at the top edge of the desktop.</para></listitem>
      <listitem><para><link linkend="keep-at-right-edge"><function>keep-at-right-edge</function></link> -- Keep W's right edge at the right edge of the desktop.</para></listitem>
      <listitem><para><link linkend="keep-constant-width"><function>keep-constant-width</function></link> -- Keep W's width at WIDTH.</para></listitem>
      <listitem><para><link linkend="keep-constant-size"><function>keep-constant-size</function></link> -- Keep W's size from changing.</para></listitem>
      <listitem><para><link linkend="cl-set-solver-var"><function>cl-set-solver-var</function></link> -- Set solver S's variable CLV to value VALUE.</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>scheme/simplebiff.scm</title> <itemizedlist>
      <listitem><para><link linkend="stop-simplebiff"><function>stop-simplebiff</function></link> -- No documentation supplied.</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>scheme/snap.scm</title> <itemizedlist>
      <listitem><para><link linkend="snap-reset"><function>snap-reset</function></link> -- No documentation supplied.</para></listitem>
      <listitem><para><link linkend="snap-initialize"><function>snap-initialize</function></link> -- No documentation supplied.</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>scheme/sort.scm</title> <itemizedlist>
      <listitem><para><link linkend="sort"><function>sort</function></link> -- Returned LS sorted according to COMPARE (defaults to ascending numerical order).</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>scheme/stacking.scm</title> <itemizedlist>
      <listitem><para><link linkend="list-windows-above"><function>list-windows-above</function></link> -- List the windows above w from bottom to top.</para></listitem>
      <listitem><para><link linkend="list-windows-below"><function>list-windows-below</function></link> -- List the windows below w from top to bottom.</para></listitem>
      <listitem><para><link linkend="lower-window-below"><function>lower-window-below</function></link> -- Restack window W immediately below W2.</para></listitem>
      <listitem><para><link linkend="raise-window-above"><function>raise-window-above</function></link> -- Restack window W immediately above W2.</para></listitem>
      <listitem><para><link linkend="lower-by-one"><function>lower-by-one</function></link> -- Lower window W below the next window down that overlaps it.</para></listitem>
      <listitem><para><link linkend="raise-by-one"><function>raise-by-one</function></link> -- Raise window W above the next window up that overlaps it.</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>scheme/std-menus.scm</title> <itemizedlist>
      <listitem><para><link linkend="execute-on-selection"><function>execute-on-selection</function></link> -- Run COMMAND in the background, with arguments supplied by the X selection.</para></listitem>
      <listitem><para><link linkend="exe-on-selection"><function>exe-on-selection</function></link> -- Return a procedure that runs COMMAND in the background on the X selection.</para></listitem>
      <listitem><para><link linkend="make-xlock-menu"><function>make-xlock-menu</function></link> -- Create an xlock menu.</para></listitem>
      <listitem><para><link linkend="make-hosts-menu"><function>make-hosts-menu</function></link> -- Create a telnet menu.</para></listitem>
      <listitem><para><link linkend="make-context-menu"><function>make-context-menu</function></link> -- Create a menu of actions applicable to the filename in the X selection.</para></listitem>
      <listitem><para><link linkend="menu-window-theme"><function>menu-window-theme</function></link> -- No documentation supplied.</para></listitem>
      <listitem><para><link linkend="menu-global-theme"><function>menu-global-theme</function></link> -- No documentation supplied.</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>scheme/stringops.scm</title> <itemizedlist>
      <listitem><para><link linkend="make-string-usable-for-resource-key"><function>make-string-usable-for-resource-key</function></link> -- Return a converted string from STRING that can be used as an X resource key.</para></listitem>
      <listitem><para><link linkend="bool-to-string"><function>bool->string</function></link> -- Return the string "false" if ARG is <literal>#f</literal>, "true" otherwise.</para></listitem>
      <listitem><para><link linkend="color-to-string"><function>color->string</function></link> -- Convert scwm color object COLOR into an X11 name of that color.</para></listitem>
      <listitem><para><link linkend="size-to-string"><function>size->string</function></link> -- Convert a two-element list to a string.</para></listitem>
      <listitem><para><link linkend="number-to-hex-string"><function>number->hex-string</function></link> -- A convenience wrapper around `number->string' that returns N in base-16.</para></listitem>
      <listitem><para><link linkend="window-state-to-string"><function>window-state->string</function></link> -- Returns a string representation of the numerical WIN-STATE</para></listitem>
      <listitem><para><link linkend="gravity-to-string"><function>gravity->string</function></link> -- Returns a string representation of the numerical GRAVITY</para></listitem>
      <listitem><para><link linkend="chop-newline"><function>chop-newline</function></link> -- Return STR up to but not including the first newline character.</para></listitem>
      <listitem><para><link linkend="write-all"><function>write-all</function></link> -- Write all arguments into the port.</para></listitem>
      <listitem><para><link linkend="to-string"><function>to-string</function></link> -- Dump all arguments into a string.</para></listitem>
      <listitem><para><link linkend="string-join"><function>string-join</function></link> -- Concatenates the list STRINGS into a single string.</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>scheme/style-options.scm</title> <itemizedlist>
      <listitem><para><link linkend="add-window-style-option"><function>add-window-style-option</function></link> -- No documentation supplied.</para></listitem>
      <listitem><para><link linkend="add-boolean-style-option"><function>add-boolean-style-option</function></link> -- No documentation supplied.</para></listitem>
      <listitem><para><link linkend="add-window-hint-option"><function>add-window-hint-option</function></link> -- No documentation supplied.</para></listitem>
      <listitem><para><link linkend="add-boolean-hint-option"><function>add-boolean-hint-option</function></link> -- No documentation supplied.</para></listitem>
      <listitem><para><link linkend="add-property-style-option"><function>add-property-style-option</function></link> -- No documentation supplied.</para></listitem>
      <listitem><para><link linkend="style-option--handler"><function>style-option:handler</function></link> -- No documentation supplied.</para></listitem>
      <listitem><para><link linkend="style-option--type"><function>style-option:type</function></link> -- No documentation supplied.</para></listitem>
      <listitem><para><link linkend="style-option--cumulative-p"><function>style-option:cumulative?</function></link> -- No documentation supplied.</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>scheme/style.scm</title> <itemizedlist>
      <listitem><para><link linkend="style-one-window"><function>style-one-window</function></link> -- No documentation supplied.</para></listitem>
      <listitem><para><link linkend="window-style"><function>window-style</function></link> -- Specify various properties for windows matching CONDITION.</para></listitem>
      <listitem><para><link linkend="window-unstyle"><function>window-unstyle</function></link> -- Remove STYLE definition from list of window styles.</para></listitem>
      <listitem><para><link linkend="clear-window-style"><function>clear-window-style</function></link> -- No documentation supplied.</para></listitem>
      <listitem><para><link linkend="make-style"><function>make-style</function></link> -- No documentation supplied.</para></listitem>
      <listitem><para><link linkend="make-conditional-style"><function>make-conditional-style</function></link> -- No documentation supplied.</para></listitem>
      <listitem><para><link linkend="apply-style"><function>apply-style</function></link> -- No documentation supplied.</para></listitem>
      <listitem><para><link linkend="hide-side-decorations"><function>hide-side-decorations</function></link> -- No documentation supplied.</para></listitem>
      <listitem><para><link linkend="show-side-decorations"><function>show-side-decorations</function></link> -- No documentation supplied.</para></listitem>
      <listitem><para><link linkend="set-window-placement-proc-x"><function>set-window-placement-proc!</function></link> -- Set the 'placement-proc property of WIN to PROC.</para></listitem>
      <listitem><para><link linkend="set-window-transient-placement-proc-x"><function>set-window-transient-placement-proc!</function></link> -- Like <link linkend="set-window-placement-proc-x"><function>set-window-placement-proc!</function></link> (which see), but for transient</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>scheme/stylist.scm</title> <itemizedlist>
      <listitem><para><link linkend="make-window-style-menu"><function>make-window-style-menu</function></link> -- Offer a choice to style the window, like named windows, or a whole class.</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>scheme/theme-impl.scm</title> <itemizedlist>
      <listitem><para><link linkend="load-theme-image"><function>load-theme-image</function></link> -- No documentation supplied.</para></listitem>
      <listitem><para><link linkend="make-theme"><function>make-theme</function></link> -- Creates a theme object with the given NAME, WINDOW-STYLE, and BACKGROUND-STYLE.</para></listitem>
      <listitem><para><link linkend="theme--name"><function>theme:name</function></link> -- No documentation supplied.</para></listitem>
      <listitem><para><link linkend="theme--window-style"><function>theme:window-style</function></link> -- No documentation supplied.</para></listitem>
      <listitem><para><link linkend="theme--background-style"><function>theme:background-style</function></link> -- No documentation supplied.</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>scheme/themes.scm</title> <itemizedlist>
      <listitem><para><link linkend="use-theme"><function>use-theme</function></link> -- Use settings from THEME to set up the window manager.</para></listitem>
      <listitem><para><link linkend="load-theme"><function>load-theme</function></link> -- Returns a theme FNAME which is loaded from `*theme-path*'.</para></listitem>
      <listitem><para><link linkend="load-cached-theme"><function>load-cached-theme</function></link> -- No documentation supplied.</para></listitem>
      <listitem><para><link linkend="theme-names"><function>theme-names</function></link> -- No documentation supplied.</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>scheme/tile.scm</title> <itemizedlist>
      <listitem><para><link linkend="tile-windows"><function>tile-windows</function></link> -- Tile WINDOWS according to several parameters.</para></listitem>
      <listitem><para><link linkend="tile"><function>tile</function></link> -- Tile the windows on the specified desk.</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>scheme/time-convert.scm</title> <itemizedlist>
      <listitem><para><link linkend="sec-to-usec"><function>sec->usec</function></link> -- Convert SEC seconds into an equivalent number of microseconds.</para></listitem>
      <listitem><para><link linkend="ms-to-usec"><function>ms->usec</function></link> -- Convert MS milliseconds into an equivalent number of microseconds.</para></listitem>
      <listitem><para><link linkend="usec-to-ms"><function>usec->ms</function></link> -- Convert USEC microseconds into an equivalent number of milliseconds.</para></listitem>
      <listitem><para><link linkend="usec-to-sec"><function>usec->sec</function></link> -- Convert USEC microseconds into an equivalent number of seconds.</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>scheme/ui-constraints-buttons.scm</title> <itemizedlist>
      <listitem><para><link linkend="initialize-ui-constraints-buttons"><function>initialize-ui-constraints-buttons</function></link> -- No documentation supplied.</para></listitem>
      <listitem><para><link linkend="change-ui-constraints-buttons"><function>change-ui-constraints-buttons</function></link> -- No documentation supplied.</para></listitem>
      <listitem><para><link linkend="start-ui-constraints-buttons"><function>start-ui-constraints-buttons</function></link> -- No documentation supplied.</para></listitem>
      <listitem><para><link linkend="close-ui-constraints-buttons"><function>close-ui-constraints-buttons</function></link> -- No documentation supplied.</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>scheme/ui-constraints-classes.scm</title> <itemizedlist>
      <listitem><para><link linkend="two-window-prompter"><function>two-window-prompter</function></link> -- No documentation supplied.</para></listitem>
      <listitem><para><link linkend="two-window-or-more-prompter"><function>two-window-or-more-prompter</function></link> -- No documentation supplied.</para></listitem>
      <listitem><para><link linkend="one-window-prompter"><function>one-window-prompter</function></link> -- No documentation supplied.</para></listitem>
      <listitem><para><link linkend="nonant-to-dirvector"><function>nonant->dirvector</function></link> -- No documentation supplied.</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>scheme/ui-constraints-composition.scm</title> <itemizedlist>
      <listitem><para><link linkend="ui-constraints-composition-begin"><function>ui-constraints-composition-begin</function></link> -- Begin recording the constraints used for the creation of a composition.</para></listitem>
      <listitem><para><link linkend="ui-constraints-composition-end"><function>ui-constraints-composition-end</function></link> -- End the recording of a constraint composition.</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>scheme/ui-constraints-gdk-drawing.scm</title> <itemizedlist>
      <listitem><para><link linkend="gdk-drawing-initialize"><function>gdk-drawing-initialize</function></link> -- Setup the draw functions for drawing onto the root window.</para></listitem>
      <listitem><para><link linkend="gdk-drawing-initialized-p"><function>gdk-drawing-initialized?</function></link> -- Returns whether or not the module has been initialized.</para></listitem>
      <listitem><para><link linkend="gdk-drawing-get-gc"><function>gdk-drawing-get-gc</function></link> -- Returns the gc used to draw on the root window.</para></listitem>
      <listitem><para><link linkend="gdk-drawing-get-drawable"><function>gdk-drawing-get-drawable</function></link> -- Returns the drawable object used to draw on the root window.</para></listitem>
      <listitem><para><link linkend="gdk-drawing-set-line-width-x"><function>gdk-drawing-set-line-width!</function></link> -- Set the width of the line to draw with.</para></listitem>
      <listitem><para><link linkend="gdk-draw-rectangle-x"><function>gdk-draw-rectangle!</function></link> -- Draw a rectangle on the root window.</para></listitem>
      <listitem><para><link linkend="gdk-draw-line-x"><function>gdk-draw-line!</function></link> -- Draw a line on the root window.</para></listitem>
      <listitem><para><link linkend="gdk-draw-arc-x"><function>gdk-draw-arc!</function></link> -- Draw an arc on the root window.</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>scheme/ui-constraints-gtk-toggle-menu.scm</title> <itemizedlist>
      <listitem><para><link linkend="initialize-gtk-toggle-menu"><function>initialize-gtk-toggle-menu</function></link> -- Creates the GTK resources for the gtk-toggle-menu.</para></listitem>
      <listitem><para><link linkend="ui-constraints-gtk-toggle-menu"><function>ui-constraints-gtk-toggle-menu</function></link> -- Displays the GTK version of the constraints toggle menu.</para></listitem>
      <listitem><para><link linkend="popup-ui-constraints-gtk-toggle-menu"><function>popup-ui-constraints-gtk-toggle-menu</function></link> -- Pops up the constraint toggle menu.</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>scheme/ui-constraints-toggle-menu.scm</title> <itemizedlist>
      <listitem><para><link linkend="ui-constraints-toggle-menu"><function>ui-constraints-toggle-menu</function></link> -- Return a menu of constraints that permits toggling their enabled? state.</para></listitem>
      <listitem><para><link linkend="popup-ui-constraints-toggle-menu"><function>popup-ui-constraints-toggle-menu</function></link> -- Popup a menu that can be used to turn added constraints on and off.</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>scheme/ui-constraints.scm</title> <itemizedlist>
      <listitem><para><link linkend="make-ui-constraint-class"><function>make-ui-constraint-class</function></link> -- Creates a new ui-constraint-class object.</para></listitem>
      <listitem><para><link linkend="delete-ui-constraint-class-x"><function>delete-ui-constraint-class!</function></link> -- Removes UI-CONSTRAINT-CLASS from the global class list.</para></listitem>
      <listitem><para><link linkend="reset-ui-constraint-classes-x"><function>reset-ui-constraint-classes!</function></link> -- Empty the global list of ui-constraint-classes.</para></listitem>
      <listitem><para><link linkend="ui-constraint-class-p"><function>ui-constraint-class?</function></link> -- Returns a boolean: true if UI-CONSTRAINT-CLASS is a vector and starts with the</para></listitem>
      <listitem><para><link linkend="get-ui-constraint-class-by-name"><function>get-ui-constraint-class-by-name</function></link> -- No documentation supplied.</para></listitem>
      <listitem><para><link linkend="ui-constraint-class-name"><function>ui-constraint-class-name</function></link> -- Returns the name of the constraint class.</para></listitem>
      <listitem><para><link linkend="ui-constraint-class-description"><function>ui-constraint-class-description</function></link> -- Returns the description for the constraint class.</para></listitem>
      <listitem><para><link linkend="ui-constraint-class-num-windows"><function>ui-constraint-class-num-windows</function></link> -- Returns the number of windows constrainable by instances of the constraint </para></listitem>
      <listitem><para><link linkend="ui-constraint-class-ctr"><function>ui-constraint-class-ctr</function></link> -- Returns the constructor for instance of the constraint class.</para></listitem>
      <listitem><para><link linkend="ui-constraint-class-ui-ctr"><function>ui-constraint-class-ui-ctr</function></link> -- Returns the UI constructor for instances of the constraint class.</para></listitem>
      <listitem><para><link linkend="ui-constraint-class-draw-proc"><function>ui-constraint-class-draw-proc</function></link> -- returns the drawing procedure for instances of the constraint class.</para></listitem>
      <listitem><para><link linkend="ui-constraint-class-satisfied-proc"><function>ui-constraint-class-satisfied-proc</function></link> -- Returns the satisfaction checking procedure for instances of the</para></listitem>
      <listitem><para><link linkend="ui-constraint-class-pixmap-name"><function>ui-constraint-class-pixmap-name</function></link> -- Return the pixmap-name of UI-CONSTRAINT-CLASS.</para></listitem>
      <listitem><para><link linkend="ui-constraint-class-menuname-proc"><function>ui-constraint-class-menuname-proc</function></link> -- Return the proc for determining the name for the constraint in</para></listitem>
      <listitem><para><link linkend="make-ui-constraint"><function>make-ui-constraint</function></link> -- UI-CONSTRAINT-CLASS specified the type of constraint to be created.</para></listitem>
      <listitem><para><link linkend="make-ui-constraint-interactively"><function>make-ui-constraint-interactively</function></link> -- Uses the UI constructor of the constraint class to prompt the user to</para></listitem>
      <listitem><para><link linkend="delete-ui-constraint-x"><function>delete-ui-constraint!</function></link> -- Removes the UI-CONSTRAINT permanently.</para></listitem>
      <listitem><para><link linkend="ui-constraint-p"><function>ui-constraint?</function></link> -- Returns <literal>#t</literal> if UI-CONSTRAINT is a ui-constraint.</para></listitem>
      <listitem><para><link linkend="ui-constraint-cn"><function>ui-constraint-cn</function></link> -- Returns the CN list from the ui-constraint object UI-CONSTRAINT.</para></listitem>
      <listitem><para><link linkend="ui-constraint-enabled-p"><function>ui-constraint-enabled?</function></link> -- Returns the ENABLE from the ui-constraint object UI-CONSTRAINT.</para></listitem>
      <listitem><para><link linkend="ui-constraint-class"><function>ui-constraint-class</function></link> -- Returns the UI-CONSTRAINT-CLASS from the ui-constraint object UI-CONSTRAINT.</para></listitem>
      <listitem><para><link linkend="ui-constraint-windows"><function>ui-constraint-windows</function></link> -- Returns the LIST-OF-WINDOWS from the ui-constraint object UI-CONSTRAINT.</para></listitem>
      <listitem><para><link linkend="ui-constraint-opts"><function>ui-constraint-opts</function></link> -- Returns the list of optional data that may be added by the constraint class.</para></listitem>
      <listitem><para><link linkend="ui-constraint-button"><function>ui-constraint-button</function></link> -- Returns the a reference to panel representing the UI-CONSTRAINT in the toggle menu.</para></listitem>
      <listitem><para><link linkend="ui-constraint-set-button-x"><function>ui-constraint-set-button!</function></link> -- Sets the reference to the gtk button for this instance in the toggle menu.</para></listitem>
      <listitem><para><link linkend="enable-ui-constraint"><function>enable-ui-constraint</function></link> -- Enables the constraint in the constraint solver.</para></listitem>
      <listitem><para><link linkend="disable-ui-constraint"><function>disable-ui-constraint</function></link> -- Disables the constraint in the constraint solver</para></listitem>
      <listitem><para><link linkend="constraint-satisfied-p"><function>constraint-satisfied?</function></link> -- Returns the status of whether a UI-CONSTRAINT is satisfied.</para></listitem>
      <listitem><para><link linkend="constrained-window-in-focus-p"><function>constrained-window-in-focus?</function></link> -- Returns <literal>#t</literal> if one of the windows in the constraint is in focus.</para></listitem>
      <listitem><para><link linkend="ui-constraints-involving-window"><function>ui-constraints-involving-window</function></link> -- Returns the list of ui-constraint objects that involve WIN.</para></listitem>
      <listitem><para><link linkend="delete-ui-constraints-involving-window-x"><function>delete-ui-constraints-involving-window!</function></link> -- Delete all the ui-constraint objects that involve WIN.</para></listitem>
      <listitem><para><link linkend="draw-constraint"><function>draw-constraint</function></link> -- Draw the UI-CONSTRAINT.</para></listitem>
      <listitem><para><link linkend="undraw-constraint"><function>undraw-constraint</function></link> -- Undraw the UI-CONSTRAINT.</para></listitem>
      <listitem><para><link linkend="draw-all-constraints"><function>draw-all-constraints</function></link> -- Draw all constraints in the global instance list.</para></listitem>
      <listitem><para><link linkend="undraw-all-constraints"><function>undraw-all-constraints</function></link> -- Undraw all constraints in the global instance list.</para></listitem>
      <listitem><para><link linkend="disable-all-constraints"><function>disable-all-constraints</function></link> -- Disable all constraints in the global instance list.</para></listitem>
      <listitem><para><link linkend="enable-all-constraints"><function>enable-all-constraints</function></link> -- Enable all constraints in the global instance list.</para></listitem>
      <listitem><para><link linkend="ui-constraint-add-enable-hook"><function>ui-constraint-add-enable-hook</function></link> -- Adds a HOOK proc which will be called when UI-CONSTRAINT enable state changes.</para></listitem>
      <listitem><para><link linkend="ui-constraint-remove-enable-hook"><function>ui-constraint-remove-enable-hook</function></link> -- Removes a HOOK proc from the list in UI-CONSTRAINT.</para></listitem>
      <listitem><para><link linkend="ui-constraint-enable-hooks"><function>ui-constraint-enable-hooks</function></link> -- Returns a list of the enable-hook functions added to the UI-CONSTRAINT.</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>scheme/undo.scm</title> <itemizedlist>
      <listitem><para><link linkend="reset-undo-x"><function>reset-undo!</function></link> -- Reset the undo system.</para></listitem>
      <listitem><para><link linkend="increment-in-range"><function>increment-in-range</function></link> -- Return v+1 but no more than high.</para></listitem>
      <listitem><para><link linkend="decrement-in-range"><function>decrement-in-range</function></link> -- Return v-1 but no less than low.</para></listitem>
      <listitem><para><link linkend="decrement-undo-index"><function>decrement-undo-index</function></link> -- Decrement the undo-index.</para></listitem>
      <listitem><para><link linkend="increment-undo-index"><function>increment-undo-index</function></link> -- Increment the undo-index.</para></listitem>
      <listitem><para><link linkend="push-undo-global"><function>push-undo-global</function></link> -- Push the global state onto the undo list.</para></listitem>
      <listitem><para><link linkend="insert-undo-global"><function>insert-undo-global</function></link> -- Insert the global state into the undo list at undo-index.</para></listitem>
      <listitem><para><link linkend="push-undo-state"><function>push-undo-state</function></link> -- Push STATE onto the undo list.</para></listitem>
      <listitem><para><link linkend="insert-undo-state"><function>insert-undo-state</function></link> -- Insert STATE into the undo list at undo-index.</para></listitem>
      <listitem><para><link linkend="undo-state-at-index"><function>undo-state-at-index</function></link> -- Return the state from undo-list at INDEX, or <literal>#f</literal> if bad index.</para></listitem>
      <listitem><para><link linkend="undo"><function>undo</function></link> -- Undo the last operation that was undoable.</para></listitem>
      <listitem><para><link linkend="redo"><function>redo</function></link> -- Redo the last undone operation.</para></listitem>
      <listitem><para><link linkend="undo-use"><function>undo-use</function></link> -- Apply the state from the undo-list contained at INDEX.</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>scheme/virtual.scm</title> <itemizedlist>
      <listitem><para><link linkend="containing-aligned-viewport"><function>containing-aligned-viewport</function></link> -- Compute the viewport-position of the viewport that contains POS.</para></listitem>
      <listitem><para><link linkend="nearest-aligned-viewport"><function>nearest-aligned-viewport</function></link> -- Compute the nearest valid integral viewport position to POS.</para></listitem>
      <listitem><para><link linkend="window-aligned-viewport"><function>window-aligned-viewport</function></link> -- Return the viewport that contains the center of WIN.</para></listitem>
      <listitem><para><link linkend="current-viewport-offset-xx"><function>current-viewport-offset-xx</function></link> -- Return the current viewport horizontal offset as a multiple of the display width.</para></listitem>
      <listitem><para><link linkend="current-viewport-offset-yy"><function>current-viewport-offset-yy</function></link> -- Return the current viewport vertical offset as a multiple of the display height.</para></listitem>
      <listitem><para><link linkend="window-position-in-viewport"><function>window-position-in-viewport</function></link> -- Return a virtual position for WIN that is in viewport (XX,YY).</para></listitem>
      <listitem><para><link linkend="move-window-to-viewport"><function>move-window-to-viewport</function></link> -- Move WIN to the viewport numbered (XX,YY).</para></listitem>
      <listitem><para><link linkend="move-inside-viewport"><function>move-inside-viewport</function></link> -- Ensure that WIN is entirely inside the X, Y viewport if possible.</para></listitem>
      <listitem><para><link linkend="move-inside-aligned-viewport"><function>move-inside-aligned-viewport</function></link> -- Ensure that WIN is entirely inside the XX, YY viewport if possible.</para></listitem>
      <listitem><para><link linkend="move-inside-current-viewport"><function>move-inside-current-viewport</function></link> -- Ensure that WIN is entirely inside the current viewport, if possible.</para></listitem>
      <listitem><para><link linkend="move-inside-own-viewport"><function>move-inside-own-viewport</function></link> -- Ensure that WIN is entirely inside the closest viewport to its center.</para></listitem>
      <listitem><para><link linkend="deiconify-to-current-viewport"><function>deiconify-to-current-viewport</function></link> -- De-iconify WIN and make it visible in the current viewport.</para></listitem>
      <listitem><para><link linkend="move-to-viewport"><function>move-to-viewport</function></link> -- Move to the viewport numbered (XX,YY).</para></listitem>
      <listitem><para><link linkend="align-viewport"><function>align-viewport</function></link> -- Set the viewport position to the nearest multiple of the desk size.</para></listitem>
      <listitem><para><link linkend="warp-to-window-viewport"><function>warp-to-window-viewport</function></link> -- Change to the desk and viewport of WIN.</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>scheme/window-configuration.scm</title> <itemizedlist>
      <listitem><para><link linkend="window-configuration"><function>window-configuration</function></link> -- Return a list containing the state of WIN.</para></listitem>
      <listitem><para><link linkend="window-configuration-p"><function>window-configuration?</function></link> -- Return <literal>#t</literal> if WCFG is a window configuration.</para></listitem>
      <listitem><para><link linkend="copy-window-configuration"><function>copy-window-configuration</function></link> -- Apply a saved state CONFIGURATION to window WIN.</para></listitem>
      <listitem><para><link linkend="restore-window-configuration"><function>restore-window-configuration</function></link> -- Restore the state of WIN from GLOBAL-CONFIGURATION.</para></listitem>
      <listitem><para><link linkend="global-window-configuration"><function>global-window-configuration</function></link> -- Return an object abstracting all of the current windows' states.</para></listitem>
      <listitem><para><link linkend="restore-global-window-configuration"><function>restore-global-window-configuration</function></link> -- Restore the states of all windows from GLOBAL-CONFIGURATION.</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>scheme/window-locations.scm</title> <itemizedlist>
      <listitem><para><link linkend="pair-virtual-to-viewport"><function>pair-virtual->viewport</function></link> -- Convert a pair point from virtual to viewport coordinates.</para></listitem>
      <listitem><para><link linkend="window-center-middle"><function>window-center-middle</function></link> -- Return pair (viewport-x .</para></listitem>
      <listitem><para><link linkend="window-center-top"><function>window-center-top</function></link> -- Return a pair (X .</para></listitem>
      <listitem><para><link linkend="window-center-bottom"><function>window-center-bottom</function></link> -- Return a pair (X .</para></listitem>
      <listitem><para><link linkend="window-left-middle"><function>window-left-middle</function></link> -- Return a pair (X .</para></listitem>
      <listitem><para><link linkend="window-right-middle"><function>window-right-middle</function></link> -- Return a pair (X .</para></listitem>
      <listitem><para><link linkend="window-left-top"><function>window-left-top</function></link> -- Return a pair (X .</para></listitem>
      <listitem><para><link linkend="window-left-bottom"><function>window-left-bottom</function></link> -- Return a pair (X .</para></listitem>
      <listitem><para><link linkend="window-right-top"><function>window-right-top</function></link> -- Return a pair (X .</para></listitem>
      <listitem><para><link linkend="window-right-bottom"><function>window-right-bottom</function></link> -- Return a pair (X .</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>scheme/window-selection.scm</title> <itemizedlist>
      <listitem><para><link linkend="window-is-selected-p"><function>window-is-selected?</function></link> -- Return <literal>#t</literal> if W is in the selected window list, else <literal>#f</literal>.</para></listitem>
      <listitem><para><link linkend="selected-windows-list"><function>selected-windows-list</function></link> -- Returns the list of windows selected by <link linkend="select-window-interactively-and-highlight"><function>select-window-interactively-and-highlight</function></link>.</para></listitem>
      <listitem><para><link linkend="select-window-toggle"><function>select-window-toggle</function></link> -- Toggle the selectedness of W.</para></listitem>
      <listitem><para><link linkend="select-window-add"><function>select-window-add</function></link> -- Select a single window, highlight it, and add it to the selected-windows-list.</para></listitem>
      <listitem><para><link linkend="select-window-remove"><function>select-window-remove</function></link> -- Unselect a single window, de-highlight it, and remove it from the selected-windows-list.</para></listitem>
      <listitem><para><link linkend="select-matching-windows"><function>select-matching-windows</function></link> -- Select windows for which predicate PROC returns <literal>#t</literal>.</para></listitem>
      <listitem><para><link linkend="unselect-matching-windows"><function>unselect-matching-windows</function></link> -- Unselect windows for which predicate PROC returns <literal>#t</literal>.</para></listitem>
      <listitem><para><link linkend="unselect-all-windows"><function>unselect-all-windows</function></link> -- Unselect all windows selected via <link linkend="select-window-add"><function>select-window-add</function></link>.</para></listitem>
      <listitem><para><link linkend="select-multiple-windows-interactively"><function>select-multiple-windows-interactively</function></link> -- Return a list of user-selected windows, up to MAX.</para></listitem>
      <listitem><para><link linkend="set-markwin-offset-x"><function>set-markwin-offset!</function></link> -- No documentation supplied.</para></listitem>
      <listitem><para><link linkend="place-nonant-marker"><function>place-nonant-marker</function></link> -- Place a nonant marker on W.</para></listitem>
      <listitem><para><link linkend="remove-nonant-marker"><function>remove-nonant-marker</function></link> -- Remove a nonant marker from W.</para></listitem>
      <listitem><para><link linkend="show-selected-nonants"><function>show-selected-nonants</function></link> -- Show nonant markers on window when they are selected.</para></listitem>
      <listitem><para><link linkend="hide-selected-nonants"><function>hide-selected-nonants</function></link> -- Hide nonant markers on window when they are selected.</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>scheme/wininfo.scm</title> <itemizedlist>
      <listitem><para><link linkend="on-desk-p"><function>on-desk?</function></link> -- Return <literal>#t</literal> if WIN is on desk N, else <literal>#f</literal>.</para></listitem>
      <listitem><para><link linkend="on-desk-n-p"><function>on-desk-n?</function></link> -- Returns a function which takes WIN and returns <literal>#t</literal> if WIN is on desk N, else <literal>#f</literal>.</para></listitem>
      <listitem><para><link linkend="on-current-desk-p"><function>on-current-desk?</function></link> -- Return <literal>#t</literal> if WIN is on the current desk.</para></listitem>
      <listitem><para><link linkend="rectangle-overlap-p"><function>rectangle-overlap?</function></link> -- Returns <literal>#t</literal> iff the two specified rectangles overlap.</para></listitem>
      <listitem><para><link linkend="intersection-area"><function>intersection-area</function></link> -- Returns the size of the intersection of two rectangles.</para></listitem>
      <listitem><para><link linkend="in-viewport-any-desk-p"><function>in-viewport-any-desk?</function></link> -- Return <literal>#t</literal> if WIN is in the current viewport ignoring the desk, else <literal>#f</literal>.</para></listitem>
      <listitem><para><link linkend="windows-overlap-p"><function>windows-overlap?</function></link> -- Return <literal>#t</literal> if WIN and WIN2 overlap at all, else <literal>#f</literal>.</para></listitem>
      <listitem><para><link linkend="window-overlaps-window-p"><function>window-overlaps-window?</function></link> -- Return a function which takes WIN2 and returns <literal>#t</literal> if it overlaps WIN.</para></listitem>
      <listitem><para><link linkend="visible-p"><function>visible?</function></link> -- Return <literal>#t</literal> if any of WIN is currently potentially visible, else <literal>#f</literal>.</para></listitem>
      <listitem><para><link linkend="percent-visible"><function>percent-visible</function></link> -- Return the percent of WIN currently in the viewport as a real in [0,100].</para></listitem>
      <listitem><para><link linkend="window-center-position"><function>window-center-position</function></link> -- Return the coordinates of the center of WIN as a list of the X and Y coordinate.</para></listitem>
      <listitem><para><link linkend="window-geometry-string"><function>window-geometry-string</function></link> -- Return a string corresponding to the geometry specifications for WIN.</para></listitem>
      <listitem><para><link linkend="time-t-to-seconds-ago"><function>time-t->seconds-ago</function></link> -- Return the number of seconds that have passed since TIMET was the current time.</para></listitem>
      <listitem><para><link linkend="window-last-focus-time-string"><function>window-last-focus-time-string</function></link> -- Return a string corresponding to the last focus time for WIN.</para></listitem>
      <listitem><para><link linkend="wildcard-to-regexp"><function>wildcard->regexp</function></link> -- Return the regular expresision string corresponding to WILDCARD.</para></listitem>
      <listitem><para><link linkend="window-client-machine-name"><function>window-client-machine-name</function></link> -- Return the name of the client machine on which WIN is running.</para></listitem>
      <listitem><para><link linkend="wildcard-matcher"><function>wildcard-matcher</function></link> -- Return a procedure that matches WILDCARD against a window.</para></listitem>
      <listitem><para><link linkend="wildcard-match-p"><function>wildcard-match?</function></link> -- Returns <literal>#t</literal> if WILDCARD matches WIN (in the sense of <link linkend="wildcard-matcher"><function>wildcard-matcher</function></link>).</para></listitem>
      <listitem><para><link linkend="title-match--p"><function>title-match??</function></link> -- Return a predicate that tests a window's title.</para></listitem>
      <listitem><para><link linkend="class-match--p"><function>class-match??</function></link> -- Return a predicate that tests a window's resource class.</para></listitem>
      <listitem><para><link linkend="resource-match--p"><function>resource-match??</function></link> -- Return a predicate that tests a window's resource instance.</para></listitem>
      <listitem><para><link linkend="icon-title-match--p"><function>icon-title-match??</function></link> -- Return a predicate that tests a window's icon title.</para></listitem>
      <listitem><para><link linkend="client-hostname-match--p"><function>client-hostname-match??</function></link> -- Return a predicate that tests a window's client hostname.</para></listitem>
      <listitem><para><link linkend="find-window-by"><function>find-window-by</function></link> -- Return a window satisfying predicate PRED.</para></listitem>
      <listitem><para><link linkend="find-window-by-name"><function>find-window-by-name</function></link> -- Return a window with name WINDOW-NAME.</para></listitem>
      <listitem><para><link linkend="find-window-by-class-resource"><function>find-window-by-class-resource</function></link> -- Return a window by its CLASS and RESOURCE names (as strings).</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>scheme/winlist.scm</title> <itemizedlist>
      <listitem><para><link linkend="warp-placement"><function>warp-placement</function></link> -- Return a list, (%x %y), for the desired pointer placement for WIN.</para></listitem>
      <listitem><para><link linkend="default-winlist-proc"><function>default-winlist-proc</function></link> -- The default behaviour when WIN is selected from the window list.</para></listitem>
      <listitem><para><link linkend="list-windows"><function>list-windows</function></link> -- Return the list of windows matching ONLY and not matching EXCEPT.</para></listitem>
      <listitem><para><link linkend="winlist-hit"><function>winlist-hit</function></link> -- Permit WIN to be displayed in the window list by default.</para></listitem>
      <listitem><para><link linkend="winlist-skip"><function>winlist-skip</function></link> -- Do not show WIN in the window list by default.</para></listitem>
      <listitem><para><link linkend="winlist-skip-p"><function>winlist-skip?</function></link> -- Return <literal>#t</literal> if WIN is skipped in the window list, <literal>#f</literal> otherwise.</para></listitem>
      <listitem><para><link linkend="make-window-list-menu"><function>make-window-list-menu</function></link> -- Popup a window list menu and permit a selection to be made.</para></listitem>
      <listitem><para><link linkend="show-window-list-menu"><function>show-window-list-menu</function></link> -- Popup a window list menu.</para></listitem>
      <listitem><para><link linkend="select-window-from-window-list"><function>select-window-from-window-list</function></link> -- Permit selecting a window from a window list.</para></listitem>
      <listitem><para><link linkend="circulate-hit"><function>circulate-hit</function></link> -- Include WIN among the windows in the circulate list.</para></listitem>
      <listitem><para><link linkend="circulate-skip"><function>circulate-skip</function></link> -- Do not include WIN among the windows in the circulate list.</para></listitem>
      <listitem><para><link linkend="circulate-skip-p"><function>circulate-skip?</function></link> -- Return <literal>#t</literal> if WIN is not among the windows in the circulate list.</para></listitem>
      <listitem><para><link linkend="circulate-hit-icon"><function>circulate-hit-icon</function></link> -- Include WIN's icon among the windows in the circulate list.</para></listitem>
      <listitem><para><link linkend="circulate-skip-icon"><function>circulate-skip-icon</function></link> -- Do not include WIN's icon among the windows in the circulate list.</para></listitem>
      <listitem><para><link linkend="circulate-skip-icon-p"><function>circulate-skip-icon?</function></link> -- Return <literal>#t</literal> if WIN's icon is not among the windows in the circulate list.</para></listitem>
      <listitem><para><link linkend="should-circulate-skip-p"><function>should-circulate-skip?</function></link> -- Return <literal>#t</literal> if WIN should now be skipped when circulating, <literal>#f</literal> otherwise.</para></listitem>
      <listitem><para><link linkend="next-window"><function>next-window</function></link> -- Circulate to the next matching window.</para></listitem>
      <listitem><para><link linkend="prev-window"><function>prev-window</function></link> -- Circulate to the previous matching window.</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>scheme/winops.scm</title> <itemizedlist>
      <listitem><para><link linkend="make-toggling-winop"><function>make-toggling-winop</function></link> -- Returns a procedure which takes a window WIN and toggles a property of it.</para></listitem>
      <listitem><para><link linkend="close-window"><function>close-window</function></link> -- Close WIN either by deleting it or destroying it.</para></listitem>
      <listitem><para><link linkend="hide-titlebar-in-place"><function>hide-titlebar-in-place</function></link> -- Turn off display of the titlebar for WIN without moving the client window.</para></listitem>
      <listitem><para><link linkend="show-titlebar-in-place"><function>show-titlebar-in-place</function></link> -- Turn on display of the titlebar for WIN without moving the client window.</para></listitem>
      <listitem><para><link linkend="maximize"><function>maximize</function></link> -- Maximize WIN to new pixel width NW and new pixel height NH.</para></listitem>
      <listitem><para><link linkend="maximized-p"><function>maximized?</function></link> -- Return <literal>#t</literal> if WIN is maximized, <literal>#f</literal> otherwise.</para></listitem>
      <listitem><para><link linkend="unmaximize"><function>unmaximize</function></link> -- Unmaximize WIN so it returns to its size/position before maximization.</para></listitem>
      <listitem><para><link linkend="toggle-maximize"><function>toggle-maximize</function></link> -- Maximize to width NW, height NH if not maximized, or unmaximize.</para></listitem>
      <listitem><para><link linkend="window-frame-area"><function>window-frame-area</function></link> -- Return the area of WIN's frame in square pixels.</para></listitem>
      <listitem><para><link linkend="default-resize-opaquely-p"><function>default-resize-opaquely?</function></link> -- Return <literal>#t</literal> if WIN has area <= *opaque-resize-percent* of the screen, else <literal>#f</literal>.</para></listitem>
      <listitem><para><link linkend="default-move-opaquely-p"><function>default-move-opaquely?</function></link> -- Return <literal>#t</literal> if WIN has area <= *opaque-move-percent* of the screen, else <literal>#f</literal>.</para></listitem>
      <listitem><para><link linkend="interactive-move"><function>interactive-move</function></link> -- Move WINDOW interactively and possibly opaquely.</para></listitem>
      <listitem><para><link linkend="interactive-resize"><function>interactive-resize</function></link> -- Resize WINDOW interactively and possibly opaquely.</para></listitem>
      <listitem><para><link linkend="print-window"><function>print-window</function></link> -- Print WIN using xpr and lpr.</para></listitem>
      <listitem><para><link linkend="resize-window"><function>resize-window</function></link> -- Resize WIN's client area to a size of W by H in pixels.</para></listitem>
      <listitem><para><link linkend="sort-windows-by-middle-pos"><function>sort-windows-by-middle-pos</function></link> -- No documentation supplied.</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>scheme/wmconfig-menu.scm</title> <itemizedlist>
      <listitem><para><link linkend="make-wmconfig-menu"><function>make-wmconfig-menu</function></link> -- Return a menu object for the window-manager configuration menu.</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>scheme/xprop-extras.scm</title> <itemizedlist>
      <listitem><para><link linkend="set-window-title-x"><function>set-window-title!</function></link> -- Change the window title X-Property of WIN to TITLE.</para></listitem>
      <listitem><para><link linkend="X-cut-buffer-string"><function>X-cut-buffer-string</function></link> -- Return the text of the CUT_BUFFER0 property of the root window.</para></listitem>
      <listitem><para><link linkend="X-set-cut-buffer-string-x"><function>X-set-cut-buffer-string!</function></link> -- Set the text of the CUT_BUFFER0 property of the root window.</para></listitem>
      <listitem><para><link linkend="copy-window-title-to-cut-buffer0"><function>copy-window-title-to-cut-buffer0</function></link> -- Set CUT_BUFFER0 to be a string that is the title of WINDOW.</para></listitem>
      <listitem><para><link linkend="paste-window-title-from-cut-buffer0"><function>paste-window-title-from-cut-buffer0</function></link> -- Set the window title of WINDOW to be the string in CUT_BUFFER0.</para></listitem>
      <listitem><para><link linkend="get-wm-command"><function>get-wm-command</function></link> -- Get the "WM_COMMAND" X-Property of WIN and return that string.</para></listitem>
      <listitem><para><link linkend="X-atomic-property-set-if-unset-x"><function>X-atomic-property-set-if-unset!</function></link> -- Set property NAME on WINDOW to VALUE, if it's currently unset.</para></listitem>
      <listitem><para><link linkend="window-pid"><function>window-pid</function></link> -- Returns the process id of the process that created WIN.</para></listitem>
      <listitem><para><link linkend="window-other-id"><function>window-other-id</function></link> -- Returns the other id string given to the process that created WIN.</para></listitem>
      <listitem><para><link linkend="mwm-functions-to-string"><function>mwm-functions->string</function></link> -- Converts the MWM function flags into a readable form.</para></listitem>
      <listitem><para><link linkend="mwm-decorations-to-string"><function>mwm-decorations->string</function></link> -- Converts the MWM decoration flags into a readable form.</para></listitem>
      <listitem><para><link linkend="X-properties-to-string"><function>X-properties->string</function></link> -- Prints the X properties of WIN into a string.</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>scwm/binding.c</title> <itemizedlist>
      <listitem><para><link linkend="set-quote-key-events-x"><function>set-quote-key-events!</function></link> -- Set key event quoting to QUOTING-ON?.</para></listitem>
      <listitem><para><link linkend="quote-key-events-p"><function>quote-key-events?</function></link> -- Return <literal>#t</literal> iff key events are being qutoed.</para></listitem>
      <listitem><para><link linkend="lookup-key"><function>lookup-key</function></link> -- Return the procedures bound to KEY within the CONTEXTS.</para></listitem>
      <listitem><para><link linkend="unbind-key"><function>unbind-key</function></link> -- Remove any bindings attached to KEY in given CONTEXTS.</para></listitem>
      <listitem><para><link linkend="keysym-to-keycode"><function>keysym->keycode</function></link> -- Returns a list of X/11 keycodes that generate the keysym, KEYSYM-NAME.</para></listitem>
      <listitem><para><link linkend="unbind-mouse"><function>unbind-mouse</function></link> -- Remove any bindings attached to mouse BUTTON in given CONTEXTS.</para></listitem>
      <listitem><para><link linkend="bind-key"><function>bind-key</function></link> -- Bind the given KEY within the CONTEXTS to invoke PROC.</para></listitem>
      <listitem><para><link linkend="bind-keycode"><function>bind-keycode</function></link> -- Bind the given KEYCODE within the CONTEXTS to invoke PROC.</para></listitem>
      <listitem><para><link linkend="unbind-keycode"><function>unbind-keycode</function></link> -- Unbind the given KEYCODE within the CONTEXTS.</para></listitem>
      <listitem><para><link linkend="bind-mouse"><function>bind-mouse</function></link> -- Bind the given mouse BUTTON within the CONTEXTS to invoke PROC.</para></listitem>
      <listitem><para><link linkend="lookup-mouse"><function>lookup-mouse</function></link> -- Return the procedure bound to mouse BUTTON within the CONTEXTS.</para></listitem>
      <listitem><para><link linkend="lookup-procedure-bindings"><function>lookup-procedure-bindings</function></link> -- Return any bindings that invoke PROC.</para></listitem>
      <listitem><para><link linkend="mouse-event-type"><function>mouse-event-type</function></link> -- Return a symbol corresponding to the type of the most recent mouse event.</para></listitem>
      <listitem><para><link linkend="number-of-mouse-buttons"><function>number-of-mouse-buttons</function></link> -- Return the number of mouse buttons of the current mouse.</para></listitem>
      <listitem><para><link linkend="mod-mask-shift"><function>mod-mask-shift</function></link> -- Return the bit-mask for the Shift modifier key, or <literal>#f</literal>.</para></listitem>
      <listitem><para><link linkend="mod-mask-control"><function>mod-mask-control</function></link> -- Return the bit-mask for the Control modifier key, or <literal>#f</literal>.</para></listitem>
      <listitem><para><link linkend="mod-mask-meta"><function>mod-mask-meta</function></link> -- Return the bit-mask for the Meta modifier key, or <literal>#f</literal>.</para></listitem>
      <listitem><para><link linkend="mod-mask-alt"><function>mod-mask-alt</function></link> -- Return the bit-mask for the Alt modifier key, or <literal>#f</literal>.</para></listitem>
      <listitem><para><link linkend="mod-mask-hyper"><function>mod-mask-hyper</function></link> -- Return the bit-mask for the Hyper modifier key, or <literal>#f</literal>.</para></listitem>
      <listitem><para><link linkend="mod-mask-super"><function>mod-mask-super</function></link> -- Return the bit-mask for the Super modifier key, or <literal>#f</literal>.</para></listitem>
      <listitem><para><link linkend="mod-mask-numlock"><function>mod-mask-numlock</function></link> -- Return the bit-mask for the NumLock modifier key, or <literal>#f</literal>.</para></listitem>
      <listitem><para><link linkend="mod-mask-scrolllock"><function>mod-mask-scrolllock</function></link> -- Return the bit-mask for the ScrollLock modifier key, or <literal>#f</literal>.</para></listitem>
      <listitem><para><link linkend="set-mod-mask-numlock-x"><function>set-mod-mask-numlock!</function></link> -- Set the bit-mask for the NumLock modifier key.</para></listitem>
      <listitem><para><link linkend="set-mod-mask-scrolllock-x"><function>set-mod-mask-scrolllock!</function></link> -- Set the bit-mask for the ScrollLock modifier key.</para></listitem>
      <listitem><para><link linkend="set-ignore-dubious-modifiers-x"><function>set-ignore-dubious-modifiers!</function></link> -- If FLAG is <literal>#t</literal>, ignore scoll/num/lock modifiers on all bindings made.</para></listitem>
      <listitem><para><link linkend="ignore-dubious-modifiers-p"><function>ignore-dubious-modifiers?</function></link> -- Return the status of the ignore-dubious-modifiers flag.</para></listitem>
      <listitem><para><link linkend="undo-all-passive-grabs"><function>undo-all-passive-grabs</function></link> -- Remove all passive grabs of keys and buttons of bindings.</para></listitem>
      <listitem><para><link linkend="redo-all-passive-grabs"><function>redo-all-passive-grabs</function></link> -- Re-instate all passive grabs of keys and buttons of bindings.</para></listitem>
      <listitem><para><link linkend="undo-passive-grab"><function>undo-passive-grab</function></link> -- Remove the passive grabs of KEYCODE-OR-BUTNUM with MODMASK on all windows.</para></listitem>
      <listitem><para><link linkend="redo-passive-grab"><function>redo-passive-grab</function></link> -- Re-instate the passive grab of KEYCODE-OR-BUTNUM with MODMASK on all windows.</para></listitem>
      <listitem><para><link linkend="X-pointer-mapping"><function>X-pointer-mapping</function></link> -- Return the mapping of physical->logical pointer buttons as a list.</para></listitem>
      <listitem><para><link linkend="keymask-to-string"><function>keymask->string</function></link> -- Return a string representing KEYMASK.</para></listitem>
      <listitem><para><link linkend="keymask-keycode-to-string"><function>keymask-keycode->string</function></link> -- Return a string representing the key press with mask KEYMASK, code KEYCODE.</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>scwm/callbacks.c</title> <itemizedlist>
      <listitem><para><link linkend="safe-load"><function>safe-load</function></link> -- Load file FNAME while trapping and displaying errors.</para></listitem>
      <listitem><para><link linkend="set-load-processing-frequency-x"><function>set-load-processing-frequency!</function></link> -- Invoke hooks on <link linkend="load-processing-hook"><function>load-processing-hook</function></link> every NUM-LINES lines.</para></listitem>
      <listitem><para><link linkend="add-timer-hook-x"><function>add-timer-hook!</function></link> -- Add a timer hook to call PROC once sometime after USEC microseconds.</para></listitem>
      <listitem><para><link linkend="remove-timer-hook-x"><function>remove-timer-hook!</function></link> -- Remove a timer hook identified by HANDLE.</para></listitem>
      <listitem><para><link linkend="reset-timer-hook-x"><function>reset-timer-hook!</function></link> -- Remove all timer-hook procedures.</para></listitem>
      <listitem><para><link linkend="get-timer-hooks-list"><function>get-timer-hooks-list</function></link> -- Return the timer-hooks list.</para></listitem>
      <listitem><para><link linkend="add-input-hook-x"><function>add-input-hook!</function></link> -- Add an input hook to run PROC on input from PORT.</para></listitem>
      <listitem><para><link linkend="remove-input-hook-x"><function>remove-input-hook!</function></link> -- Remove an input hook identified by HANDLE.</para></listitem>
      <listitem><para><link linkend="reset-input-hook-x"><function>reset-input-hook!</function></link> -- Remove all procedures from the input hook.</para></listitem>
      <listitem><para><link linkend="get-input-hooks-list"><function>get-input-hooks-list</function></link> -- Return the input-hooks list.</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>scwm/color.c</title> <itemizedlist>
      <listitem><para><link linkend="color-p"><function>color?</function></link> -- Returns <literal>#t</literal> if OBJ is a color object, otherwise <literal>#f</literal>.</para></listitem>
      <listitem><para><link linkend="color-properties"><function>color-properties</function></link> -- Return an association list giving some properties of COLOR.</para></listitem>
      <listitem><para><link linkend="make-color"><function>make-color</function></link> -- Return the color object corresponding to the X color specifier CNAME.</para></listitem>
      <listitem><para><link linkend="clear-color-cache-entry"><function>clear-color-cache-entry</function></link> -- Colors are cached by name.</para></listitem>
      <listitem><para><link linkend="make-relief-color"><function>make-relief-color</function></link> -- Convert a color into a new color appropriate for a relief.</para></listitem>
      <listitem><para><link linkend="make-reversed-color"><function>make-reversed-color</function></link> -- Return a new color that is opposite COLOR.</para></listitem>
      <listitem><para><link linkend="set-highlight-factor-x"><function>set-highlight-factor!</function></link> -- Use FACTOR to generate highlight colors for the current decor.</para></listitem>
      <listitem><para><link linkend="highlight-factor"><function>highlight-factor</function></link> -- Return the current highlight factor.</para></listitem>
      <listitem><para><link linkend="set-shadow-factor-x"><function>set-shadow-factor!</function></link> -- Use FACTOR to generate shadow colors in the current decor.</para></listitem>
      <listitem><para><link linkend="shadow-factor"><function>shadow-factor</function></link> -- Return the current shadow factor.</para></listitem>
      <listitem><para><link linkend="set-menu-highlight-factor-x"><function>set-menu-highlight-factor!</function></link> -- Use FACTOR to generate highlight colors for menus.</para></listitem>
      <listitem><para><link linkend="menu-highlight-factor"><function>menu-highlight-factor</function></link> -- Return the current menu highlight factor.</para></listitem>
      <listitem><para><link linkend="set-menu-shadow-factor-x"><function>set-menu-shadow-factor!</function></link> -- Use FACTOR to generate shadow colors for menus.</para></listitem>
      <listitem><para><link linkend="menu-shadow-factor"><function>menu-shadow-factor</function></link> -- Return the current menu shadow factor.</para></listitem>
      <listitem><para><link linkend="set-highlight-foreground-x"><function>set-highlight-foreground!</function></link> -- Use FG for the foreground color of a window with the input focus.</para></listitem>
      <listitem><para><link linkend="highlight-foreground"><function>highlight-foreground</function></link> -- Return the default foreground color for windows with the input focus.</para></listitem>
      <listitem><para><link linkend="set-highlight-background-x"><function>set-highlight-background!</function></link> -- Use BG as the background color for a window with the input focus.</para></listitem>
      <listitem><para><link linkend="highlight-background"><function>highlight-background</function></link> -- Return the default background color for windows with the input focus.</para></listitem>
      <listitem><para><link linkend="set-not-menu-foreground-x"><function>set-not-menu-foreground!</function></link> -- Use FG as the default foreground color for icons, titlebars, etc.</para></listitem>
      <listitem><para><link linkend="not-menu-foreground"><function>not-menu-foreground</function></link> -- Return the default foreground color for icons, titlebars, etc.</para></listitem>
      <listitem><para><link linkend="set-not-menu-background-x"><function>set-not-menu-background!</function></link> -- Use BG as the default background color for icons, window frames, etc.</para></listitem>
      <listitem><para><link linkend="not-menu-background"><function>not-menu-background</function></link> -- Return the default background color for icons, window frames, etc.</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>scwm/cursor.c</title> <itemizedlist>
      <listitem><para><link linkend="set-window-cursor-x"><function>set-window-cursor!</function></link> -- Set the default cursor for WIN to CURSOR.</para></listitem>
      <listitem><para><link linkend="get-x-cursor"><function>get-x-cursor</function></link> -- Return the cursor object corresponding to NAME-OR-NUMBER.</para></listitem>
      <listitem><para><link linkend="create-pixmap-cursor"><function>create-pixmap-cursor</function></link> -- Create and return a new cursor object from the pixmap image.</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>scwm/decor.c</title> <itemizedlist>
      <listitem><para><link linkend="make-decor"><function>make-decor</function></link> -- Create a new decor object.</para></listitem>
      <listitem><para><link linkend="default-decor"><function>default-decor</function></link> -- Return the default decor.</para></listitem>
      <listitem><para><link linkend="set-current-decor-x"><function>set-current-decor!</function></link> -- Set the current decor to DECOR.</para></listitem>
      <listitem><para><link linkend="current-decor"><function>current-decor</function></link> -- Return the current decor.</para></listitem>
      <listitem><para><link linkend="set-window-decor-x"><function>set-window-decor!</function></link> -- Set WIN's decor to DECOR, updating its decorations appropriately.</para></listitem>
      <listitem><para><link linkend="window-decor"><function>window-decor</function></link> -- Return WIN's decor.</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>scwm/deskpage.c</title> <itemizedlist>
      <listitem><para><link linkend="set-current-desk-x"><function>set-current-desk!</function></link> -- Change the current desk to DESK.</para></listitem>
      <listitem><para><link linkend="current-desk"><function>current-desk</function></link> -- Returns the integer identifying the current desk.</para></listitem>
      <listitem><para><link linkend="set-viewport-position-x"><function>set-viewport-position!</function></link> -- Position the upper left corner of the viewport at coordinates X, Y.</para></listitem>
      <listitem><para><link linkend="viewport-position"><function>viewport-position</function></link> -- Returns the current position of the viewport in pixels.</para></listitem>
      <listitem><para><link linkend="set-edge-x-scroll-x"><function>set-edge-x-scroll!</function></link> -- Set the horizontal edge scroll increment to PIXELS.</para></listitem>
      <listitem><para><link linkend="edge-x-scroll"><function>edge-x-scroll</function></link> -- Return the horizontal edge scroll increment as set by <link linkend="set-edge-x-scroll-x"><function>set-edge-x-scroll!</function></link>.</para></listitem>
      <listitem><para><link linkend="set-edge-y-scroll-x"><function>set-edge-y-scroll!</function></link> -- Set the vertical edge scroll increment to PIXELS.</para></listitem>
      <listitem><para><link linkend="edge-y-scroll"><function>edge-y-scroll</function></link> -- Return the vertical edge scroll increment as set by <link linkend="set-edge-y-scroll-x"><function>set-edge-y-scroll!</function></link>.</para></listitem>
      <listitem><para><link linkend="set-edge-x-wrap-x"><function>set-edge-x-wrap!</function></link> -- Set whether to wrap pointer around horizontal edges.</para></listitem>
      <listitem><para><link linkend="edge-x-wrap"><function>edge-x-wrap</function></link> -- Return the current horizonatal edge wrap setting as set by <link linkend="set-edge-x-wrap-x"><function>set-edge-x-wrap!</function></link>.</para></listitem>
      <listitem><para><link linkend="set-edge-y-wrap-x"><function>set-edge-y-wrap!</function></link> -- Set whether to wrap pointer around vertical edges.</para></listitem>
      <listitem><para><link linkend="edge-y-wrap"><function>edge-y-wrap</function></link> -- Return the current vertical edge wrap setting as set by <link linkend="set-edge-y-wrap-x"><function>set-edge-y-wrap!</function></link>.</para></listitem>
      <listitem><para><link linkend="set-edge-scroll-delay-x"><function>set-edge-scroll-delay!</function></link> -- Set the edge scroll delay to MS milliseconds.</para></listitem>
      <listitem><para><link linkend="edge-scroll-delay"><function>edge-scroll-delay</function></link> -- Return the edge scroll delay (in ms) as set by <link linkend="set-edge-scroll-delay-x"><function>set-edge-scroll-delay!</function></link>.</para></listitem>
      <listitem><para><link linkend="set-edge-move-threshold-x"><function>set-edge-move-threshold!</function></link> -- Set the edge move threshold to PIXELS.</para></listitem>
      <listitem><para><link linkend="edge-move-threshold"><function>edge-move-threshold</function></link> -- Return the edge move threshold as set by <link linkend="set-edge-move-threshold-x"><function>set-edge-move-threshold!</function></link>.</para></listitem>
      <listitem><para><link linkend="set-desk-size-x"><function>set-desk-size!</function></link> -- Sets the desk size to WIDTH, HEIGHT.</para></listitem>
      <listitem><para><link linkend="desk-size"><function>desk-size</function></link> -- Returns the size of the current desk.</para></listitem>
      <listitem><para><link linkend="display-size"><function>display-size</function></link> -- Returns the size of the physical screen in pixels.</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>scwm/events.c</title> <itemizedlist>
      <listitem><para><link linkend="handle-pending-events"><function>handle-pending-events</function></link> -- Handle all pending Scwm events, returns number of dispatched events.</para></listitem>
      <listitem><para><link linkend="reset-scwmexec-protocol"><function>reset-scwmexec-protocol</function></link> -- Reset the scwmexec protocol.</para></listitem>
      <listitem><para><link linkend="add-motion-handler-x"><function>add-motion-handler!</function></link> -- Call PROC on XMotionEvents.</para></listitem>
      <listitem><para><link linkend="remove-motion-handler-x"><function>remove-motion-handler!</function></link> -- No longer call PROC on XMotionEvents.</para></listitem>
      <listitem><para><link linkend="reset-motion-handlers-x"><function>reset-motion-handlers!</function></link> -- Call no procedures on XMotionEvents.</para></listitem>
      <listitem><para><link linkend="send-key-press"><function>send-key-press</function></link> -- Send a synthetic press of KEY.</para></listitem>
      <listitem><para><link linkend="send-button-press"><function>send-button-press</function></link> -- Send a synthetic mouse press event.</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>scwm/face.c</title> <itemizedlist>
      <listitem><para><link linkend="set-face-flag-x"><function>set-face-flag!</function></link> -- Set the given FLAG to the given FLAGVAL for face FACE.</para></listitem>
      <listitem><para><link linkend="make-face"><function>make-face</function></link> -- Create a new face.</para></listitem>
      <listitem><para><link linkend="set-title-face-x"><function>set-title-face!</function></link> -- Set the titlebar faces for the various window states.</para></listitem>
      <listitem><para><link linkend="set-button-face-x"><function>set-button-face!</function></link> -- Set the button faces for the various window states.</para></listitem>
      <listitem><para><link linkend="set-button-mwm-flag-x"><function>set-button-mwm-flag!</function></link> -- Specify the Mwm flag for BUTTON.</para></listitem>
      <listitem><para><link linkend="set-border-face-x"><function>set-border-face!</function></link> -- Set the face for the border In the current decor.</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>scwm/font.c</title> <itemizedlist>
      <listitem><para><link linkend="make-font"><function>make-font</function></link> -- Return the font object for the X font specifier FNAME.</para></listitem>
      <listitem><para><link linkend="font-p"><function>font?</function></link> -- Returns <literal>#t</literal> if OBJ is a font object, otherwise <literal>#f</literal>.</para></listitem>
      <listitem><para><link linkend="font-properties"><function>font-properties</function></link> -- Return an association list giving some properties of FONT.</para></listitem>
      <listitem><para><link linkend="set-icon-font-x"><function>set-icon-font!</function></link> -- Set the font used for drawing icon titles to FONT.</para></listitem>
      <listitem><para><link linkend="icon-font"><function>icon-font</function></link> -- Return the font used for drawing icon titles.</para></listitem>
      <listitem><para><link linkend="set-title-font-x"><function>set-title-font!</function></link> -- Set the font for window titles In the current decor to FONT.</para></listitem>
      <listitem><para><link linkend="title-font"><function>title-font</function></link> -- Return the font used for drawing window titles in the current decor.</para></listitem>
      <listitem><para><link linkend="clear-font-cache-entry"><function>clear-font-cache-entry</function></link> -- Fonts are cached by name.</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>scwm/Grab.c</title> <itemizedlist>
      <listitem><para><link linkend="X-grab-server"><function>X-grab-server</function></link> -- Grab the X server.</para></listitem>
      <listitem><para><link linkend="X-ungrab-server"><function>X-ungrab-server</function></link> -- Ungrab the X server.</para></listitem>
      <listitem><para><link linkend="X-server-grabs"><function>X-server-grabs</function></link> -- Return the number of nested server grabs.</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>scwm/ICCCM.c</title> <itemizedlist>
      <listitem><para><link linkend="send-client-message"><function>send-client-message</function></link> -- Send WIN the message "ATOM DATA".</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>scwm/image.c</title> <itemizedlist>
      <listitem><para><link linkend="image-p"><function>image?</function></link> -- Returns <literal>#t</literal> if OBJ is an image object, otherwise <literal>#f</literal>.</para></listitem>
      <listitem><para><link linkend="image-properties"><function>image-properties</function></link> -- Return an association list giving some properties of IMAGE.</para></listitem>
      <listitem><para><link linkend="image-short-name"><function>image-short-name</function></link> -- Return the short name of IMAGE.</para></listitem>
      <listitem><para><link linkend="image-size"><function>image-size</function></link> -- Return the size of IMAGE as a list (width height).</para></listitem>
      <listitem><para><link linkend="load-xbm"><function>load-xbm</function></link> -- Load an X Bitmap file identified by the pathname FULL-PATH.</para></listitem>
      <listitem><para><link linkend="load-xpm"><function>load-xpm</function></link> -- Load an X Pixmap file identified by the pathname FULL-PATH.</para></listitem>
      <listitem><para><link linkend="load-imlib-image"><function>load-imlib-image</function></link> -- Load an image file using imlib identified by the pathname FULL-PATH.</para></listitem>
      <listitem><para><link linkend="register-image-loader"><function>register-image-loader</function></link> -- Register PROC as the loader to use for images ending in EXTENSION.</para></listitem>
      <listitem><para><link linkend="unregister-image-loader"><function>unregister-image-loader</function></link> -- Unregister the loader, if any, for images ending in EXTENSION.</para></listitem>
      <listitem><para><link linkend="make-image"><function>make-image</function></link> -- Loads an image from the file NAME.</para></listitem>
      <listitem><para><link linkend="clear-image-cache-entry"><function>clear-image-cache-entry</function></link> -- Images are cached by both name and full pathname.</para></listitem>
      <listitem><para><link linkend="window-to-image"><function>window->image</function></link> -- Return an image with the contents of window WIN.</para></listitem>
      <listitem><para><link linkend="clone-scaled-image"><function>clone-scaled-image</function></link> -- Returns a copy of IMAGE scaled to have dimensions WIDTH by HEIGHT.</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>scwm/menu.c</title> <itemizedlist>
      <listitem><para><link linkend="menu-p"><function>menu?</function></link> -- Return <literal>#t</literal> if and only if OBJ is a menu object.</para></listitem>
      <listitem><para><link linkend="menu-properties"><function>menu-properties</function></link> -- Returns the a list of the menu properties of MENU, a menu object.</para></listitem>
      <listitem><para><link linkend="make-menu"><function>make-menu</function></link> -- Make and return a menu object from the given arguments.</para></listitem>
      <listitem><para><link linkend="set-menu-popup-delay-x"><function>set-menu-popup-delay!</function></link> -- Set MENU's submenu popup delay to POPUP-DELAY.</para></listitem>
      <listitem><para><link linkend="menu-popup-delay"><function>menu-popup-delay</function></link> -- Return MENU's submenu popup delay.</para></listitem>
      <listitem><para><link linkend="set-menu-hover-delay-x"><function>set-menu-hover-delay!</function></link> -- Set MENU's hover delay to HOVER-DELAY.</para></listitem>
      <listitem><para><link linkend="menu-hover-delay"><function>menu-hover-delay</function></link> -- Return MENU's hover action delay.</para></listitem>
      <listitem><para><link linkend="set-menu-look-x"><function>set-menu-look!</function></link> -- Use MENU-LOOK as the menu-look for MENU.</para></listitem>
      <listitem><para><link linkend="set-menu-title-x"><function>set-menu-title!</function></link> -- Use MENU-TITLE as the title for MENU.</para></listitem>
      <listitem><para><link linkend="set-menu-colors-x"><function>set-menu-colors!</function></link> -- Use TEXT-COLOR and BG-COLOR as the colors for MENU.</para></listitem>
      <listitem><para><link linkend="set-menu-highlight-colors-x"><function>set-menu-highlight-colors!</function></link> -- Use TEXT-COLOR and BG-COLOR as the highlight colors for MENU.</para></listitem>
      <listitem><para><link linkend="set-menu-highlight-relief-x"><function>set-menu-highlight-relief!</function></link> -- If HIGHLIGHT-RELIEF? is <literal>#t</literal>, then draw a relief on selected items in MENU.</para></listitem>
      <listitem><para><link linkend="menu-highlight-colors"><function>menu-highlight-colors</function></link> -- Return list text-color, bg-color, the highlight colors for MENU.</para></listitem>
      <listitem><para><link linkend="menu-highlight-relief-p"><function>menu-highlight-relief?</function></link> -- Return <literal>#t</literal> if MENU's selected item is relieved, <literal>#f</literal> otherwise.</para></listitem>
      <listitem><para><link linkend="set-menu-font-x"><function>set-menu-font!</function></link> -- Use FONT as the font for MENU.</para></listitem>
      <listitem><para><link linkend="set-menu-side-picture-x"><function>set-menu-side-picture!</function></link> -- Use PICTURE as the side picture for MENU.</para></listitem>
      <listitem><para><link linkend="set-menu-background-picture-x"><function>set-menu-background-picture!</function></link> -- Use PICTURE as the background image for MENU.</para></listitem>
      <listitem><para><link linkend="set-menu-extra-options-x"><function>set-menu-extra-options!</function></link> -- Set MENU's extra options to OPTIONS.</para></listitem>
      <listitem><para><link linkend="set-menu-hotkeys-activate-item-x"><function>set-menu-hotkeys-activate-item!</function></link> -- If ACTIVATE? is <literal>#t</literal>, let menu hotkeys invoke the item.</para></listitem>
      <listitem><para><link linkend="menu-hotkeys-activate-item-p"><function>menu-hotkeys-activate-item?</function></link> -- Return <literal>#t</literal> if hotkeys invoke item, <literal>#f</literal> if they just select the item.</para></listitem>
      <listitem><para><link linkend="popup-menu"><function>popup-menu</function></link> -- Popup MENU, a menu object, and warp to the first item if WARP-TO-FIRST? is <literal>#t</literal>.</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>scwm/menuitem.c</title> <itemizedlist>
      <listitem><para><link linkend="menuitem-p"><function>menuitem?</function></link> -- Return <literal>#t</literal> if and only if OBJ is a menu item object.</para></listitem>
      <listitem><para><link linkend="menuitem-properties"><function>menuitem-properties</function></link> -- Return a list of the properties of the given MENU-ITEM.</para></listitem>
      <listitem><para><link linkend="make-menuitem"><function>make-menuitem</function></link> -- Return a newly created menuitem object using the given arguments.</para></listitem>
      <listitem><para><link linkend="set-menuitem-colors-x"><function>set-menuitem-colors!</function></link> -- Sets the fg and bg colors of MENUITEM to FG and BG respectively.</para></listitem>
      <listitem><para><link linkend="menuitem-colors"><function>menuitem-colors</function></link> -- Returns a list of the fg and bg colors for MENUITEM.</para></listitem>
      <listitem><para><link linkend="set-menuitem-font-x"><function>set-menuitem-font!</function></link> -- Sets the font of MENUITEM to FONT.</para></listitem>
      <listitem><para><link linkend="menuitem-font"><function>menuitem-font</function></link> -- Returns the font of MENUITEM.</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>scwm/menulook.c</title> <itemizedlist>
      <listitem><para><link linkend="menu-look-p"><function>menu-look?</function></link> -- Return <literal>#t</literal> if OBJ is a menulook object, <literal>#f</literal> otherwise.</para></listitem>
      <listitem><para><link linkend="copy-menu-look"><function>copy-menu-look</function></link> -- Copy menu look ORIGINAL-MENU-LOOK with a new NAME and optional EXTRA.</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>scwm/message-window.c</title> <itemizedlist>
      <listitem><para><link linkend="message-window-p"><function>message-window?</function></link> -- Returns <literal>#t</literal> if MWN is a msgwindow object, otherwise <literal>#f</literal>.</para></listitem>
      <listitem><para><link linkend="make-message-window"><function>make-message-window</function></link> -- Returns a newly created message window object with string MESSAGE.</para></listitem>
      <listitem><para><link linkend="id-to-message-window"><function>id->message-window</function></link> -- Return the message-window of an X/11 window id (a long integer).</para></listitem>
      <listitem><para><link linkend="message-window-set-message-x"><function>message-window-set-message!</function></link> -- Changes the message displayed by the message window MWN.</para></listitem>
      <listitem><para><link linkend="message-window-set-image-x"><function>message-window-set-image!</function></link> -- Changes the background image for the message window MWN to IMAGE.</para></listitem>
      <listitem><para><link linkend="message-window-set-font-x"><function>message-window-set-font!</function></link> -- Set the font to be used for the message window MWN.</para></listitem>
      <listitem><para><link linkend="message-window-set-colors-x"><function>message-window-set-colors!</function></link> -- Set the fore- and background colors to be used for the message window MWN.</para></listitem>
      <listitem><para><link linkend="message-window-set-position-x"><function>message-window-set-position!</function></link> -- Set the position to be used for the message window MWN.</para></listitem>
      <listitem><para><link linkend="message-window-set-size-x"><function>message-window-set-size!</function></link> -- Set the size of message window MWN to WIDTH pixels by HEIGHT pixels.</para></listitem>
      <listitem><para><link linkend="message-window-set-relief-x"><function>message-window-set-relief!</function></link> -- Sets the relief for the window MWN.</para></listitem>
      <listitem><para><link linkend="message-window-show-x"><function>message-window-show!</function></link> -- Displays the message window MWN on the screen.</para></listitem>
      <listitem><para><link linkend="message-window-hide-x"><function>message-window-hide!</function></link> -- Hide the message window MWN.</para></listitem>
      <listitem><para><link linkend="message-window-visible-p"><function>message-window-visible?</function></link> -- Return <literal>#t</literal> if the message window MWN is visible, <literal>#f</literal> otherwise.</para></listitem>
      <listitem><para><link linkend="message-window-message"><function>message-window-message</function></link> -- Returns the message that message window MWN displays.</para></listitem>
      <listitem><para><link linkend="message-window-image"><function>message-window-image</function></link> -- Returns the image that message window MWN displays.</para></listitem>
      <listitem><para><link linkend="message-window-position"><function>message-window-position</function></link> -- Returns the position that message window MWN is/will be displayed at.</para></listitem>
      <listitem><para><link linkend="message-window-size"><function>message-window-size</function></link> -- Returns the size of message window MWN in pixels.</para></listitem>
      <listitem><para><link linkend="message-window-font"><function>message-window-font</function></link> -- Returns the font that the message window MWN uses for displaying text.</para></listitem>
      <listitem><para><link linkend="message-window-id"><function>message-window-id</function></link> -- Returns the X11 id of message window MWN.</para></listitem>
      <listitem><para><link linkend="message-window-colors"><function>message-window-colors</function></link> -- Returns the colors that the message window MWN is displayed with.</para></listitem>
      <listitem><para><link linkend="message-window-relief-p"><function>message-window-relief?</function></link> -- Returns the relief setting for the message window MWN.</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>scwm/miscprocs.c</title> <itemizedlist>
      <listitem><para><link linkend="set-title-justify-x"><function>set-title-justify!</function></link> -- Set the justification for the title to JUST.</para></listitem>
      <listitem><para><link linkend="title-justify"><function>title-justify</function></link> -- Return the current justification for the title, as set by <link linkend="set-title-justify-x"><function>set-title-justify!</function></link>.</para></listitem>
      <listitem><para><link linkend="set-title-height-x"><function>set-title-height!</function></link> -- Set the height of the titlebar in pixels to HEIGHT.</para></listitem>
      <listitem><para><link linkend="title-height"><function>title-height</function></link> -- Return the height of the titlebar in pixels, as set by <link linkend="set-title-height-x"><function>set-title-height!</function></link>.</para></listitem>
      <listitem><para><link linkend="restarted-p"><function>restarted?</function></link> -- Returns true if scwm is being restarted by itself.</para></listitem>
      <listitem><para><link linkend="capturing-p"><function>capturing?</function></link> -- Returns <literal>#t</literal> when the windows are being captured.</para></listitem>
      <listitem><para><link linkend="refresh"><function>refresh</function></link> -- Make sure all windows and their decorations are up to date.</para></listitem>
      <listitem><para><link linkend="set-click-delay-x"><function>set-click-delay!</function></link> -- Set the delay used in identifying mouse clicks and drags.</para></listitem>
      <listitem><para><link linkend="click-delay"><function>click-delay</function></link> -- Returns the delay used in identifying mouse clicks and drags, in milliseconds.</para></listitem>
      <listitem><para><link linkend="set-colormap-focus-x"><function>set-colormap-focus!</function></link> -- Set the colormap focus policy to FTYPE.</para></listitem>
      <listitem><para><link linkend="colormap-focus"><function>colormap-focus</function></link> -- Return the colormap focus policy, as set by <link linkend="set-colormap-focus-x"><function>set-colormap-focus!</function></link>.</para></listitem>
      <listitem><para><link linkend="pointer-position"><function>pointer-position</function></link> -- Return the current position of the mouse pointer in pixels.</para></listitem>
      <listitem><para><link linkend="move-pointer-to"><function>move-pointer-to</function></link> -- Move the mouse pointer to viewport coordinates SX, SY.</para></listitem>
      <listitem><para><link linkend="recapture"><function>recapture</function></link> -- Recapture all the windows.</para></listitem>
      <listitem><para><link linkend="beep"><function>beep</function></link> -- Ring the standard X bell.</para></listitem>
      <listitem><para><link linkend="set-smart-placement-is-really-smart-x"><function>set-smart-placement-is-really-smart!</function></link> -- Determine whether or not <link linkend="clever-place-window"><function>clever-place-window</function></link> will be used when smart-placing.</para></listitem>
      <listitem><para><link linkend="smart-placement-is-really-smart-p"><function>smart-placement-is-really-smart?</function></link> -- Return whether or not <link linkend="clever-place-window"><function>clever-place-window</function></link> will be used when smart-placing.</para></listitem>
      <listitem><para><link linkend="set-click-to-focus-passes-click-x"><function>set-click-to-focus-passes-click!</function></link> -- Determine whether a click-to-focus window receives the click.</para></listitem>
      <listitem><para><link linkend="click-to-focus-passes-click-p"><function>click-to-focus-passes-click?</function></link> -- Returns a boolean valude indicating whether a click-to-focus window receives the click.</para></listitem>
      <listitem><para><link linkend="set-click-to-focus-raises-x"><function>set-click-to-focus-raises!</function></link> -- Determine whether a click to focus raises the clicked-on window.</para></listitem>
      <listitem><para><link linkend="click-to-focus-raises-p"><function>click-to-focus-raises?</function></link> -- Returns a boolean valude indicating whether a click-to-focus window gets raised on focus.</para></listitem>
      <listitem><para><link linkend="set-mouse-focus-click-raises-x"><function>set-mouse-focus-click-raises!</function></link> -- Determine whether a mouse-focus-click will raise the window.</para></listitem>
      <listitem><para><link linkend="mouse-focus-click-raises-p"><function>mouse-focus-click-raises?</function></link> -- Returns a boolean value indicating whether a mouse-focus-click will raise the window.</para></listitem>
      <listitem><para><link linkend="X-rotate-cut-buffers"><function>X-rotate-cut-buffers</function></link> -- Rotate the X cut buffers by N positions.</para></listitem>
      <listitem><para><link linkend="elapsed-time"><function>elapsed-time</function></link> -- Return the elapsed time in milliseconds since O.</para></listitem>
      <listitem><para><link linkend="scwm-last-timestamp"><function>scwm-last-timestamp</function></link> -- Return the timestamp of the last event Scwm handled.</para></listitem>
      <listitem><para><link linkend="scwm-version"><function>scwm-version</function></link> -- Return the version of scwm running.</para></listitem>
      <listitem><para><link linkend="scwm-version-date"><function>scwm-version-date</function></link> -- Return the date that the running scwm was last changed as a string.</para></listitem>
      <listitem><para><link linkend="scwm-path-prefix"><function>scwm-path-prefix</function></link> -- Return the <envar>$PREFIX</envar> directory path that scwm was installed with.</para></listitem>
      <listitem><para><link linkend="scwm-path-exec-prefix"><function>scwm-path-exec-prefix</function></link> -- Return the <envar>$EXEC_PREFIX</envar> directory path that scwm was installed with.</para></listitem>
      <listitem><para><link linkend="set-X-server-synchronize-x"><function>set-X-server-synchronize!</function></link> -- Set X server sychronization flag to FLAG.</para></listitem>
      <listitem><para><link linkend="X-version-information"><function>X-version-information</function></link> -- Return some information about the version of the running X server.</para></listitem>
      <listitem><para><link linkend="X-display-information"><function>X-display-information</function></link> -- Return some information about the screen.</para></listitem>
      <listitem><para><link linkend="user-name"><function>user-name</function></link> -- Return the current user's name.</para></listitem>
      <listitem><para><link linkend="user-home"><function>user-home</function></link> -- Return the current user's home directory.</para></listitem>
      <listitem><para><link linkend="force-segv-for-testing"><function>force-segv-for-testing</function></link> -- Cause a segmentation violation.</para></listitem>
      <listitem><para><link linkend="set-reset-on-segv-x"><function>set-reset-on-segv!</function></link> -- Reset Scwm to the main event loop on the next NUMBER-TO-RESET segv signals.</para></listitem>
      <listitem><para><link linkend="reset-on-segv"><function>reset-on-segv</function></link> -- Return the number of segv signals Scwm will reset on.</para></listitem>
      <listitem><para><link linkend="set-handle-segv-x"><function>set-handle-segv!</function></link> -- If FLAG, tell Scwm to catch segv signals.</para></listitem>
      <listitem><para><link linkend="x-connection-number"><function>x-connection-number</function></link> -- Return the X connection file descriptor number.</para></listitem>
      <listitem><para><link linkend="get-key-event"><function>get-key-event</function></link> -- Return a represention of the next key event.</para></listitem>
      <listitem><para><link linkend="get-mouse-event"><function>get-mouse-event</function></link> -- Return a represention of the next mouse event.</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>scwm/module-interface.c</title> <itemizedlist>
      <listitem><para><link linkend="marshal-fvwm2-config-info"><function>marshal-fvwm2-config-info</function></link> -- Constructs a fvwm2 BroadcastInfo module packet.</para></listitem>
      <listitem><para><link linkend="marshal-fvwm2-iconify-info"><function>marshal-fvwm2-iconify-info</function></link> -- Constructs a fvwm2 "M_ICONIFY" module packet.</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>scwm/move.c</title> <itemizedlist>
      <listitem><para><link linkend="rubber-band-move"><function>rubber-band-move</function></link> -- Move WIN interactively, using a rubber band frame.</para></listitem>
      <listitem><para><link linkend="opaque-move"><function>opaque-move</function></link> -- Move WIN interactively, opaquely.</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>scwm/placement.c</title> <itemizedlist>
      <listitem><para><link linkend="place-on-default-desk"><function>place-on-default-desk</function></link> -- Place WIN on a desk according to the default algorithm.</para></listitem>
      <listitem><para><link linkend="smart-place-window"><function>smart-place-window</function></link> -- Places WIN using fvwm2's SmartPlacement algorithm.</para></listitem>
      <listitem><para><link linkend="clever-place-window"><function>clever-place-window</function></link> -- Places WIN using fvwm2's "ReallySmart" algorithm.</para></listitem>
      <listitem><para><link linkend="random-place-window"><function>random-place-window</function></link> -- Places WIN just as if being placed by fvwm2's RandomPlacement.</para></listitem>
      <listitem><para><link linkend="default-placement-proc"><function>default-placement-proc</function></link> -- Use various flags to call an appropriate placement function.</para></listitem>
      <listitem><para><link linkend="default-transient-placement-proc"><function>default-transient-placement-proc</function></link> -- This is the default placement procedure for transient windows.</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>scwm/resize.c</title> <itemizedlist>
      <listitem><para><link linkend="set-rubber-band-mask-x"><function>set-rubber-band-mask!</function></link> -- Set the rubber band mask used when dragging or resizing.</para></listitem>
      <listitem><para><link linkend="rubber-band-resize"><function>rubber-band-resize</function></link> -- Resize WIN interactively, using a rubber band frame.</para></listitem>
      <listitem><para><link linkend="opaque-resize"><function>opaque-resize</function></link> -- Resize WIN interactively, opaquely.</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>scwm/session-manager.c</title> <itemizedlist>
      <listitem><para><link linkend="SM-error-message"><function>SM-error-message</function></link> -- Return a string, describing why session management is not available.</para></listitem>
      <listitem><para><link linkend="SM-register"><function>SM-register</function></link> -- Register Scwm with the session manager, and return the client id.</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>scwm/shutdown.c</title> <itemizedlist>
      <listitem><para><link linkend="restart"><function>restart</function></link> -- Restart the window manager.</para></listitem>
      <listitem><para><link linkend="scwm-quit"><function>scwm-quit</function></link> -- Exit scwm cleanly.</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>scwm/window.c</title> <itemizedlist>
      <listitem><para><link linkend="window-p"><function>window?</function></link> -- Returns <literal>#t</literal> if OBJ is a window object, otherwise returns <literal>#f</literal>.</para></listitem>
      <listitem><para><link linkend="window-valid-p"><function>window-valid?</function></link> -- Returns <literal>#t</literal> if OBJ is window object and is still valid, otherwise returns <literal>#f</literal>.</para></listitem>
      <listitem><para><link linkend="window-fully-constructed-p"><function>window-fully-constructed?</function></link> -- Returns <literal>#t</literal> if WIN is a fully-constructed window, otherwise <literal>#f</literal>.</para></listitem>
      <listitem><para><link linkend="window-mapped-p"><function>window-mapped?</function></link> -- Returns <literal>#t</literal> if WIN is mapped, otherwise returns <literal>#f</literal>.</para></listitem>
      <listitem><para><link linkend="window-map-pending-p"><function>window-map-pending?</function></link> -- Returns <literal>#t</literal> if the mapping of WIN is pending, otherwise returns <literal>#f</literal>.</para></listitem>
      <listitem><para><link linkend="select-viewport-position"><function>select-viewport-position</function></link> -- Select a viewport position and return the window there.</para></listitem>
      <listitem><para><link linkend="get-window"><function>get-window</function></link> -- Retrieve the window context or select interactively.</para></listitem>
      <listitem><para><link linkend="force-reset-window-frame-x"><function>force-reset-window-frame!</function></link> -- This redraws the window frame and decorations of WIN.</para></listitem>
      <listitem><para><link linkend="set-window-context-x"><function>set-window-context!</function></link> -- Set the current window context to WIN and return the old context.</para></listitem>
      <listitem><para><link linkend="window-context"><function>window-context</function></link> -- Returns the current window context, or <literal>#f</literal> if there is none.</para></listitem>
      <listitem><para><link linkend="current-window-with-focus"><function>current-window-with-focus</function></link> -- Return the window that currently has the input focus.</para></listitem>
      <listitem><para><link linkend="current-window-with-pointer"><function>current-window-with-pointer</function></link> -- Return the window that currently contains the mouse pointer.</para></listitem>
      <listitem><para><link linkend="delete-window"><function>delete-window</function></link> -- Request that WIN remove itself from the display.</para></listitem>
      <listitem><para><link linkend="destroy-window"><function>destroy-window</function></link> -- Forcibly remove WIN from the screen.</para></listitem>
      <listitem><para><link linkend="window-deletable-p"><function>window-deletable?</function></link> -- Return <literal>#t</literal> if WIN is able to be deleted, <literal>#f</literal> otherwise.</para></listitem>
      <listitem><para><link linkend="focus"><function>focus</function></link> -- Give WIN the input focus.</para></listitem>
      <listitem><para><link linkend="unfocus"><function>unfocus</function></link> -- Remove the input focus from any window that may have it.</para></listitem>
      <listitem><para><link linkend="warp-to-window"><function>warp-to-window</function></link> -- Move the mouse pointer to the upper left corner of WIN.</para></listitem>
      <listitem><para><link linkend="raise-window"><function>raise-window</function></link> -- Raise WIN to the top of the window stack.</para></listitem>
      <listitem><para><link linkend="lower-window"><function>lower-window</function></link> -- Lower WIN to the bottom of the window stack.</para></listitem>
      <listitem><para><link linkend="restack-windows"><function>restack-windows</function></link> -- Restack the windows in WINLIST from front to back.</para></listitem>
      <listitem><para><link linkend="raised-p"><function>raised?</function></link> -- Return <literal>#t</literal> if WIN is currently raised, <literal>#f</literal> if not.</para></listitem>
      <listitem><para><link linkend="transient-p"><function>transient?</function></link> -- Return <literal>#t</literal> if WIN is transient, <literal>#f</literal> if not.</para></listitem>
      <listitem><para><link linkend="window-transient-for"><function>window-transient-for</function></link> -- Return the window for which WIN is transient.</para></listitem>
      <listitem><para><link linkend="iconify"><function>iconify</function></link> -- Iconify WIN.</para></listitem>
      <listitem><para><link linkend="deiconify"><function>deiconify</function></link> -- Deiconify WIN.</para></listitem>
      <listitem><para><link linkend="iconified-p"><function>iconified?</function></link> -- Return <literal>#t</literal> if WIN is iconified, otherwise return <literal>#f</literal>.</para></listitem>
      <listitem><para><link linkend="stick"><function>stick</function></link> -- Make WIN "sticky" so that it stays stationary in the viewport.</para></listitem>
      <listitem><para><link linkend="unstick"><function>unstick</function></link> -- Cause a window to no longer be "sticky", if it is.</para></listitem>
      <listitem><para><link linkend="sticky-p"><function>sticky?</function></link> -- Return <literal>#t</literal> if WIN is "sticky", <literal>#f</literal> otherwise.</para></listitem>
      <listitem><para><link linkend="window-shade"><function>window-shade</function></link> -- Cause WIN to become "window-shaded".</para></listitem>
      <listitem><para><link linkend="window-unshade"><function>window-unshade</function></link> -- Reverse the effect of <link linkend="window-shade"><function>window-shade</function></link> on WIN.</para></listitem>
      <listitem><para><link linkend="window-shaded-p"><function>window-shaded?</function></link> -- Return <literal>#t</literal> if WIN is shaded.</para></listitem>
      <listitem><para><link linkend="move-window"><function>move-window</function></link> -- Move WIN to virtual coordinates X, Y.</para></listitem>
      <listitem><para><link linkend="resize-to"><function>resize-to</function></link> -- Resize WIN's client area to a size of W by H in pixels.</para></listitem>
      <listitem><para><link linkend="resize-frame-to"><function>resize-frame-to</function></link> -- Resize WIN to a size of W by H in pixels.</para></listitem>
      <listitem><para><link linkend="window-size-hints"><function>window-size-hints</function></link> -- Return a list of the window size hints associated with WIN.</para></listitem>
      <listitem><para><link linkend="refresh-window"><function>refresh-window</function></link> -- Refresh the decorations on window WIN.</para></listitem>
      <listitem><para><link linkend="move-window-to-desk"><function>move-window-to-desk</function></link> -- Move WIN to DESK.</para></listitem>
      <listitem><para><link linkend="window-gravity"><function>window-gravity</function></link> -- Return the gravity for WIN as a symbol.</para></listitem>
      <listitem><para><link linkend="set-window-gravity-x"><function>set-window-gravity!</function></link> -- Sets the gravity for WIN to GRAVITY.</para></listitem>
      <listitem><para><link linkend="window-position"><function>window-position</function></link> -- Return the position of WIN in pixels.</para></listitem>
      <listitem><para><link linkend="icon-position"><function>icon-position</function></link> -- Return the position of the icon for WIN.</para></listitem>
      <listitem><para><link linkend="icon-size"><function>icon-size</function></link> -- Return the size of the icon for WIN.</para></listitem>
      <listitem><para><link linkend="window-frame-size"><function>window-frame-size</function></link> -- Return the size of the frame of WIN.</para></listitem>
      <listitem><para><link linkend="window-size"><function>window-size</function></link> -- Return the size of the application window of WIN.</para></listitem>
      <listitem><para><link linkend="window-title-size"><function>window-title-size</function></link> -- Return a list with the width and height of WIN's titlebar.</para></listitem>
      <listitem><para><link linkend="window-frame-border-width"><function>window-frame-border-width</function></link> -- Return the width of WIN's frame's border.</para></listitem>
      <listitem><para><link linkend="window-id"><function>window-id</function></link> -- Return the X window id for WIN.</para></listitem>
      <listitem><para><link linkend="window-frame-id"><function>window-frame-id</function></link> -- Return the X window id for the outermost frame window of WIN.</para></listitem>
      <listitem><para><link linkend="id-to-window"><function>id->window</function></link> -- Return the window object corresponding to an application WINDOW-ID.</para></listitem>
      <listitem><para><link linkend="frame-id-to-window"><function>frame-id->window</function></link> -- Return the window object corresponding to a frame WINDOW-ID.</para></listitem>
      <listitem><para><link linkend="any-id-to-window"><function>any-id->window</function></link> -- Return the window object that contains the window with id WINDOW-ID.</para></listitem>
      <listitem><para><link linkend="window-desk"><function>window-desk</function></link> -- Return the desk that WIN is currently on.</para></listitem>
      <listitem><para><link linkend="window-title"><function>window-title</function></link> -- Return the window title of WIN, as requested by the application.</para></listitem>
      <listitem><para><link linkend="window-icon-title"><function>window-icon-title</function></link> -- Return the icon window title of WIN.</para></listitem>
      <listitem><para><link linkend="window-class-hint"><function>window-class-hint</function></link> -- DEPRECATED.</para></listitem>
      <listitem><para><link linkend="window-resource-hint"><function>window-resource-hint</function></link> -- DEPRECATED.</para></listitem>
      <listitem><para><link linkend="window-last-focus-time"><function>window-last-focus-time</function></link> -- Return the time that WIN was last focussed in seconds since 1/1/70.</para></listitem>
      <listitem><para><link linkend="window-creation-time"><function>window-creation-time</function></link> -- Return the time that WIN was created in seconds since 1/1/70.</para></listitem>
      <listitem><para><link linkend="list-all-windows"><function>list-all-windows</function></link> -- Return a list of all of the top-level window objects.</para></listitem>
      <listitem><para><link linkend="list-stacking-order"><function>list-stacking-order</function></link> -- Return a list of all non-iconified the top-level window objects, from top to bottom.</para></listitem>
      <listitem><para><link linkend="list-focus-order"><function>list-focus-order</function></link> -- Return a list of all the top-level window objects in focus order.</para></listitem>
      <listitem><para><link linkend="keep-on-top"><function>keep-on-top</function></link> -- Ensure that WIN is kept on top of all other windows.</para></listitem>
      <listitem><para><link linkend="un-keep-on-top"><function>un-keep-on-top</function></link> -- Remove the on-top property from WIN, if it has it.</para></listitem>
      <listitem><para><link linkend="kept-on-top-p"><function>kept-on-top?</function></link> -- Return <literal>#t</literal> if WIN is an on-top window, <literal>#f</literal> otherwise.</para></listitem>
      <listitem><para><link linkend="show-titlebar"><function>show-titlebar</function></link> -- Cause WIN to be decorated with a titlebar.</para></listitem>
      <listitem><para><link linkend="hide-titlebar"><function>hide-titlebar</function></link> -- Cause WIN not to be decorated with a titlebar.</para></listitem>
      <listitem><para><link linkend="titlebar-shown-p"><function>titlebar-shown?</function></link> -- Return <literal>#t</literal> if WIN is decorated with a titlebar, <literal>#f</literal> otherwise.</para></listitem>
      <listitem><para><link linkend="normal-border"><function>normal-border</function></link> -- Cause WIN to be decorated with a normal border.</para></listitem>
      <listitem><para><link linkend="plain-border"><function>plain-border</function></link> -- Cause WIN to be decorated with a plain border.</para></listitem>
      <listitem><para><link linkend="border-normal-p"><function>border-normal?</function></link> -- Return <literal>#t</literal> if WIN has a normal border, <literal>#f</literal> if it has a plain border.</para></listitem>
      <listitem><para><link linkend="set-border-width-x"><function>set-border-width!</function></link> -- Set the border width of WIN's border to WIDTH pixels.</para></listitem>
      <listitem><para><link linkend="stick-icon"><function>stick-icon</function></link> -- Cause WIN's icon to become "sticky".</para></listitem>
      <listitem><para><link linkend="unstick-icon"><function>unstick-icon</function></link> -- Cause WIN's icon to no longer by "sticky".</para></listitem>
      <listitem><para><link linkend="icon-sticky-p"><function>icon-sticky?</function></link> -- Return <literal>#t</literal> if WIN is "sticky", <literal>#f</literal> otherwise.</para></listitem>
      <listitem><para><link linkend="set-icon-box-x"><function>set-icon-box!</function></link> -- Set the icon box in which WIN's icon will be placed.</para></listitem>
      <listitem><para><link linkend="set-window-focus-x"><function>set-window-focus!</function></link> -- Set the focus style of WIN to SYM.</para></listitem>
      <listitem><para><link linkend="get-window-focus"><function>get-window-focus</function></link> -- Get the focus style of WIN.</para></listitem>
      <listitem><para><link linkend="get-window-colors"><function>get-window-colors</function></link> -- Return a two-element list, "(fg bg)", the colors for WIN.</para></listitem>
      <listitem><para><link linkend="get-window-highlight-colors"><function>get-window-highlight-colors</function></link> -- Return a two-element list, "(fg bg)", the highlight colors for WIN.</para></listitem>
      <listitem><para><link linkend="set-window-foreground-x"><function>set-window-foreground!</function></link> -- Set the foreground color of WIN to FG.</para></listitem>
      <listitem><para><link linkend="set-window-background-x"><function>set-window-background!</function></link> -- Set the background color of WIN to BG.</para></listitem>
      <listitem><para><link linkend="set-window-highlight-foreground-x"><function>set-window-highlight-foreground!</function></link> -- Set the highlighted foreground color of WIN to FG.</para></listitem>
      <listitem><para><link linkend="set-window-highlight-background-x"><function>set-window-highlight-background!</function></link> -- Set the highlighted background color of WIN to BG.</para></listitem>
      <listitem><para><link linkend="set-random-placement-x"><function>set-random-placement!</function></link> -- Set the random-placement flag of WIN to boolean FLAG.</para></listitem>
      <listitem><para><link linkend="set-smart-placement-x"><function>set-smart-placement!</function></link> -- Set the smart-placement flag of WIN to boolean FLAG.</para></listitem>
      <listitem><para><link linkend="set-window-button-x"><function>set-window-button!</function></link> -- Set the visibility of button number N on window WIN.</para></listitem>
      <listitem><para><link linkend="set-mwm-buttons-x"><function>set-mwm-buttons!</function></link> -- Set the mwm-buttons flag of WIN to boolean FLAG.</para></listitem>
      <listitem><para><link linkend="set-mwm-border-x"><function>set-mwm-border!</function></link> -- Set the mwm-border style flag of WIN to boolean FLAG.</para></listitem>
      <listitem><para><link linkend="set-icon-title-x"><function>set-icon-title!</function></link> -- Set the visibility of WIN's icon title according to FLAG.</para></listitem>
      <listitem><para><link linkend="set-force-icon-x"><function>set-force-icon!</function></link> -- Set the window-manager-overriding property for WIN to boolean FLAG.</para></listitem>
      <listitem><para><link linkend="set-show-icon-x"><function>set-show-icon!</function></link> -- Set whether or not the icon of WIN will be visible.</para></listitem>
      <listitem><para><link linkend="set-icon-x"><function>set-icon!</function></link> -- Set the image to use for the icon of WIN to IMAGE.</para></listitem>
      <listitem><para><link linkend="window-icon"><function>window-icon</function></link> -- Get the icon image being used for WIN.</para></listitem>
      <listitem><para><link linkend="set-mini-icon-x"><function>set-mini-icon!</function></link> -- Set the image to use for the mini-icon of WIN to IMAGE.</para></listitem>
      <listitem><para><link linkend="window-mini-icon"><function>window-mini-icon</function></link> -- Get the mini-icon image being used for WIN.</para></listitem>
      <listitem><para><link linkend="window-shaped-p"><function>window-shaped?</function></link> -- Return <literal>#t</literal> if WIN is a shaped window, <literal>#f</literal> otherwise.</para></listitem>
      <listitem><para><link linkend="window-icon-shaped-p"><function>window-icon-shaped?</function></link> -- Return <literal>#t</literal> if WIN has shaped icon, <literal>#f</literal> otherwise.</para></listitem>
      <listitem><para><link linkend="set-hint-override-x"><function>set-hint-override!</function></link> -- Set whether or not Mwm and Open Look function hints are used.</para></listitem>
      <listitem><para><link linkend="set-decorate-transient-x"><function>set-decorate-transient!</function></link> -- Set decoration of transients property on WIN.</para></listitem>
      <listitem><para><link linkend="set-mwm-decor-hint-x"><function>set-mwm-decor-hint!</function></link> -- Set whether or not Motif decoration hints are used for WIN.</para></listitem>
      <listitem><para><link linkend="set-mwm-func-hint-x"><function>set-mwm-func-hint!</function></link> -- Set whether or not Motif function hints are used for WIN.</para></listitem>
      <listitem><para><link linkend="set-PPosition-hint-x"><function>set-PPosition-hint!</function></link> -- Set or reset the program-specified position hint for WIN.</para></listitem>
      <listitem><para><link linkend="set-OL-decor-hint-x"><function>set-OL-decor-hint!</function></link> -- Determine whether or not to respect Open Look decoration hints.</para></listitem>
      <listitem><para><link linkend="set-start-on-desk-x"><function>set-start-on-desk!</function></link> -- Make WIN start on DESK when first mapped.</para></listitem>
      <listitem><para><link linkend="set-skip-mapping-x"><function>set-skip-mapping!</function></link> -- Set or reset whether scwm should not change desktops on a map.</para></listitem>
      <listitem><para><link linkend="set-lenience-x"><function>set-lenience!</function></link> -- Set or reset the input focus lenience flag.</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>scwm/winprop.c</title> <itemizedlist>
      <listitem><para><link linkend="set-window-property-x"><function>set-window-property!</function></link> -- Set window property PROP of WIN to VAL.</para></listitem>
      <listitem><para><link linkend="window-property"><function>window-property</function></link> -- Retrieve window property PROP of WIN.</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>scwm/xproperty.c</title> <itemizedlist>
      <listitem><para><link linkend="X-property-set-x"><function>X-property-set!</function></link> -- Set X property NAME on window WIN to VALUE.</para></listitem>
      <listitem><para><link linkend="X-property-get"><function>X-property-get</function></link> -- Get X property NAME of window WIN.</para></listitem>
      <listitem><para><link linkend="X-property-delete-x"><function>X-property-delete!</function></link> -- Delete X property NAME of window WIN.</para></listitem>
      <listitem><para><link linkend="X-properties"><function>X-properties</function></link> -- Returns a list of WIN's X property names.</para></listitem>
      <listitem><para><link linkend="string-to-X-atom"><function>string->X-atom</function></link> -- Returns an X atom representing STRING.</para></listitem>
      <listitem><para><link linkend="X-atom-to-string"><function>X-atom->string</function></link> -- Returns the string represented by ATOM.</para></listitem>
    </itemizedlist> </sect1>
    <sect1><title>scwm/xrm.c</title> <itemizedlist>
      <listitem><para><link linkend="X-resource-put"><function>X-resource-put</function></link> -- Stores string VALUE as X resource RESOURCE (also a string).</para></listitem>
      <listitem><para><link linkend="X-resource-get"><function>X-resource-get</function></link> -- Get X resource specified by NAME and XCLASS from Xrm database.</para></listitem>
      <listitem><para><link linkend="X-resource-database-save"><function>X-resource-database-save</function></link> -- Save the Scwm resource database to FILENAME.</para></listitem>
    </itemizedlist> </sect1>
  </chapter>
  <chapter>
    <title>Procedures in Alphabetical Order</title>
<refentry id="pctx">
  <refnamediv>
    <refname>%x</refname>
    <refpurpose>Return the number of pixels that is X percent of the display width.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(%x x)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the number of pixels that is X percent of the display width.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm base)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/base.scm"><filename>scheme/base.scm</filename></ulink>
  at line 135 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/base.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="pctx-">
  <refnamediv>
    <refname>%x-</refname>
    <refpurpose>Return the pixel coordinate X percent of the width away from the right edge.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(%x- x)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the pixel coordinate X percent of the width away from the right edge.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm base)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/base.scm"><filename>scheme/base.scm</filename></ulink>
  at line 187 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/base.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="pctx-permit-negative">
  <refnamediv>
    <refname>%x-permit-negative</refname>
    <refpurpose>No documentation supplied.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(%x-permit-negative x)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  No documentation supplied.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm fvwm-compat)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/fvwm-compat.scm"><filename>scheme/fvwm-compat.scm</filename></ulink>
  at line 120 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/fvwm-compat.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="pcty">
  <refnamediv>
    <refname>%y</refname>
    <refpurpose>Return the number of pixels that is Y percent of the display height.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(%y y)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the number of pixels that is Y percent of the display height.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm base)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/base.scm"><filename>scheme/base.scm</filename></ulink>
  at line 139 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/base.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="pcty-">
  <refnamediv>
    <refname>%y-</refname>
    <refpurpose>Return the pixel coordinate Y percent of the height away from the bottom edge.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(%y- y)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the pixel coordinate Y percent of the height away from the bottom edge.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm base)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/base.scm"><filename>scheme/base.scm</filename></ulink>
  at line 191 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/base.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="pcty-permit-negative">
  <refnamediv>
    <refname>%y-permit-negative</refname>
    <refpurpose>No documentation supplied.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(%y-permit-negative y)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  No documentation supplied.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/fvwm-compat.scm"><filename>scheme/fvwm-compat.scm</filename></ulink>
  at line 126 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/fvwm-compat.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="accumulate">
  <refnamediv>
    <refname>accumulate</refname>
    <refpurpose>Repeatedly apply PROC to a current value and a member of L.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(accumulate proc init l)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Repeatedly apply PROC to a current value and a member of L. 
The initial current value is INIT. The list is processed from left to
right. The final result is returned. Compare to <link linkend="reduce"><function>reduce</function></link>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm listops)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/listops.scm"><filename>scheme/listops.scm</filename></ulink>
  at line 53 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/listops.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="activate-ScwmBiff">
  <refnamediv>
    <refname>activate-ScwmBiff</refname>
    <refpurpose>Turn on the ScwmBiff notification service.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(activate-ScwmBiff sb)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Turn on the ScwmBiff notification service.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm ScwmBiff)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/ScwmBiff.scm"><filename>scheme/ScwmBiff.scm</filename></ulink>
  at line 101 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/ScwmBiff.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="add-boolean-hint-option">
  <refnamediv>
    <refname>add-boolean-hint-option</refname>
    <refpurpose>No documentation supplied.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(add-boolean-hint-option key th fh #&amp;optional (cumulative? #f))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  No documentation supplied.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm style-options)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/style-options.scm"><filename>scheme/style-options.scm</filename></ulink>
  at line 46 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/style-options.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="add-boolean-style-option">
  <refnamediv>
    <refname>add-boolean-style-option</refname>
    <refpurpose>No documentation supplied.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(add-boolean-style-option key th fh #&amp;optional (cumulative? #f))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  No documentation supplied.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm style-options)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/style-options.scm"><filename>scheme/style-options.scm</filename></ulink>
  at line 41 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/style-options.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="add-input-hook-x">
  <refnamediv>
    <refname>add-input-hook!</refname>
    <refpurpose>Add an input hook to run PROC on input from PORT.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(add-input-hook! port proc)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Add an input hook to run <parameter>proc</parameter> on input from <parameter>port</parameter>.
Whenever input becomes available on <parameter>port</parameter>, procedure <parameter>proc</parameter> will be called
with no arguments repeatedly until no unprocessed input remains on
<parameter>port</parameter>. <parameter>port</parameter> must be open, it must be an input port, and it must be a
file port (this includes pipes and sockets, but not string ports or
soft ports). A handle suitable for passing to <link linkend="remove-input-hook-x"><function>remove-input-hook!</function></link> is
returned.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/callbacks.c"><filename>scwm/callbacks.c</filename></ulink>
  at line 840 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/callbacks.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="add-motion-handler-x">
  <refnamediv>
    <refname>add-motion-handler!</refname>
    <refpurpose>Call PROC on XMotionEvents.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(add-motion-handler! proc)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Call <parameter>proc</parameter> on XMotionEvents.
This can considerably slow Scwm down so use it only when
necessary.  See <link linkend="remove-motion-handler"><function>remove-motion-handler</function></link> and <link linkend="reset-motion-handlers"><function>reset-motion-handlers</function></link>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/events.c"><filename>scwm/events.c</filename></ulink>
  at line 2034 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/events.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="add-ms-timer-hook-x">
  <refnamediv>
    <refname>add-ms-timer-hook!</refname>
    <refpurpose>No documentation supplied.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(add-ms-timer-hook! ms proc)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  No documentation supplied.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/flux.scm"><filename>scheme/flux.scm</filename></ulink>
  at line 589 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/flux.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="add-property-style-option">
  <refnamediv>
    <refname>add-property-style-option</refname>
    <refpurpose>No documentation supplied.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(add-property-style-option key property #&amp;optional 
					    (cumulative? #f))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  No documentation supplied.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm style-options)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/style-options.scm"><filename>scheme/style-options.scm</filename></ulink>
  at line 52 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/style-options.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="add-timer-hook-x">
  <refnamediv>
    <refname>add-timer-hook!</refname>
    <refpurpose>Add a timer hook to call PROC once sometime after USEC microseconds.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(add-timer-hook! usec proc)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Add a timer hook to call <parameter>proc</parameter> once sometime after <parameter>usec</parameter> microseconds.
When at least <parameter>usec</parameter> microseconds have passed, procedure <parameter>proc</parameter> will be
called with no arguments. A handle suitable for passing to
<link linkend="remove-timer-hook-x"><function>remove-timer-hook!</function></link> is returned.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/callbacks.c"><filename>scwm/callbacks.c</filename></ulink>
  at line 690 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/callbacks.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="add-window-hint-option">
  <refnamediv>
    <refname>add-window-hint-option</refname>
    <refpurpose>No documentation supplied.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(add-window-hint-option key handler #&amp;optional (cumulative? #f))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  No documentation supplied.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm style-options)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/style-options.scm"><filename>scheme/style-options.scm</filename></ulink>
  at line 44 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/style-options.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="add-window-style-option">
  <refnamediv>
    <refname>add-window-style-option</refname>
    <refpurpose>No documentation supplied.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(add-window-style-option key handler #&amp;optional 
					 (type 'normal) (cumulative? #f))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  No documentation supplied.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm style-options)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/style-options.scm"><filename>scheme/style-options.scm</filename></ulink>
  at line 32 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/style-options.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="align-viewport">
  <refnamediv>
    <refname>align-viewport</refname>
    <refpurpose>Set the viewport position to the nearest multiple of the desk size.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(align-viewport)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Set the viewport position to the nearest multiple of the desk size.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm virtual)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/virtual.scm"><filename>scheme/virtual.scm</filename></ulink>
  at line 153 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/virtual.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="and-map">
  <refnamediv>
    <refname>and-map</refname>
    <refpurpose>Apply PROC repeatedly, returning the first false value.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(and-map proc first . rest)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Apply PROC repeatedly, returning the first false value.
PROC is applied to elements of FIRST and the lists comprising REST
much as <link linkend="map"><function>map</function></link> would do it. If proc never returns a false value, return
<literal>#t</literal> instead. If all the lists are empty, return <literal>#t</literal>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm listops)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/listops.scm"><filename>scheme/listops.scm</filename></ulink>
  at line 110 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/listops.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="animated-deiconify">
  <refnamediv>
    <refname>animated-deiconify</refname>
    <refpurpose>Deiconify WIN using a simple animation of a growing rectangle.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(animated-deiconify #&amp;optional (win (get-window)))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Deiconify WIN using a simple animation of a growing rectangle.
The rectangle grows outwards from the icon, if there is one.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm animated-iconify)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/animated-iconify.scm"><filename>scheme/animated-iconify.scm</filename></ulink>
  at line 71 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/animated-iconify.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="animated-deiconify-to-current-viewport">
  <refnamediv>
    <refname>animated-deiconify-to-current-viewport</refname>
    <refpurpose>Deicionify WIN with an animation to the current viewport.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(animated-deiconify-to-current-viewport #&amp;optional (win (get-window)))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Deicionify WIN with an animation to the current viewport.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm animated-iconify)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/animated-iconify.scm"><filename>scheme/animated-iconify.scm</filename></ulink>
  at line 100 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/animated-iconify.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="animated-deiconify-to-last-viewport-position">
  <refnamediv>
    <refname>animated-deiconify-to-last-viewport-position</refname>
    <refpurpose>Deiconify WIN with an animation to the same viewport position as it was iconified from.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(animated-deiconify-to-last-viewport-position #&amp;optional (win (get-window)))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Deiconify WIN with an animation to the same viewport position as it was iconified from.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm animated-iconify)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/animated-iconify.scm"><filename>scheme/animated-iconify.scm</filename></ulink>
  at line 82 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/animated-iconify.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="animated-iconify">
  <refnamediv>
    <refname>animated-iconify</refname>
    <refpurpose>Iconify WIN using a simple animation of a shrinking rectangle.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(animated-iconify #&amp;optional (win (get-window)))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Iconify WIN using a simple animation of a shrinking rectangle.
The rectangle moves towards the icon's location, if there is one.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm animated-iconify)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/animated-iconify.scm"><filename>scheme/animated-iconify.scm</filename></ulink>
  at line 56 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/animated-iconify.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="animated-move-to">
  <refnamediv>
    <refname>animated-move-to</refname>
    <refpurpose>Move WIN to viewport coordinates X, Y with animation.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(animated-move-to x y #&amp;optional (win (get-window))
				  (move-pointer-too? #t))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Move WIN to viewport coordinates X, Y with animation. 
If X or Y is <literal>#f</literal>, then do not change that coordinate during 
the move. At least one of X and Y must be a number. This 
moves the pointer with the window unless MOVE-POINTER-TOO? 
is <literal>#f</literal>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/animation.scm"><filename>scheme/animation.scm</filename></ulink>
  at line 45 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/animation.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="animated-move-window">
  <refnamediv>
    <refname>animated-move-window</refname>
    <refpurpose>Move WIN to virtual coordinates X, Y with animation.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(animated-move-window x y #&amp;optional win move-pointer-too?)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Move <parameter>win</parameter> to virtual coordinates <parameter>x</parameter>, <parameter>y</parameter> with animation.
If <parameter>x</parameter> or <parameter>y</parameter> is <literal>#f</literal>, then do not change that coordinate during the move.
If <parameter>move-pointer-too?</parameter> is specified and true, move the mouse pointer by
the same amount as the window, animating the motion of the pointer
along with the window. <parameter>win</parameter> defaults to the window context in the usual
way if not specified.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Primitive from (app scwm c-animation)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/modules/c-animation/c-animation.c"><filename>modules/c-animation/c-animation.c</filename></ulink>
  at line 429 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/modules/c-animation/c-animation.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="animated-resize-frame">
  <refnamediv>
    <refname>animated-resize-frame</refname>
    <refpurpose>Resize the frame of WIN to size W, H (pixels) with animation.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(animated-resize-frame w h #&amp;optional win x y move-pointer-too?)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Resize the frame of <parameter>win</parameter> to size <parameter>w</parameter>, <parameter>h</parameter> (pixels) with animation.
<parameter>win</parameter> defaults to the window context in the usual way if not
specified.  If <parameter>x</parameter> and <parameter>y</parameter> are given, they are a new virtual position for the northwest
corder of the window. If <parameter>move-pointer-too?</parameter> is specified and true, move the mouse pointer by
the same amount as the window, animating the motion of the pointer
along with the window.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Primitive from (app scwm c-animation)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/modules/c-animation/c-animation.c"><filename>modules/c-animation/c-animation.c</filename></ulink>
  at line 562 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/modules/c-animation/c-animation.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="animated-resize-window">
  <refnamediv>
    <refname>animated-resize-window</refname>
    <refpurpose>Resize the client area of WIN to size W, H (pixels) with animation.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(animated-resize-window w h #&amp;optional win x y move-pointer-too?)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Resize the client area of <parameter>win</parameter> to size <parameter>w</parameter>, <parameter>h</parameter> (pixels) with animation.
<parameter>win</parameter> defaults to the window context in the usual way if not
specified.  If <parameter>x</parameter> and <parameter>y</parameter> are given, they are a new virtual position for the northwest
corder of the window. If <parameter>move-pointer-too?</parameter> is specified and true, move the mouse pointer by
the same amount as the window, animating the motion of the pointer
along with the window.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Primitive from (app scwm c-animation)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/modules/c-animation/c-animation.c"><filename>modules/c-animation/c-animation.c</filename></ulink>
  at line 547 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/modules/c-animation/c-animation.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="animated-toggle-iconify">
  <refnamediv>
    <refname>animated-toggle-iconify</refname>
    <refpurpose>Iconify WIN if not iconified, or de-iconify WIN if it is iconified.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(animated-toggle-iconify #&amp;optional (win (get-window)))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Iconify WIN if not iconified, or de-iconify WIN if it is iconified.
Uses animation, in either case.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/animated-iconify.scm"><filename>scheme/animated-iconify.scm</filename></ulink>
  at line 114 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/animated-iconify.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="animated-window-shade">
  <refnamediv>
    <refname>animated-window-shade</refname>
    <refpurpose>Cause WIN to become "window-shaded".</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(animated-window-shade  #&amp;optional win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Cause <parameter>win</parameter> to become "window-shaded".
That is, to roll up into just a titlebar.  The window will be animated
as it rolls up, producing a pleasing visual effect. <parameter>win</parameter> defaults to
the window context in the usual way if not specified.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Primitive from (app scwm c-animation)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/modules/c-animation/c-animation.c"><filename>modules/c-animation/c-animation.c</filename></ulink>
  at line 332 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/modules/c-animation/c-animation.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="animated-window-unshade">
  <refnamediv>
    <refname>animated-window-unshade</refname>
    <refpurpose>Reverse the effect of <link linkend="window-shade"><function>window-shade</function></link> on WIN.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(animated-window-unshade  #&amp;optional win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Reverse the effect of <link linkend="window-shade"><function>window-shade</function></link> on <parameter>win</parameter>.
The window will be animated as it rolls down, producing a pleasing
visual effect. <parameter>win</parameter> defaults to the window context in the usual way if
not specified. See also <link linkend="window-unshade"><function>window-unshade</function></link>, <link linkend="animated-window-shade"><function>animated-window-shade</function></link>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Primitive from (app scwm c-animation)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/modules/c-animation/c-animation.c"><filename>modules/c-animation/c-animation.c</filename></ulink>
  at line 391 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/modules/c-animation/c-animation.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="any-id-to-window">
  <refnamediv>
    <refname>any-id->window</refname>
    <refpurpose>Return the window object that contains the window with id WINDOW-ID.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(any-id->window window-id)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the window object that contains the window with id <parameter>window-id</parameter>.
<parameter>window-id</parameter> can be the X id of any child window in the application. If there is no
such window object, return <literal>#f</literal>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/window.c"><filename>scwm/window.c</filename></ulink>
  at line 2805 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="append-fvwm2-module-config">
  <refnamediv>
    <refname>append-fvwm2-module-config</refname>
    <refpurpose>No documentation supplied.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(append-fvwm2-module-config module-type . args)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  No documentation supplied.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm fvwm-module)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/fvwm-module.scm"><filename>scheme/fvwm-module.scm</filename></ulink>
  at line 398 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/fvwm-module.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="append-map">
  <refnamediv>
    <refname>append-map</refname>
    <refpurpose>Do the same thing as map, but collect results with <link linkend="append"><function>append</function></link>,  not <link linkend="cons"><function>cons</function></link>.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(append-map proc first . rest)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Do the same thing as map, but collect results with <link linkend="append"><function>append</function></link>,  not <link linkend="cons"><function>cons</function></link>.
In particular, PROC is applied in succession to each member of FIRST and
the corresponding members of REST if any, and is expected to return a
list. These lists are concatenated together with <link linkend="append"><function>append</function></link>. In effect,
this is a version of map that allows the mapping function to return
any number of elements to be inserted into the result list, including
possibly none.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm listops)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/listops.scm"><filename>scheme/listops.scm</filename></ulink>
  at line 73 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/listops.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="apply-style">
  <refnamediv>
    <refname>apply-style</refname>
    <refpurpose>No documentation supplied.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(apply-style style win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  No documentation supplied.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm style)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/style.scm"><filename>scheme/style.scm</filename></ulink>
  at line 122 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/style.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="apropos-internal-with-modules">
  <refnamediv>
    <refname>apropos-internal-with-modules</refname>
    <refpurpose>Return a list of accessible variable names and the modules they are defined in.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(apropos-internal-with-modules rgx)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return a list of accessible variable names and the modules they are defined in.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm reflection)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/reflection.scm"><filename>scheme/reflection.scm</filename></ulink>
  at line 129 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/reflection.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="ask-string">
  <refnamediv>
    <refname>ask-string</refname>
    <refpurpose>Ask for a string with PROMPT.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(ask-string prompt)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Ask for a string with PROMPT.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm prefs-menu)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/prefs-menu.scm"><filename>scheme/prefs-menu.scm</filename></ulink>
  at line 136 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/prefs-menu.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="at-point-placement">
  <refnamediv>
    <refname>at-point-placement</refname>
    <refpurpose>Return a procedure that places a window at the pointer position.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(at-point-placement #&amp;key (offset '(0 0))
			       (proportional-offset '(-0.5 -0.5))
			       (switch #t) (return #f))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return a procedure that places a window at the pointer position.
If the keyword argument OFFSET is specified, it is interpreted as a
list of x and y offsets to add to the pointer position. If the keyword
argument PROPORTIONAL-OFFSET is specified, it is interpreted as a list
of numbers to multiply by the window's width and height, and is
treated as an extra offset.The defaults are (0 0) for OFFSET and (-0.5
-0.5) for PROPORTIONAL-OFFSET, with the result that by default the
window is centered at the mouse pointer position by the returned
procedure.

If SWITCH is true, the returned procedure will switch to the virtual
desk and viewport of its window argument before placing it. This is
the default. If RETURN is false, the returned procedure will switch
back to the previous desk and viewport after placing the window. The
default is false.

See also the related <link linkend="place-at-point"><function>place-at-point</function></link> procedure which directly places
a window at the pointer position.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm placement)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/placement.scm"><filename>scheme/placement.scm</filename></ulink>
  at line 116 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/placement.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="background-system">
  <refnamediv>
    <refname>background-system</refname>
    <refpurpose>Run CMD using /bin/sh -c CMD and return the exit status.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(background-system command)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Run CMD using /bin/sh -c CMD and return the exit status.
The CMD is run synchronously, and Bourne-shell meta characters
are interpreted by /bin/sh.  E.g., to start CMD in the background,
use a trailing "&amp;" character.  See also guile's <link linkend="system"><function>system</function></link>, but note
that it may permit signals on the controlling tty to be seen
by children (observed on Linux, Free/NetBSD, but not on Solaris or HP/UX.
This may be a bug (not meeting POSIX.2 specifications).
Returns the child-pid, or <literal>#f</literal> if the fork fails.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm base)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/base.scm"><filename>scheme/base.scm</filename></ulink>
  at line 691 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/base.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="beep">
  <refnamediv>
    <refname>beep</refname>
    <refpurpose>Ring the standard X bell.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(beep)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Ring the standard X bell.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/miscprocs.c"><filename>scwm/miscprocs.c</filename></ulink>
  at line 272 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/miscprocs.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="binary">
  <refnamediv>
    <refname>binary</refname>
    <refpurpose>Return the integer that corresponds to string NUMBER as a binary value.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(binary number)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the integer that corresponds to string NUMBER as a binary value.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/number-convert.scm"><filename>scheme/number-convert.scm</filename></ulink>
  at line 62 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/number-convert.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="binary-read">
  <refnamediv>
    <refname>binary-read</refname>
    <refpurpose>Reads LENGTH bytes of binary data from PORT and return it as a string.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(binary-read length #&amp;optional (port (current-input-port)))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Reads LENGTH bytes of binary data from PORT and return it as a string.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm bincomm)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/bincomm.scm"><filename>scheme/bincomm.scm</filename></ulink>
  at line 167 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/bincomm.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="binary-read-long">
  <refnamediv>
    <refname>binary-read-long</refname>
    <refpurpose>Reads a binary representation of a C long and return as a scheme number.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(binary-read-long #&amp;optional (port (current-input-port)))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Reads a binary representation of a C long and return as a scheme number.
The value is read from PORT, or the current-input-port.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/bincomm.scm"><filename>scheme/bincomm.scm</filename></ulink>
  at line 177 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/bincomm.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="binary-write">
  <refnamediv>
    <refname>binary-write</refname>
    <refpurpose>Writes STR as binary data to PORT.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(binary-write str #&amp;optional (port (current-output-port)))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Writes STR as binary data to PORT.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm bincomm)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/bincomm.scm"><filename>scheme/bincomm.scm</filename></ulink>
  at line 162 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/bincomm.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="bind-four-modifier-key-events">
  <refnamediv>
    <refname>bind-four-modifier-key-events</refname>
    <refpurpose>Bind PROC-PRESS and PROC-RELEASE to be invoked on a multi-modifier key event.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(bind-four-modifier-key-events 
		modkey1 modkey2 modkey3 modkey4
		proc-press proc-release)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Bind PROC-PRESS and PROC-RELEASE to be invoked on a multi-modifier key event.
MODKEY1, MODKEY2, MODKEY3, MODKEY4 are the four modifiers that, when pressed at the same time,
will invoke PROC-PRESS.  When either is released, PROC-RELEASE is invoked.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm modifier-key-bindings)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/modifier-key-bindings.scm"><filename>scheme/modifier-key-bindings.scm</filename></ulink>
  at line 107 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/modifier-key-bindings.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="bind-key">
  <refnamediv>
    <refname>bind-key</refname>
    <refpurpose>Bind the given KEY within the CONTEXTS to invoke PROC.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(bind-key contexts key proc #&amp;optional release-proc)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Bind the given <parameter>key</parameter> within the <parameter>contexts</parameter> to invoke <parameter>proc</parameter>.
Return value is <literal>#t</literal> if the binding was made successfully, <literal>#f</literal> otherwise
(e.g., if unbound modifiers or an unknown keysym is used, the binding will fail).
<parameter>contexts</parameter> is a list of event-contexts (e.g., '(left-button-1 frame-sides)) <parameter>key</parameter> is
a string giving the key-specifier (e.g., M-Delete for Meta+Delete)
<parameter>proc</parameter> is a procedure that will be invoked (with no arguments) when the
specified key is pressed in the specified context. The optional
argument <parameter>release-proc</parameter>, if specified, is a procedure that will be
invoked when the key is released.  The contexts include:
'window
'title
'icon
'root
'frame-corners
'frame-sides
'client-window
'root-window
'left-button-N  (N=1-5)
'right-button-N (N=1-5)
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/binding.c"><filename>scwm/binding.c</filename></ulink>
  at line 1013 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/binding.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="bind-keycode">
  <refnamediv>
    <refname>bind-keycode</refname>
    <refpurpose>Bind the given KEYCODE within the CONTEXTS to invoke PROC.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(bind-keycode contexts keycode modifier-mask proc #&amp;optional release-proc)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Bind the given <parameter>keycode</parameter> within the <parameter>contexts</parameter> to invoke <parameter>proc</parameter>.
<parameter>contexts</parameter> is a list of event-contexts (e.g., '(button1 sidebar))
<parameter>keycode</parameter> is an X/11 key code, <parameter>modifier-mask</parameter> is the bitmask of modifiers,
<parameter>proc</parameter> is a procedure that will be invoked (with no arguments) when the
specified key is pressed in the specified context.
<parameter>release-proc</parameter> is a procedure that will be invoked (with no arguments) when the
specified key is released in the specified context, or <literal>#f</literal> or omitted if
nothing should be done on key release.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/binding.c"><filename>scwm/binding.c</filename></ulink>
  at line 1087 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/binding.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="bind-mouse">
  <refnamediv>
    <refname>bind-mouse</refname>
    <refpurpose>Bind the given mouse BUTTON within the CONTEXTS to invoke PROC.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(bind-mouse contexts button proc #&amp;optional immediate-proc)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Bind the given mouse <parameter>button</parameter> within the <parameter>contexts</parameter> to invoke <parameter>proc</parameter>.
<parameter>contexts</parameter> is a list of event-contexts (e.g., '(button1 sidebar))
<parameter>button</parameter> is a string or integer giving the mouse button number
<parameter>proc</parameter> is a procedure that will be invoked (with no arguments) when the
specified button is pressed in the specified context. See <link linkend="bind-key"><function>bind-key</function></link>
for a list of the contexts. If <parameter>immediate-proc</parameter> is given, it will be
executed immediately on a button-click.  If <parameter>immediate-proc</parameter> returns
<literal>#f</literal>, then <parameter>proc</parameter> will still get executed after determining the mouse click
type.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/binding.c"><filename>scwm/binding.c</filename></ulink>
  at line 1140 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/binding.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="bind-three-modifier-key-events">
  <refnamediv>
    <refname>bind-three-modifier-key-events</refname>
    <refpurpose>Bind PROC-PRESS and PROC-RELEASE to be invoked on a multi-modifier key event.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(bind-three-modifier-key-events 
		modkey1 modkey2 modkey3
		proc-press proc-release)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Bind PROC-PRESS and PROC-RELEASE to be invoked on a multi-modifier key event.
MODKEY1, MODKEY2, MODKEY3 are the three modifiers that, when pressed at the same time,
will invoke PROC-PRESS.  When either is released, PROC-RELEASE is invoked.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm modifier-key-bindings)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/modifier-key-bindings.scm"><filename>scheme/modifier-key-bindings.scm</filename></ulink>
  at line 65 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/modifier-key-bindings.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="bind-two-modifier-key-events">
  <refnamediv>
    <refname>bind-two-modifier-key-events</refname>
    <refpurpose>Bind PROC-PRESS and PROC-RELEASE to be invoked on a multi-modifier key event.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(bind-two-modifier-key-events
		modkey1 modkey2 
		proc-press proc-release)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Bind PROC-PRESS and PROC-RELEASE to be invoked on a multi-modifier key event.
MODKEY1 and MODKEY2 are the two modifiers that, when pressed at the same time,
will invoke PROC-PRESS.  When either is released, PROC-RELEASE is invoked.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm modifier-key-bindings)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/modifier-key-bindings.scm"><filename>scheme/modifier-key-bindings.scm</filename></ulink>
  at line 26 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/modifier-key-bindings.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="bool-to-string">
  <refnamediv>
    <refname>bool->string</refname>
    <refpurpose>Return the string "false" if ARG is <literal>#f</literal>, "true" otherwise.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(bool->string arg)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the string "false" if ARG is <literal>#f</literal>, "true" otherwise.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm stringops)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/stringops.scm"><filename>scheme/stringops.scm</filename></ulink>
  at line 24 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/stringops.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="border-normal-p">
  <refnamediv>
    <refname>border-normal?</refname>
    <refpurpose>Return <literal>#t</literal> if WIN has a normal border, <literal>#f</literal> if it has a plain border.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(border-normal?  #&amp;optional win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return <literal>#t</literal> if <parameter>win</parameter> has a normal border, <literal>#f</literal> if it has a plain border.
<parameter>win</parameter> defaults to the window context in the
usual way if not specified.  See <link linkend="normal-border"><function>normal-border</function></link> and
<link linkend="plain-border"><function>plain-border</function></link>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/window.c"><filename>scwm/window.c</filename></ulink>
  at line 3241 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="border-style">
  <refnamediv>
    <refname>border-style</refname>
    <refpurpose>Set the border style in the current decor.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(border-style #&amp;key (active '())  
			      (inactive '()) #&amp;allow-other-keys #&rest rest)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Set the border style in the current decor.
This function takes the keyword arguments #:hidden-handles, 
#:no-inset, and #:pixmap, with effects as described under the
`Face Flags' and `Face Specification Flags' concepts (except
that #:pixmap is always tiled).  These keyword arguments can
either be included in the main argument list, or lists of these
arguments can be used as the ACTIVE or INACTIVE arguments.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm face)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/face.scm"><filename>scheme/face.scm</filename></ulink>
  at line 69 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/face.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="button-item">
  <refnamediv>
    <refname>button-item</refname>
    <refpurpose>Create a button item for a ScwmButtons window.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(button-item pixmap-file #&amp;key (action noop) (tooltip #f))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Create a button item for a ScwmButtons window.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/ScwmButtons.scm"><filename>scheme/ScwmButtons.scm</filename></ulink>
  at line 189 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/ScwmButtons.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="button-style">
  <refnamediv>
    <refname>button-style</refname>
    <refpurpose>Set the button style for button number BUTTON in the current decor.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(button-style button #&amp;key mwm
			      (active-up '()) 
			      (active-down '()) 
			      (inactive '()) #&amp;allow-other-keys #&rest rest)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Set the button style for button number BUTTON in the current decor.
MWM sets the button's mwm flag (see <link linkend="set-button-mwm-flag-x"><function>set-button-mwm-flag!</function></link>.
This function also takes the keyword arguments #:justify, #:relief,
#:vertical-justify, #:use-style-of, #:solid, #:gradient, #:h-gradient,
#:v-gradient, #:relief-pattern, #:vector, #:pixmap, and #:tiled-pixmap,
with effects as described under the `Face Flags' and `Face
Specification Flags' concepts (with the additions that #:tiled-pixmap
is an always-tiled pixmap, #:vector is a synonym for #:relief-pattern,
and #:h-gradient and #:v-gradient are horizontal and vertical
gradients).  These extra keyword arguments can either be included
in the main argument list, or lists of these arguments can be used
as the ACTIVE-UP, ACTIVE-DOWN, or INACTIVE arguments.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm face)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/face.scm"><filename>scheme/face.scm</filename></ulink>
  at line 104 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/face.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="cached-program-exists-p">
  <refnamediv>
    <refname>cached-program-exists?</refname>
    <refpurpose>Return <literal>#t</literal> if PROGRAM-NAME is in the cache of programs that exist.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(cached-program-exists? program-name)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return <literal>#t</literal> if PROGRAM-NAME is in the cache of programs that exist.
Returns <literal>#f</literal> otherwise.  If <link linkend="debug-program-cache"><function>debug-program-cache</function></link> is true, a message will 
print to stdout on hits and misses.  You must call 
<link linkend="initialize-programs-that-exist"><function>initialize-programs-that-exist</function></link> before calling this function; otherwise,
it reverts to the (inefficient) implementation of <link linkend="program-exists-p"><function>program-exists?</function></link>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/path-cache.scm"><filename>scheme/path-cache.scm</filename></ulink>
  at line 42 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/path-cache.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="call-with-decor">
  <refnamediv>
    <refname>call-with-decor</refname>
    <refpurpose>Eval THUNK using DECOR as the current decor.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(call-with-decor decor thunk)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Eval THUNK using DECOR as the current decor.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm decor)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/decor.scm"><filename>scheme/decor.scm</filename></ulink>
  at line 27 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/decor.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="capturing-p">
  <refnamediv>
    <refname>capturing?</refname>
    <refpurpose>Returns <literal>#t</literal> when the windows are being captured.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(capturing?)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Returns <literal>#t</literal> when the windows are being captured.
This happens at two times: during initial startup, or during a
recapture operation. In either case, placement procedures should
probably avoid interaction and perhaps avoid moving the window being
placed at all.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/miscprocs.c"><filename>scwm/miscprocs.c</filename></ulink>
  at line 136 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/miscprocs.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="cascade">
  <refnamediv>
    <refname>cascade</refname>
    <refpurpose>Cascade the windows on the specified desk.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(cascade #&amp;key (only ()) (except ()) 
			 (by-stacking #f) (by-focus #f)
			 (reverse #f)
			 (all-viewports #f) (desk (current-desk))
			 (ignore-default-exceptions #f)
			 (start-pos '(0 0)) (max-size (display-size))
			 (resize #f) (raise #t) 
			 (x-increment (meta-apply + window-title-height
						  window-frame-border-width))
			 (y-increment (meta-apply + window-title-height
						  window-frame-border-width)))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Cascade the windows on the specified desk.
The DESK option, defaulting to the current desk, specifies which desk;
ALL-VIEWPORTS, when true indicates that the windows in all viewports
of this desk should be cascaded, otherwise only the current viewport
is cascaded. 

The options ONLY, EXCEPT, BY-STACKING, BY-FOCUS and REVERSE indicate
the windows to use and the order to use them in, as with
<link linkend="list-windows"><function>list-windows</function></link>. However, unless IGNORE-DEFAULT-EXCEPTIONS is <literal>#t</literal>,
transient, maximized, sticky and iconified windows will be always be
excluded.

START-POS, MAX-SIZE, RESIZE, RAISE, X-INCREMENT and Y-INCREMENT
control the cascading options as for <link linkend="cascade-windows"><function>cascade-windows</function></link>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/cascade.scm"><filename>scheme/cascade.scm</filename></ulink>
  at line 98 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/cascade.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="cascade-windows">
  <refnamediv>
    <refname>cascade-windows</refname>
    <refpurpose>Cascade WINDOWS according to several parameters.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(cascade-windows 
		 windows #&amp;key (start-pos '(0 0)) 
		 (max-size (display-size)) (resize 'shrink-only)
		 (raise 'restack-only)
		 (x-increment (meta-apply + window-title-height
					  window-frame-border-width))
		 (y-increment (meta-apply + window-title-height
					  window-frame-border-width)))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Cascade WINDOWS according to several parameters.  
Cascading places the windows in a diagonal order starting at
START-POS, (0 0) by default. Each window's size is limited to
MAX-SIZE, by default the display size.

RESIZE may be <literal>#f</literal>, 'shrink-only or 'always, indicating that the windows
should never be resized, that they should be resized to the max-size
only if they are bigger, or that they should always be resized to the
max size. The default is 'shrink-only.

RAISE may be <literal>#f</literal>, <literal>#t</literal>, or 'restack-only, indicating that the windows
should not be moved in the stacking order; that they should be raised
on top of other windows and placed in the cascade order with the upper
left window lowest in the stacking order; or that they should be
restacked as for <literal>#t</literal> but not raised above other windows,
respectively. The default is 'restack-only.

X-INCREMENT may be an integer or a procedure that takes a window and
returns an integer, and which will be applied to a window to get the
horizontal offset for the next in the cascade order. The default is
the sum of the window's border width and title height.

Y-INCREMENT may be an integer or a procedure that takes a window and
returns an integer, and which will be applied to a window to get the
vertical offset for the next in the cascade order. The default is the
sum of the window's border width and title height.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm cascade)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/cascade.scm"><filename>scheme/cascade.scm</filename></ulink>
  at line 39 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/cascade.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="center-placement">
  <refnamediv>
    <refname>center-placement</refname>
    <refpurpose>Place window in the center of the current viewport.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(center-placement win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Place window in the center of the current viewport.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm placement)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/placement.scm"><filename>scheme/placement.scm</filename></ulink>
  at line 74 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/placement.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="change-ui-constraints-buttons">
  <refnamediv>
    <refname>change-ui-constraints-buttons</refname>
    <refpurpose>No documentation supplied.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(change-ui-constraints-buttons #&amp;key (vertical toggle-vertical) (pixmap toggle-pixmap))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  No documentation supplied.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm ui-constraints-buttons)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/ui-constraints-buttons.scm"><filename>scheme/ui-constraints-buttons.scm</filename></ulink>
  at line 124 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/ui-constraints-buttons.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="char-value">
  <refnamediv>
    <refname>char-value</refname>
    <refpurpose>Return the integer that corresponds to the Ascii code for CH.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(char-value ch)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the integer that corresponds to the Ascii code for CH.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm number-convert)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/number-convert.scm"><filename>scheme/number-convert.scm</filename></ulink>
  at line 28 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/number-convert.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="chop-newline">
  <refnamediv>
    <refname>chop-newline</refname>
    <refpurpose>Return STR up to but not including the first newline character.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(chop-newline str)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return STR up to but not including the first newline character.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm stringops)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/stringops.scm"><filename>scheme/stringops.scm</filename></ulink>
  at line 61 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/stringops.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="circulate-hit">
  <refnamediv>
    <refname>circulate-hit</refname>
    <refpurpose>Include WIN among the windows in the circulate list.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(circulate-hit #&amp;optional (win (get-window)))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Include WIN among the windows in the circulate list.
This resets the 'circulate-skip property of WIN.  See also <link linkend="circulate-skip"><function>circulate-skip</function></link>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm winlist)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/winlist.scm"><filename>scheme/winlist.scm</filename></ulink>
  at line 264 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/winlist.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="circulate-hit-icon">
  <refnamediv>
    <refname>circulate-hit-icon</refname>
    <refpurpose>Include WIN's icon among the windows in the circulate list.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(circulate-hit-icon #&amp;optional (win (get-window)))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Include WIN's icon among the windows in the circulate list.
This resets the 'circulate-skip-icon property of WIN.  
See also <link linkend="circulate-skip-icon"><function>circulate-skip-icon</function></link>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm winlist)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/winlist.scm"><filename>scheme/winlist.scm</filename></ulink>
  at line 279 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/winlist.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="circulate-skip">
  <refnamediv>
    <refname>circulate-skip</refname>
    <refpurpose>Do not include WIN among the windows in the circulate list.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(circulate-skip #&amp;optional (win (get-window)))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Do not include WIN among the windows in the circulate list.
This sets the 'circulate-skip property of WIN.  See also <link linkend="circulate-hit"><function>circulate-hit</function></link>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm winlist)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/winlist.scm"><filename>scheme/winlist.scm</filename></ulink>
  at line 269 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/winlist.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="circulate-skip-icon">
  <refnamediv>
    <refname>circulate-skip-icon</refname>
    <refpurpose>Do not include WIN's icon among the windows in the circulate list.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(circulate-skip-icon #&amp;optional (win (get-window)))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Do not include WIN's icon among the windows in the circulate list.
This sets the 'circulate-skip-icon property of WIN.  
See also <link linkend="circulate-hit-icon"><function>circulate-hit-icon</function></link>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm winlist)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/winlist.scm"><filename>scheme/winlist.scm</filename></ulink>
  at line 285 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/winlist.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="circulate-skip-icon-p">
  <refnamediv>
    <refname>circulate-skip-icon?</refname>
    <refpurpose>Return <literal>#t</literal> if WIN's icon is not among the windows in the circulate list.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(circulate-skip-icon? #&amp;optional (win (get-window)))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return <literal>#t</literal> if WIN's icon is not among the windows in the circulate list.
Otherwise return <literal>#f</literal>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm winlist)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/winlist.scm"><filename>scheme/winlist.scm</filename></ulink>
  at line 291 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/winlist.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="circulate-skip-p">
  <refnamediv>
    <refname>circulate-skip?</refname>
    <refpurpose>Return <literal>#t</literal> if WIN is not among the windows in the circulate list.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(circulate-skip? #&amp;optional (win (get-window)))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return <literal>#t</literal> if WIN is not among the windows in the circulate list.
Otherwise return <literal>#f</literal>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm winlist)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/winlist.scm"><filename>scheme/winlist.scm</filename></ulink>
  at line 274 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/winlist.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="cl-set-solver-var">
  <refnamediv>
    <refname>cl-set-solver-var</refname>
    <refpurpose>Set solver S's variable CLV to value VALUE.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(cl-set-solver-var s clv value)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Set solver S's variable CLV to value VALUE.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/simple-constraints.scm"><filename>scheme/simple-constraints.scm</filename></ulink>
  at line 149 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/simple-constraints.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="class-match--p">
  <refnamediv>
    <refname>class-match??</refname>
    <refpurpose>Return a predicate that tests a window's resource class.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(class-match?? STRING TYPE CASE-SENSITIVE?)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return a predicate that tests a window's resource class.  
When applied to a window, this predicate will return true if the
resource class matches STRING in the manner specified by the optional
argument TYPE, which may be 'exact, 'regexp, or 'wildcard. The
optional CASE-SENSITIVE argument determines whether the matching is
case-sensitive or not.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm wininfo)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/wininfo.scm"><filename>scheme/wininfo.scm</filename></ulink>
  at line 295 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/wininfo.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="clear-color-cache-entry">
  <refnamediv>
    <refname>clear-color-cache-entry</refname>
    <refpurpose>Colors are cached by name.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(clear-color-cache-entry name)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Colors are cached by name. It is remotely possible that the
meaning of a particular string as a color will change in your X
server, if you try hard enough. For this unlikely eventuality,
<link linkend="clear-color-cache-entry"><function>clear-color-cache-entry</function></link> is provided - it removes the color
associated with <parameter>name</parameter> from the color cache.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/color.c"><filename>scwm/color.c</filename></ulink>
  at line 272 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/color.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="clear-font-cache-entry">
  <refnamediv>
    <refname>clear-font-cache-entry</refname>
    <refpurpose>Fonts are cached by name.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(clear-font-cache-entry name)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Fonts are cached by name. It is remotely possible that the
meaning of a particular string as a fonts will change in your X
server, if you try hard enough (perhaps if you add or remove font
servers). For this unlikely eventuality, <link linkend="clear-font-cache-entry"><function>clear-font-cache-entry</function></link> is
provided - it removes the font associated with <parameter>name</parameter> from the font
cache.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/font.c"><filename>scwm/font.c</filename></ulink>
  at line 306 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/font.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="clear-fvwm2-module-config">
  <refnamediv>
    <refname>clear-fvwm2-module-config</refname>
    <refpurpose>No documentation supplied.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(clear-fvwm2-module-config module-type)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  No documentation supplied.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm fvwm-module)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/fvwm-module.scm"><filename>scheme/fvwm-module.scm</filename></ulink>
  at line 402 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/fvwm-module.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="clear-image-cache-entry">
  <refnamediv>
    <refname>clear-image-cache-entry</refname>
    <refpurpose>Images are cached by both name and full pathname.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(clear-image-cache-entry name)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Images are cached by both name and full pathname. It is
remotely possible that the file that should be used for a particular
name will change, for example if you alter the image file or change
your image path. For this unlikely eventuality,
<link linkend="clear-image-cache-entry"><function>clear-image-cache-entry</function></link> is provided - it removes the image
associated with <parameter>name</parameter> from the image cache.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/image.c"><filename>scwm/image.c</filename></ulink>
  at line 636 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/image.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="clear-window-style">
  <refnamediv>
    <refname>clear-window-style</refname>
    <refpurpose>No documentation supplied.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(clear-window-style)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  No documentation supplied.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm style)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/style.scm"><filename>scheme/style.scm</filename></ulink>
  at line 56 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/style.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="clever-place-window">
  <refnamediv>
    <refname>clever-place-window</refname>
    <refpurpose>Places WIN using fvwm2's "ReallySmart" algorithm.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(clever-place-window win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Places <parameter>win</parameter> using fvwm2's "ReallySmart" algorithm.
The placement is just as if being placed by fvwm2's SmartPlacement,
as if SmartPlacementIsReallySmart were in effect. That is, it
tries to place the window so as to minimize its area of
overlap with other windows. Several parameters give different
weight to various kinds of windows, but they are not tunable
at runtime currently. If it fails to place the window, it
returns <literal>#f</literal>; otherwise it returns <literal>#t</literal>.
This is called as part of <link linkend="default-placement-proc"><function>default-placement-proc</function></link>.  It could also be
used in user-defined placement procedures (see
<link linkend="set-window-placement-proc-x"><function>set-window-placement-proc!</function></link>).
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/placement.c"><filename>scwm/placement.c</filename></ulink>
  at line 489 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/placement.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="click-delay">
  <refnamediv>
    <refname>click-delay</refname>
    <refpurpose>Returns the delay used in identifying mouse clicks and drags, in milliseconds.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(click-delay)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Returns the delay used in identifying mouse clicks and drags, in milliseconds.
See also <link linkend="set-click-delay-x"><function>set-click-delay!</function></link>
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/miscprocs.c"><filename>scwm/miscprocs.c</filename></ulink>
  at line 178 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/miscprocs.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="click-to-focus-passes-click-p">
  <refnamediv>
    <refname>click-to-focus-passes-click?</refname>
    <refpurpose>Returns a boolean valude indicating whether a click-to-focus window receives the click.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(click-to-focus-passes-click?)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Returns a boolean valude indicating whether a click-to-focus window receives the click.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/miscprocs.c"><filename>scwm/miscprocs.c</filename></ulink>
  at line 327 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/miscprocs.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="click-to-focus-raises-p">
  <refnamediv>
    <refname>click-to-focus-raises?</refname>
    <refpurpose>Returns a boolean valude indicating whether a click-to-focus window gets raised on focus.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(click-to-focus-raises?)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Returns a boolean valude indicating whether a click-to-focus window gets raised on focus.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/miscprocs.c"><filename>scwm/miscprocs.c</filename></ulink>
  at line 354 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/miscprocs.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="client-hostname-match--p">
  <refnamediv>
    <refname>client-hostname-match??</refname>
    <refpurpose>Return a predicate that tests a window's client hostname.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(client-hostname-match?? STRING TYPE CASE-SENSITIVE?)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return a predicate that tests a window's client hostname.  
When applied to a window, this predicate will return true if the
client hostname matches STRING in the manner specified by the optional
argument TYPE, which may be 'exact, 'regexp, or 'wildcard. The
optional CASE-SENSITIVE argument determines whether the matching is
case-sensitive or not.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm wininfo)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/wininfo.scm"><filename>scheme/wininfo.scm</filename></ulink>
  at line 322 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/wininfo.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="clone-resized-image">
  <refnamediv>
    <refname>clone-resized-image</refname>
    <refpurpose>Makes a new image from IMAGE of the given WIDTH and HEIGHT.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(clone-resized-image image width height #&amp;optional bgcolor)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Makes a new image from <parameter>image</parameter> of the given <parameter>width</parameter> and <parameter>height</parameter>.
It does not scale <parameter>image</parameter>.  If the resized image is smaller than the
original, it is cropped; if larger, the extra space in the new image
is filled with <parameter>bgcolor</parameter>. See also <link linkend="clone-scaled-image"><function>clone-scaled-image</function></link>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Primitive from (app scwm background)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/modules/background/background.c"><filename>modules/background/background.c</filename></ulink>
  at line 75 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/modules/background/background.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="clone-scaled-image">
  <refnamediv>
    <refname>clone-scaled-image</refname>
    <refpurpose>Returns a copy of IMAGE scaled to have dimensions WIDTH by HEIGHT.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(clone-scaled-image image width height)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Returns a copy of <parameter>image</parameter> scaled to have dimensions <parameter>width</parameter> by <parameter>height</parameter>.
See also <link linkend="clone-resized-image"><function>clone-resized-image</function></link> from the background module.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/image.c"><filename>scwm/image.c</filename></ulink>
  at line 686 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/image.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="close-all-xlogo-windows">
  <refnamediv>
    <refname>close-all-xlogo-windows</refname>
    <refpurpose>Close each window with class == XLogo.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(close-all-xlogo-windows)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Close each window with class == XLogo.
Greg uses XLogo windows as a sample window, so this
is useful for clearing the xlogos away when there get to
be more than desired.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/flux.scm"><filename>scheme/flux.scm</filename></ulink>
  at line 319 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/flux.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="close-ScwmBiff">
  <refnamediv>
    <refname>close-ScwmBiff</refname>
    <refpurpose>Close the ScwmBiff notification window.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(close-ScwmBiff sb)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Close the ScwmBiff notification window.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm ScwmBiff)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/ScwmBiff.scm"><filename>scheme/ScwmBiff.scm</filename></ulink>
  at line 97 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/ScwmBiff.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="close-ScwmButtons">
  <refnamediv>
    <refname>close-ScwmButtons</refname>
    <refpurpose>Close the ScwmButtons window of SB.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(close-ScwmButtons sb)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Close the ScwmButtons window of SB.
SB should be a handle returned from <link linkend="run-ScwmButtons"><function>run-ScwmButtons</function></link>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm ScwmButtons)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/ScwmButtons.scm"><filename>scheme/ScwmButtons.scm</filename></ulink>
  at line 184 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/ScwmButtons.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="close-ScwmClock">
  <refnamediv>
    <refname>close-ScwmClock</refname>
    <refpurpose>Close the ScwmClock with handle SC.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(close-ScwmClock sc)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Close the ScwmClock with handle SC.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm ScwmClock)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/ScwmClock.scm"><filename>scheme/ScwmClock.scm</filename></ulink>
  at line 70 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/ScwmClock.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="close-ScwmDeskButtons">
  <refnamediv>
    <refname>close-ScwmDeskButtons</refname>
    <refpurpose>No documentation supplied.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(close-ScwmDeskButtons sdb)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  No documentation supplied.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/ScwmDeskButtons.scm"><filename>scheme/ScwmDeskButtons.scm</filename></ulink>
  at line 65 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/ScwmDeskButtons.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="close-ui-constraints-buttons">
  <refnamediv>
    <refname>close-ui-constraints-buttons</refname>
    <refpurpose>No documentation supplied.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(close-ui-constraints-buttons)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  No documentation supplied.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/ui-constraints-buttons.scm"><filename>scheme/ui-constraints-buttons.scm</filename></ulink>
  at line 137 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/ui-constraints-buttons.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="close-window">
  <refnamediv>
    <refname>close-window</refname>
    <refpurpose>Close WIN either by deleting it or destroying it.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(close-window #&amp;optional (win (get-window #t #t #t)))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Close WIN either by deleting it or destroying it.
WIN is only destroyed if it is not deleteable.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm winops)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/winops.scm"><filename>scheme/winops.scm</filename></ulink>
  at line 45 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/winops.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="color-to-string">
  <refnamediv>
    <refname>color->string</refname>
    <refpurpose>Convert scwm color object COLOR into an X11 name of that color.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(color->string color)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Convert scwm color object COLOR into an X11 name of that color.
The resulting string can, e.g., be used in command lines for executing
other applications.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm stringops)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/stringops.scm"><filename>scheme/stringops.scm</filename></ulink>
  at line 28 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/stringops.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="color-properties">
  <refnamediv>
    <refname>color-properties</refname>
    <refpurpose>Return an association list giving some properties of COLOR.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(color-properties color)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return an association list giving some properties of <parameter>color</parameter>.
Currently defined properties are 'name, the string name of the
color, and 'pixel, the X pixel value it uses.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/color.c"><filename>scwm/color.c</filename></ulink>
  at line 120 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/color.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="color-property">
  <refnamediv>
    <refname>color-property</refname>
    <refpurpose>Return the KEY property of COLOR.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(color-property color key)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the KEY property of COLOR.
See <link linkend="color-properties"><function>color-properties</function></link> for a list of the keys.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm base)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/base.scm"><filename>scheme/base.scm</filename></ulink>
  at line 545 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/base.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="color-p">
  <refnamediv>
    <refname>color?</refname>
    <refpurpose>Returns <literal>#t</literal> if OBJ is a color object, otherwise <literal>#f</literal>.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(color? obj)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Returns <literal>#t</literal> if <parameter>obj</parameter> is a color object, otherwise <literal>#f</literal>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/color.c"><filename>scwm/color.c</filename></ulink>
  at line 108 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/color.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="colormap-focus">
  <refnamediv>
    <refname>colormap-focus</refname>
    <refpurpose>Return the colormap focus policy, as set by <link linkend="set-colormap-focus-x"><function>set-colormap-focus!</function></link>.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(colormap-focus)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the colormap focus policy, as set by <link linkend="set-colormap-focus-x"><function>set-colormap-focus!</function></link>.
The value can be either be 'mouse, indicating that the window under
the mouse pointer will always colormap installed, or 'focus to
indicate that the window with the input focus should also get the
colormap focus.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/miscprocs.c"><filename>scwm/miscprocs.c</filename></ulink>
  at line 212 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/miscprocs.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="constrained-window-in-focus-p">
  <refnamediv>
    <refname>constrained-window-in-focus?</refname>
    <refpurpose>Returns <literal>#t</literal> if one of the windows in the constraint is in focus.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(constrained-window-in-focus? ui-constraint)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Returns <literal>#t</literal> if one of the windows in the constraint is in focus.
Returns <literal>#f</literal> otherwise or if UI-CONSTRAINT is not a ui-constraint.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm ui-constraints)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/ui-constraints.scm"><filename>scheme/ui-constraints.scm</filename></ulink>
  at line 514 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/ui-constraints.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="constraint-satisfied-p">
  <refnamediv>
    <refname>constraint-satisfied?</refname>
    <refpurpose>Returns the status of whether a UI-CONSTRAINT is satisfied.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(constraint-satisfied? ui-constraint)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Returns the status of whether a UI-CONSTRAINT is satisfied.
errors if UI-CONSTRAINT is not an ui-constraint.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm ui-constraints)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/ui-constraints.scm"><filename>scheme/ui-constraints.scm</filename></ulink>
  at line 492 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/ui-constraints.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="containing-aligned-viewport">
  <refnamediv>
    <refname>containing-aligned-viewport</refname>
    <refpurpose>Compute the viewport-position of the viewport that contains POS.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(containing-aligned-viewport pos)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Compute the viewport-position of the viewport that contains POS.
POS is a list of x and y virtual coordinates in that order. The
viewport coordinates returned will be in the same format and will be a
integral multiples of the desk size. If POS is not contained in any
valid viewport, for instance if it includes coordinates greater than
zero or greater than the desk size times the display size, the nearest
viewport will be returned instead.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm virtual)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/virtual.scm"><filename>scheme/virtual.scm</filename></ulink>
  at line 34 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/virtual.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="context-to-brief-context">
  <refnamediv>
    <refname>context->brief-context</refname>
    <refpurpose>No documentation supplied.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(context->brief-context context)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  No documentation supplied.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/flux.scm"><filename>scheme/flux.scm</filename></ulink>
  at line 552 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/flux.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="context-to-string">
  <refnamediv>
    <refname>context->string</refname>
    <refpurpose>No documentation supplied.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(context->string context)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  No documentation supplied.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/flux.scm"><filename>scheme/flux.scm</filename></ulink>
  at line 557 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/flux.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="copy-menu-look">
  <refnamediv>
    <refname>copy-menu-look</refname>
    <refpurpose>Copy menu look ORIGINAL-MENU-LOOK with a new NAME and optional EXTRA.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(copy-menu-look original-menu-look name #&amp;optional extra)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Copy menu look <parameter>original-menu-look</parameter> with a new <parameter>name</parameter> and optional <parameter>extra</parameter>.
If <parameter>extra</parameter> is not given, the <parameter>extra</parameter> information from the original menu is
used. The form and purpose of the <parameter>extra</parameter> information varies with the
menu look, and is documented with the original menu looks; currently,
only the Xpm menu look uses the <parameter>extra</parameter> information.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/menulook.c"><filename>scwm/menulook.c</filename></ulink>
  at line 94 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/menulook.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="copy-window-configuration">
  <refnamediv>
    <refname>copy-window-configuration</refname>
    <refpurpose>Apply a saved state CONFIGURATION to window WIN.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(copy-window-configuration configuration #&amp;optional (win (get-window)))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Apply a saved state CONFIGURATION to window WIN.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm window-configuration)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/window-configuration.scm"><filename>scheme/window-configuration.scm</filename></ulink>
  at line 49 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/window-configuration.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="copy-window-title-to-cut-buffer0">
  <refnamediv>
    <refname>copy-window-title-to-cut-buffer0</refname>
    <refpurpose>Set CUT_BUFFER0 to be a string that is the title of WINDOW.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(copy-window-title-to-cut-buffer0 #&amp;optional (window (get-window)))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Set CUT_BUFFER0 to be a string that is the title of WINDOW.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm xprop-extras)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/xprop-extras.scm"><filename>scheme/xprop-extras.scm</filename></ulink>
  at line 33 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/xprop-extras.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="corba-evaluator-ior">
  <refnamediv>
    <refname>corba-evaluator-ior</refname>
    <refpurpose>Returns the IOR string for the scwm-scheme-evaluator servant.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(corba-evaluator-ior)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Returns the IOR string for the scwm-scheme-evaluator servant.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Primitive from (app scwm corba)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/modules/corba/scwmcorba.c"><filename>modules/corba/scwmcorba.c</filename></ulink>
  at line 109 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/modules/corba/scwmcorba.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="create-pixmap-cursor">
  <refnamediv>
    <refname>create-pixmap-cursor</refname>
    <refpurpose>Create and return a new cursor object from the pixmap image.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(create-pixmap-cursor image #&amp;optional fg-color bg-color x-hotspot y-hotspot)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Create and return a new cursor object from the pixmap image.
<parameter>image</parameter> specifies the look of the cursor that will be returned.
<parameter>fg-color</parameter> and <parameter>bg-color</parameter> specify the foreground and background colors
respectively.  <parameter>x-hotspot</parameter>, <parameter>y-hotspot</parameter> give the x and y offset for the
cursor's hot spot (from the top-left of the cursor).
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/cursor.c"><filename>scwm/cursor.c</filename></ulink>
  at line 272 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/cursor.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="current-decor">
  <refnamediv>
    <refname>current-decor</refname>
    <refpurpose>Return the current decor.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(current-decor)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the current decor.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/decor.c"><filename>scwm/decor.c</filename></ulink>
  at line 260 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/decor.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="current-desk">
  <refnamediv>
    <refname>current-desk</refname>
    <refpurpose>Returns the integer identifying the current desk.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(current-desk)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Returns the integer identifying the current desk.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/deskpage.c"><filename>scwm/deskpage.c</filename></ulink>
  at line 80 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/deskpage.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="current-viewport-offset-xx">
  <refnamediv>
    <refname>current-viewport-offset-xx</refname>
    <refpurpose>Return the current viewport horizontal offset as a multiple of the display width.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(current-viewport-offset-xx)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the current viewport horizontal offset as a multiple of the display width.
The returned value will be a non-negative real number.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm virtual)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/virtual.scm"><filename>scheme/virtual.scm</filename></ulink>
  at line 67 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/virtual.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="current-viewport-offset-yy">
  <refnamediv>
    <refname>current-viewport-offset-yy</refname>
    <refpurpose>Return the current viewport vertical offset as a multiple of the display height.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(current-viewport-offset-yy)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the current viewport vertical offset as a multiple of the display height.
The returned value will be a non-negative real number.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm virtual)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/virtual.scm"><filename>scheme/virtual.scm</filename></ulink>
  at line 72 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/virtual.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="current-window-with-focus">
  <refnamediv>
    <refname>current-window-with-focus</refname>
    <refpurpose>Return the window that currently has the input focus.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(current-window-with-focus)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the window that currently has the input focus.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/window.c"><filename>scwm/window.c</filename></ulink>
  at line 1051 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="current-window-with-pointer">
  <refnamediv>
    <refname>current-window-with-pointer</refname>
    <refpurpose>Return the window that currently contains the mouse pointer.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(current-window-with-pointer)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the window that currently contains the mouse pointer.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/window.c"><filename>scwm/window.c</filename></ulink>
  at line 1061 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="deactivate-ScwmBiff">
  <refnamediv>
    <refname>deactivate-ScwmBiff</refname>
    <refpurpose>Make ScwmBiff no longer notify, but leave visible.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(deactivate-ScwmBiff sb)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Make ScwmBiff no longer notify, but leave visible.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/ScwmBiff.scm"><filename>scheme/ScwmBiff.scm</filename></ulink>
  at line 105 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/ScwmBiff.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="decrement-in-range">
  <refnamediv>
    <refname>decrement-in-range</refname>
    <refpurpose>Return v-1 but no less than low.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(decrement-in-range v low)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return v-1 but no less than low.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm undo)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/undo.scm"><filename>scheme/undo.scm</filename></ulink>
  at line 47 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/undo.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="decrement-undo-index">
  <refnamediv>
    <refname>decrement-undo-index</refname>
    <refpurpose>Decrement the undo-index.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(decrement-undo-index)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Decrement the undo-index.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm undo)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/undo.scm"><filename>scheme/undo.scm</filename></ulink>
  at line 52 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/undo.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="default-decor">
  <refnamediv>
    <refname>default-decor</refname>
    <refpurpose>Return the default decor.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(default-decor)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the default decor.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/decor.c"><filename>scwm/decor.c</filename></ulink>
  at line 231 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/decor.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="default-move-opaquely-p">
  <refnamediv>
    <refname>default-move-opaquely?</refname>
    <refpurpose>Return <literal>#t</literal> if WIN has area <= *opaque-move-percent* of the screen, else <literal>#f</literal>.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(default-move-opaquely? win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return <literal>#t</literal> if WIN has area <= *opaque-move-percent* of the screen, else <literal>#f</literal>.
If *opaque-move-percent* is a boolean, not a number, just return it.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm winops)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/winops.scm"><filename>scheme/winops.scm</filename></ulink>
  at line 227 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/winops.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="default-placement-proc">
  <refnamediv>
    <refname>default-placement-proc</refname>
    <refpurpose>Use various flags to call an appropriate placement function.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(default-placement-proc win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Use various flags to call an appropriate placement function.
This is the default placement procedure for non-transient windows. It
tries <link linkend="smart-place-window"><function>smart-place-window</function></link>, <link linkend="clever-place-window"><function>clever-place-window</function></link>,
<link linkend="random-place-window"><function>random-place-window</function></link>, or <link linkend="interactive-move"><function>interactive-move</function></link> (to achieve interactive
placement) on <parameter>win</parameter> depending on several style flags. (See
<link linkend="set-smart-placement-is-really-smart-x"><function>set-smart-placement-is-really-smart!</function></link>, <link linkend="set-smart-placement-x"><function>set-smart-placement!</function></link>,
and <link linkend="set-random-placement-x"><function>set-random-placement!</function></link>.) However, if one of the following
factors holds, the window will instead be placed exactly as
requested by the program: the position was specified by the user,
the position was specified by the program and #:no-PPosition-hint
is not set, or the window starts iconic.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/placement.c"><filename>scwm/placement.c</filename></ulink>
  at line 563 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/placement.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="default-resize-opaquely-p">
  <refnamediv>
    <refname>default-resize-opaquely?</refname>
    <refpurpose>Return <literal>#t</literal> if WIN has area <= *opaque-resize-percent* of the screen, else <literal>#f</literal>.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(default-resize-opaquely? win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return <literal>#t</literal> if WIN has area <= *opaque-resize-percent* of the screen, else <literal>#f</literal>.
If *opaque-resize-percent* is a boolean, not a number, just return it.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm winops)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/winops.scm"><filename>scheme/winops.scm</filename></ulink>
  at line 218 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/winops.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="default-transient-placement-proc">
  <refnamediv>
    <refname>default-transient-placement-proc</refname>
    <refpurpose>This is the default placement procedure for transient windows.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(default-transient-placement-proc win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  This is the default placement procedure for transient windows.
It simply leaves the window <parameter>win</parameter> in place, exactly as requested.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/placement.c"><filename>scwm/placement.c</filename></ulink>
  at line 623 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/placement.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="default-winlist-proc">
  <refnamediv>
    <refname>default-winlist-proc</refname>
    <refpurpose>The default behaviour when WIN is selected from the window list.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(default-winlist-proc #&amp;optional (win (get-window)))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  The default behaviour when WIN is selected from the window list.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm winlist)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/winlist.scm"><filename>scheme/winlist.scm</filename></ulink>
  at line 51 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/winlist.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="define-scwm-group-proc">
  <refnamediv>
    <refname>define-scwm-group-proc</refname>
    <refpurpose>No documentation supplied.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(define-scwm-group-proc sym name #&amp;key (docstring #f) (icon #f) (widget #f))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  No documentation supplied.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm defoption)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/defoption.scm"><filename>scheme/defoption.scm</filename></ulink>
  at line 73 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/defoption.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="define-scwm-option-proc">
  <refnamediv>
    <refname>define-scwm-option-proc</refname>
    <refpurpose>Helper procedure for <link linkend="define-scwm-option"><function>define-scwm-option</function></link>.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(define-scwm-option-proc var sym docstring default #&amp;key
		  (type #f)
		  (permit-disable #f)
		  (range #f)
		  (favorites #f)
		  (group #f)
		  (layout-hint #f)
		  (setter #f)
		  (getter #f))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Helper procedure for <link linkend="define-scwm-option"><function>define-scwm-option</function></link>.
See <link linkend="define-scwm-option"><function>define-scwm-option</function></link>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm defoption)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/defoption.scm"><filename>scheme/defoption.scm</filename></ulink>
  at line 144 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/defoption.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="deiconify">
  <refnamediv>
    <refname>deiconify</refname>
    <refpurpose>Deiconify WIN.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(deiconify  #&amp;optional win x y)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Deiconify <parameter>win</parameter>.
Hides its icon, and shows its regular window.
<parameter>win</parameter> defaults to the window context in the usual way if not
specified.
If <parameter>x</parameter> and <parameter>y</parameter> are given, then move <parameter>win</parameter> to virtual position (<parameter>x</parameter> . <parameter>y</parameter>)
before de-iconifying.  If <parameter>x</parameter> is specified, <parameter>y</parameter> must be specified, too.
These arguments are useful since <link linkend="move-window"><function>move-window</function></link> and <link linkend="move-to"><function>move-to</function></link> will
refer to the icon window (not the frame window) if a window is iconified.
Without being able to specify a position on de-iconification, the window
cannot, e.g., cleanly be brought back onto the current viewport.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/window.c"><filename>scwm/window.c</filename></ulink>
  at line 2026 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="deiconify-group">
  <refnamediv>
    <refname>deiconify-group</refname>
    <refpurpose>Deiconify all members of GROUP.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(deiconify-group #&amp;optional (group (get-window)) x y)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Deiconify all members of GROUP.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm group)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/group.scm"><filename>scheme/group.scm</filename></ulink>
  at line 142 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/group.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="deiconify-group-or-window">
  <refnamediv>
    <refname>deiconify-group-or-window</refname>
    <refpurpose>Deiconify WIN, and perhaps all members of its group.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(deiconify-group-or-window #&amp;optional (win (get-window)) x y)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Deiconify WIN, and perhaps all members of its group.
If WIN's icon was the result of an <link linkend="iconify-group"><function>iconify-group</function></link>, all members of the group
are deiconified; otherwise, only WIN is affected.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm group)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/group.scm"><filename>scheme/group.scm</filename></ulink>
  at line 150 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/group.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="deiconify-to-current-viewport">
  <refnamediv>
    <refname>deiconify-to-current-viewport</refname>
    <refpurpose>De-iconify WIN and make it visible in the current viewport.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(deiconify-to-current-viewport #&amp;optional (win (get-window)))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  De-iconify WIN and make it visible in the current viewport.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm virtual)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/virtual.scm"><filename>scheme/virtual.scm</filename></ulink>
  at line 136 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/virtual.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="delete-duplicates">
  <refnamediv>
    <refname>delete-duplicates</refname>
    <refpurpose>Return a list that has the elements of L with duplicates omitted.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(delete-duplicates l)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return a list that has the elements of L with duplicates omitted.
The first instance of any alement that appears more than once is retained,
all other instances are removed.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm listops)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/listops.scm"><filename>scheme/listops.scm</filename></ulink>
  at line 214 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/listops.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="delete-multiple-windows-interactively">
  <refnamediv>
    <refname>delete-multiple-windows-interactively</refname>
    <refpurpose>No documentation supplied.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(delete-multiple-windows-interactively)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  No documentation supplied.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/flux.scm"><filename>scheme/flux.scm</filename></ulink>
  at line 409 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/flux.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="delete-ui-constraint-x">
  <refnamediv>
    <refname>delete-ui-constraint!</refname>
    <refpurpose>Removes the UI-CONSTRAINT permanently.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(delete-ui-constraint! ui-constraint)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Removes the UI-CONSTRAINT permanently.
SIDE-EFFECT: removes instance object from the global list
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm ui-constraints)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/ui-constraints.scm"><filename>scheme/ui-constraints.scm</filename></ulink>
  at line 334 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/ui-constraints.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="delete-ui-constraint-class-x">
  <refnamediv>
    <refname>delete-ui-constraint-class!</refname>
    <refpurpose>Removes UI-CONSTRAINT-CLASS from the global class list.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(delete-ui-constraint-class! ui-constraint-class)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Removes UI-CONSTRAINT-CLASS from the global class list.
SIDE-EFFECT: removes class object from the global class list.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm ui-constraints)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/ui-constraints.scm"><filename>scheme/ui-constraints.scm</filename></ulink>
  at line 109 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/ui-constraints.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="delete-ui-constraints-involving-window-x">
  <refnamediv>
    <refname>delete-ui-constraints-involving-window!</refname>
    <refpurpose>Delete all the ui-constraint objects that involve WIN.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(delete-ui-constraints-involving-window! win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Delete all the ui-constraint objects that involve WIN.
This removes the constraints from the global-constraint-instance-list.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm ui-constraints)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/ui-constraints.scm"><filename>scheme/ui-constraints.scm</filename></ulink>
  at line 532 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/ui-constraints.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="delete-window">
  <refnamediv>
    <refname>delete-window</refname>
    <refpurpose>Request that WIN remove itself from the display.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(delete-window  #&amp;optional win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Request that <parameter>win</parameter> remove itself from the display.
This is the friendly way of closing a window, but it will not work if
the application does not cooperate. <parameter>win</parameter> defaults to the window context
in the usual way if not specified.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/window.c"><filename>scwm/window.c</filename></ulink>
  at line 1653 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="delta-position">
  <refnamediv>
    <refname>delta-position</refname>
    <refpurpose>Return a new coordinate list that is DX,DY offset from XY-LIST.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(delta-position xy-list dx dy)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return a new coordinate list that is DX,DY offset from XY-LIST.
E.g., if XY-LIST is (2 10) and DX is 5, DY is 7, returns (7 17).
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm base)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/base.scm"><filename>scheme/base.scm</filename></ulink>
  at line 286 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/base.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="describe-key">
  <refnamediv>
    <refname>describe-key</refname>
    <refpurpose>No documentation supplied.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(describe-key)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  No documentation supplied.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/flux.scm"><filename>scheme/flux.scm</filename></ulink>
  at line 529 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/flux.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="describe-mouse">
  <refnamediv>
    <refname>describe-mouse</refname>
    <refpurpose>No documentation supplied.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(describe-mouse)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  No documentation supplied.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/flux.scm"><filename>scheme/flux.scm</filename></ulink>
  at line 540 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/flux.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="desk-background">
  <refnamediv>
    <refname>desk-background</refname>
    <refpurpose>Set the background to use on desk DESK.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(desk-background desk #&amp;key
				 (reset #f) 
				 (color #f) 
				 (image #f)
				 (image-style 'centered))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Set the background to use on desk DESK.
RESET determines whether to reset the background to the standard X 
crosshatch before enacting any other settings.
COLOR is a background color to set, either a color name or a color object.
IMAGE is a background image, either an image name or an image object.
IMAGE-STYLE is either 'tiled or 'centered.
The default may be set by setting the background for DESK <literal>#t</literal>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm desk-background)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/desk-background.scm"><filename>scheme/desk-background.scm</filename></ulink>
  at line 25 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/desk-background.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="desk-size">
  <refnamediv>
    <refname>desk-size</refname>
    <refpurpose>Returns the size of the current desk.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(desk-size)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Returns the size of the current desk.
The returned value is in units of the physical screen size, as a list
of the width and the height.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/deskpage.c"><filename>scwm/deskpage.c</filename></ulink>
  at line 328 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/deskpage.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="destroy-window">
  <refnamediv>
    <refname>destroy-window</refname>
    <refpurpose>Forcibly remove WIN from the screen.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(destroy-window  #&amp;optional win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Forcibly remove <parameter>win</parameter> from the screen.
This will kill the application without giving it a chance to save its
state or do any other shutdown, but is guaranteed to work. <parameter>win</parameter>
defaults to the window context in the usual way if not specified.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/window.c"><filename>scwm/window.c</filename></ulink>
  at line 1684 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="dir-focus">
  <refnamediv>
    <refname>dir-focus</refname>
    <refpurpose>Move focus to the closest window in direction DIR.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(dir-focus dir #&amp;optional (win (current-window-with-pointer)))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Move focus to the closest window in direction DIR.
DIR must be one of the symbols 'north, 'south, 'east, or 'west.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/dir-focus.scm"><filename>scheme/dir-focus.scm</filename></ulink>
  at line 50 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/dir-focus.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="disable-all-constraints">
  <refnamediv>
    <refname>disable-all-constraints</refname>
    <refpurpose>Disable all constraints in the global instance list.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(disable-all-constraints)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Disable all constraints in the global instance list.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm ui-constraints)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/ui-constraints.scm"><filename>scheme/ui-constraints.scm</filename></ulink>
  at line 586 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/ui-constraints.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="disable-gnome-hints">
  <refnamediv>
    <refname>disable-gnome-hints</refname>
    <refpurpose>Disable support for GNOME hints.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(disable-gnome-hints)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Disable support for GNOME hints.
GNOME hint support allows for better integration with the GNOME
desktop environment, including support for the GNOME panel and 
pager applet. Reverses the effect of <link linkend="enable-gnome-hints"><function>enable-gnome-hints</function></link>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/gnome-hints.scm"><filename>scheme/gnome-hints.scm</filename></ulink>
  at line 513 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/gnome-hints.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="disable-ui-constraint">
  <refnamediv>
    <refname>disable-ui-constraint</refname>
    <refpurpose>Disables the constraint in the constraint solver</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(disable-ui-constraint ui-constraint)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Disables the constraint in the constraint solver
errors if UI-CONSTRAINT is not a ui-constraint
returns the constraint
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm ui-constraints)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/ui-constraints.scm"><filename>scheme/ui-constraints.scm</filename></ulink>
  at line 474 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/ui-constraints.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="display-message-briefly">
  <refnamediv>
    <refname>display-message-briefly</refname>
    <refpurpose>Display MSG in the message window for SEC-TIMEOUT seconds.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(display-message-briefly msg #&amp;optional (sec-timeout 3))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Display MSG in the message window for SEC-TIMEOUT seconds.
See <link linkend="display-message"><function>display-message</function></link> for details about MSG.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm message-window)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/message-window.scm"><filename>scheme/message-window.scm</filename></ulink>
  at line 272 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/message-window.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="display-size">
  <refnamediv>
    <refname>display-size</refname>
    <refpurpose>Returns the size of the physical screen in pixels.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(display-size)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Returns the size of the physical screen in pixels.
The return value is list of the width and the height. The
width is the <link linkend="car"><function>car</function></link>, the height is the <link linkend="cadr"><function>cadr</function></link> of the returned list.
See also the variables "display-width" and "display-height".
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/deskpage.c"><filename>scwm/deskpage.c</filename></ulink>
  at line 342 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/deskpage.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="documentation">
  <refnamediv>
    <refname>documentation</refname>
    <refpurpose>Print the documentation for the string or symbol.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(documentation func #&amp;optional (port (current-output-port)))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Print the documentation for the string or symbol.
Works by searching through the files listed in <link linkend="doc-files"><function>doc-files</function></link>.
Returns <literal>#t</literal> if any documentation was found, <literal>#f</literal> otherwise.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm doc)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/doc.scm"><filename>scheme/doc.scm</filename></ulink>
  at line 26 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/doc.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="draw-all-constraints">
  <refnamediv>
    <refname>draw-all-constraints</refname>
    <refpurpose>Draw all constraints in the global instance list.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(draw-all-constraints)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Draw all constraints in the global instance list.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm ui-constraints)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/ui-constraints.scm"><filename>scheme/ui-constraints.scm</filename></ulink>
  at line 573 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/ui-constraints.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="draw-constraint">
  <refnamediv>
    <refname>draw-constraint</refname>
    <refpurpose>Draw the UI-CONSTRAINT.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(draw-constraint ui-constraint)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Draw the UI-CONSTRAINT.  error if UI-CONSTRAINT is not
an ui-constraint.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm ui-constraints)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/ui-constraints.scm"><filename>scheme/ui-constraints.scm</filename></ulink>
  at line 557 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/ui-constraints.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="draw-overlay-plane">
  <refnamediv>
    <refname>draw-overlay-plane</refname>
    <refpurpose>Draw a box in the overlay plane.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(draw-overlay-plane)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Draw a box in the overlay plane.
This is just for demonstration and testing purposes for now.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Primitive from (app scwm overlay-plane)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/modules/overlay-plane/overlay-plane.c"><filename>modules/overlay-plane/overlay-plane.c</filename></ulink>
  at line 99 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/modules/overlay-plane/overlay-plane.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="dummy-prompt-hbox">
  <refnamediv>
    <refname>dummy-prompt-hbox</refname>
    <refpurpose>Create and return a dummy-prompting hbox and entry.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(dummy-prompt-hbox prompt initval)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Create and return a dummy-prompting hbox and entry.
PROMPT is the prompt, and INITVAL is the initial string.
The returned value is a list: (hbox getter entry).
See also <link linkend="prompt-string"><function>prompt-string</function></link>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm preferences)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/preferences.scm"><filename>scheme/preferences.scm</filename></ulink>
  at line 133 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/preferences.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="edge-move-threshold">
  <refnamediv>
    <refname>edge-move-threshold</refname>
    <refpurpose>Return the edge move threshold as set by <link linkend="set-edge-move-threshold-x"><function>set-edge-move-threshold!</function></link>.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(edge-move-threshold)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the edge move threshold as set by <link linkend="set-edge-move-threshold-x"><function>set-edge-move-threshold!</function></link>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/deskpage.c"><filename>scwm/deskpage.c</filename></ulink>
  at line 282 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/deskpage.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="edge-scroll-delay">
  <refnamediv>
    <refname>edge-scroll-delay</refname>
    <refpurpose>Return the edge scroll delay (in ms) as set by <link linkend="set-edge-scroll-delay-x"><function>set-edge-scroll-delay!</function></link>.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(edge-scroll-delay)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the edge scroll delay (in ms) as set by <link linkend="set-edge-scroll-delay-x"><function>set-edge-scroll-delay!</function></link>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/deskpage.c"><filename>scwm/deskpage.c</filename></ulink>
  at line 254 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/deskpage.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="edge-x-scroll">
  <refnamediv>
    <refname>edge-x-scroll</refname>
    <refpurpose>Return the horizontal edge scroll increment as set by <link linkend="set-edge-x-scroll-x"><function>set-edge-x-scroll!</function></link>.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(edge-x-scroll)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the horizontal edge scroll increment as set by <link linkend="set-edge-x-scroll-x"><function>set-edge-x-scroll!</function></link>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/deskpage.c"><filename>scwm/deskpage.c</filename></ulink>
  at line 146 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/deskpage.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="edge-x-wrap">
  <refnamediv>
    <refname>edge-x-wrap</refname>
    <refpurpose>Return the current horizonatal edge wrap setting as set by <link linkend="set-edge-x-wrap-x"><function>set-edge-x-wrap!</function></link>.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(edge-x-wrap)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the current horizonatal edge wrap setting as set by <link linkend="set-edge-x-wrap-x"><function>set-edge-x-wrap!</function></link>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/deskpage.c"><filename>scwm/deskpage.c</filename></ulink>
  at line 199 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/deskpage.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="edge-y-scroll">
  <refnamediv>
    <refname>edge-y-scroll</refname>
    <refpurpose>Return the vertical edge scroll increment as set by <link linkend="set-edge-y-scroll-x"><function>set-edge-y-scroll!</function></link>.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(edge-y-scroll)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the vertical edge scroll increment as set by <link linkend="set-edge-y-scroll-x"><function>set-edge-y-scroll!</function></link>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/deskpage.c"><filename>scwm/deskpage.c</filename></ulink>
  at line 174 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/deskpage.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="edge-y-wrap">
  <refnamediv>
    <refname>edge-y-wrap</refname>
    <refpurpose>Return the current vertical edge wrap setting as set by <link linkend="set-edge-y-wrap-x"><function>set-edge-y-wrap!</function></link>.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(edge-y-wrap)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the current vertical edge wrap setting as set by <link linkend="set-edge-y-wrap-x"><function>set-edge-y-wrap!</function></link>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/deskpage.c"><filename>scwm/deskpage.c</filename></ulink>
  at line 224 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/deskpage.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="elapsed-time">
  <refnamediv>
    <refname>elapsed-time</refname>
    <refpurpose>Return the elapsed time in milliseconds since O.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(elapsed-time)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the elapsed time in milliseconds since O.S. has been up.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/miscprocs.c"><filename>scwm/miscprocs.c</filename></ulink>
  at line 418 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/miscprocs.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="enable-all-constraints">
  <refnamediv>
    <refname>enable-all-constraints</refname>
    <refpurpose>Enable all constraints in the global instance list.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(enable-all-constraints)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Enable all constraints in the global instance list.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm ui-constraints)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/ui-constraints.scm"><filename>scheme/ui-constraints.scm</filename></ulink>
  at line 592 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/ui-constraints.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="enable-gnome-hints">
  <refnamediv>
    <refname>enable-gnome-hints</refname>
    <refpurpose>Enable support for GNOME hints.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(enable-gnome-hints)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Enable support for GNOME hints.
GNOME hint support allows for better integration with the GNOME
desktop environment, including support for the GNOME panel and 
pager applet. See also <link linkend="disable-gnome-hints"><function>disable-gnome-hints</function></link>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm gnome-hints)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/gnome-hints.scm"><filename>scheme/gnome-hints.scm</filename></ulink>
  at line 487 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/gnome-hints.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="enable-ui-constraint">
  <refnamediv>
    <refname>enable-ui-constraint</refname>
    <refpurpose>Enables the constraint in the constraint solver.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(enable-ui-constraint ui-constraint)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Enables the constraint in the constraint solver.
errors if UI-CONSTRAINT is not a ui-constraint.
returns the constraint.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm ui-constraints)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/ui-constraints.scm"><filename>scheme/ui-constraints.scm</filename></ulink>
  at line 455 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/ui-constraints.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="enclosing-rectangle">
  <refnamediv>
    <refname>enclosing-rectangle</refname>
    <refpurpose>Return the smallest rectangle that encloses the windows WINS.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(enclosing-rectangle wins)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the smallest rectangle that encloses the windows WINS.
Return value's car is the top left of the rectangle, cdr is
the bottom right.
That is, the returned list is: ((nw-x nw-y) se-x se-y).
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/flux.scm"><filename>scheme/flux.scm</filename></ulink>
  at line 462 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/flux.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="end-constraints">
  <refnamediv>
    <refname>end-constraints</refname>
    <refpurpose>Terminate using the constraint solver.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(end-constraints)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Terminate using the constraint solver.  
Can restart with a fresh solver by using <link linkend="start-constraints"><function>start-constraints</function></link>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm constraints)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/constraints.scm"><filename>scheme/constraints.scm</filename></ulink>
  at line 37 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/constraints.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="end-highlighting-current-window">
  <refnamediv>
    <refname>end-highlighting-current-window</refname>
    <refpurpose>Remove the hook procedures that make the window with mouse be highlighted.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(end-highlighting-current-window 
		 #&amp;optional (win current-highlighted-window))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Remove the hook procedures that make the window with mouse be highlighted.
See also <link linkend="start-highlighting-current-window"><function>start-highlighting-current-window</function></link>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm highlight-current-window)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/highlight-current-window.scm"><filename>scheme/highlight-current-window.scm</filename></ulink>
  at line 60 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/highlight-current-window.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="end-highlighting-selected-window">
  <refnamediv>
    <refname>end-highlighting-selected-window</refname>
    <refpurpose>Stop highlighting the current window during window selections.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(end-highlighting-selected-window)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Stop highlighting the current window during window selections.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm highlight-current-window)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/highlight-current-window.scm"><filename>scheme/highlight-current-window.scm</filename></ulink>
  at line 45 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/highlight-current-window.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="esd-reconnect">
  <refnamediv>
    <refname>esd-reconnect</refname>
    <refpurpose>Connect to the ESound daemon on the machine named HOST.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(esd-reconnect  #&amp;optional host)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Connect to the ESound daemon on the machine named <parameter>host</parameter>.
If <parameter>host</parameter> is not set, the $ESPEAKER environmental variable will be used. If this
is unset too, localhost is contacted.
The esdsound module normally connects at startup. This function is useful
if the connection was lost, esd was not running at startup, or its location
unknown.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Primitive from (app scwm esdsound)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/modules/esdsound/sound.c"><filename>modules/esdsound/sound.c</filename></ulink>
  at line 118 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/modules/esdsound/sound.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="eval-after-load">
  <refnamediv>
    <refname>eval-after-load</refname>
    <refpurpose>Run PROC after MODULE is loaded.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(eval-after-load module proc)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Run PROC after MODULE is loaded.
Run PROC immediately if MODULE has already been loaded.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/minimal.scm"><filename>scheme/minimal.scm</filename></ulink>
  at line 147 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/minimal.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="eval-fvwm-command">
  <refnamediv>
    <refname>eval-fvwm-command</refname>
    <refpurpose>Evaluate an fvwm2 command.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(eval-fvwm-command command #&amp;optional (fmod #f) 
				   (window #f))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Evaluate an fvwm2 command.
Implemented for compatibility with fvwm2 modules, which can send
commands back to the window manager for evaluation.  Not all fvwm2
commands are implemented; see the end of fvwm-eval.scm for a list of
working commands.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/fvwm-eval.scm"><filename>scheme/fvwm-eval.scm</filename></ulink>
  at line 528 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/fvwm-eval.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="exe">
  <refnamediv>
    <refname>exe</refname>
    <refpurpose>Return a procedure that, when invoked, executes COMMAND in the background.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(exe command)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return a procedure that, when invoked, executes COMMAND in the background.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm base)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/base.scm"><filename>scheme/base.scm</filename></ulink>
  at line 554 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/base.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="exe-on-selection">
  <refnamediv>
    <refname>exe-on-selection</refname>
    <refpurpose>Return a procedure that runs COMMAND in the background on the X selection.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(exe-on-selection command)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return a procedure that runs COMMAND in the background on the X selection.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/std-menus.scm"><filename>scheme/std-menus.scm</filename></ulink>
  at line 58 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/std-menus.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="execute">
  <refnamediv>
    <refname>execute</refname>
    <refpurpose>Execute COMMAND in the background.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(execute command)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Execute COMMAND in the background.
See also <link linkend="execute-with-pidprop"><function>execute-with-pidprop</function></link> if you want to know the
process id of COMMAND and want to use <link linkend="window-id"><function>window-id</function></link> to be
able to map back from the windows the process creates
to the process id.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm base)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/base.scm"><filename>scheme/base.scm</filename></ulink>
  at line 676 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/base.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="execute-on-selection">
  <refnamediv>
    <refname>execute-on-selection</refname>
    <refpurpose>Run COMMAND in the background, with arguments supplied by the X selection.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(execute-on-selection command)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Run COMMAND in the background, with arguments supplied by the X selection.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/std-menus.scm"><filename>scheme/std-menus.scm</filename></ulink>
  at line 54 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/std-menus.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="execute-with-pidprop">
  <refnamediv>
    <refname>execute-with-pidprop</refname>
    <refpurpose>Execute COMMAND in the background and permit use of <link linkend="window-pid"><function>window-pid</function></link> on its windows.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(execute-with-pidprop command)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Execute COMMAND in the background and permit use of <link linkend="window-pid"><function>window-pid</function></link> on its windows.
Returns the PID of COMMAND.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/file.scm"><filename>scheme/file.scm</filename></ulink>
  at line 122 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/file.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="extreme">
  <refnamediv>
    <refname>extreme</refname>
    <refpurpose>Find extreme value e of PRED in LST.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(extreme pred lst)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Find extreme value e of PRED in LST.
If PRED defines a semi-ordering, `(PRED e x)' will hold for all members x
of LST not equal to e. E.g. `(extreme &lt; ...)' returns the lowest number.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/flux.scm"><filename>scheme/flux.scm</filename></ulink>
  at line 361 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/flux.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="filename-is-complete-p">
  <refnamediv>
    <refname>filename-is-complete?</refname>
    <refpurpose>Return true if FNAME is a fully qualified pathname.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(filename-is-complete? fname)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return true if FNAME is a fully qualified pathname.
This is considered to be the case if the string FNAME starts with "/",
"./" or "../", following the convention of many Unix programs.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/file.scm"><filename>scheme/file.scm</filename></ulink>
  at line 35 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/file.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="filter">
  <refnamediv>
    <refname>filter</refname>
    <refpurpose>Return a list of those elements of L for which PRED is true.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(filter pred l)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return a list of those elements of L for which PRED is true.
The elements appear in the result list in the same order in which they
appeared in L.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm listops)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/listops.scm"><filename>scheme/listops.scm</filename></ulink>
  at line 84 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/listops.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="filter-map">
  <refnamediv>
    <refname>filter-map</refname>
    <refpurpose>Process FIRST and the lists comprising REST as <link linkend="map"><function>map</function></link> would.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(filter-map proc first . rest)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Process FIRST and the lists comprising REST as <link linkend="map"><function>map</function></link> would.
However, do not include any false returns from PROC in the result
list.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm listops)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/listops.scm"><filename>scheme/listops.scm</filename></ulink>
  at line 191 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/listops.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="find-file-in-path">
  <refnamediv>
    <refname>find-file-in-path</refname>
    <refpurpose>Search for file named FNAME in PATH.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(find-file-in-path fname path)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Search for file named FNAME in PATH.
FNAME is a string specifying a file; if it is a fully qualified filename,
as indicated by <link linkend="filename-is-complete-p"><function>filename-is-complete?</function></link>, it is checked for as is. Otherwise,
each element of the list PATH is used as a directory name to check for the
file. If the file is found, the full pathname to it is returned; if not,
<literal>#f</literal> is returned.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/file.scm"><filename>scheme/file.scm</filename></ulink>
  at line 49 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/file.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="find-window-by">
  <refnamediv>
    <refname>find-window-by</refname>
    <refpurpose>Return a window satisfying predicate PRED.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(find-window-by pred)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return a window satisfying predicate PRED.
If there are multiple such windows, an unspecified one of them
will be returned.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm wininfo)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/wininfo.scm"><filename>scheme/wininfo.scm</filename></ulink>
  at line 410 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/wininfo.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="find-window-by-class-resource">
  <refnamediv>
    <refname>find-window-by-class-resource</refname>
    <refpurpose>Return a window by its CLASS and RESOURCE names (as strings).</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(find-window-by-class-resource class resource)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return a window by its CLASS and RESOURCE names (as strings).
If there are multiple such windows, an unspecified one of them
will be returned. See also <link linkend="find-window-by"><function>find-window-by</function></link>, <link linkend="class-match--p"><function>class-match??</function></link> 
and <link linkend="title-match--p"><function>title-match??</function></link>
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/wininfo.scm"><filename>scheme/wininfo.scm</filename></ulink>
  at line 425 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/wininfo.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="find-window-by-name">
  <refnamediv>
    <refname>find-window-by-name</refname>
    <refpurpose>Return a window with name WINDOW-NAME.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(find-window-by-name window-name)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return a window with name WINDOW-NAME.
If there are multiple such windows, an unspecified one of them
will be returned.  See also <link linkend="find-window-by"><function>find-window-by</function></link> and <link linkend="title-match--p"><function>title-match??</function></link>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm wininfo)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/wininfo.scm"><filename>scheme/wininfo.scm</filename></ulink>
  at line 419 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/wininfo.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="first-line-output-of-system-cmd">
  <refnamediv>
    <refname>first-line-output-of-system-cmd</refname>
    <refpurpose>Return the first line of output of command shell execution of CMD.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(first-line-output-of-system-cmd cmd)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the first line of output of command shell execution of CMD.
CMD is run synchronously and its output is piped into the return value
of this function, as a string.  See also <link linkend="output-of-system-cmd"><function>output-of-system-cmd</function></link>
if you want to read all of the output of CMD.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/file.scm"><filename>scheme/file.scm</filename></ulink>
  at line 112 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/file.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="flash-window">
  <refnamediv>
    <refname>flash-window</refname>
    <refpurpose>Flash WIN's titlebar and boundary color to COLOR for UNFLASH-DELAY seconds.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(flash-window #&amp;optional (win (get-window)) #&amp;key
			      (color "red")
			      (unflash-delay .5)
			      (continually #f))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Flash WIN's titlebar and boundary color to COLOR for UNFLASH-DELAY seconds.
UNFLASH-DELAY may be <literal>#f</literal> to not automatically revert back to the original
color.  See <link linkend="unflash-window"><function>unflash-window</function></link>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm flash-window)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/flash-window.scm"><filename>scheme/flash-window.scm</filename></ulink>
  at line 17 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/flash-window.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="flash-window-on">
  <refnamediv>
    <refname>flash-window-on</refname>
    <refpurpose>Flash WIN's titlebar and boundary color to COLOR indefinitely.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(flash-window-on #&amp;optional (win (get-window))
				 (color "red"))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Flash WIN's titlebar and boundary color to COLOR indefinitely.
Returns the window changed.  Use <link linkend="unflash-window"><function>unflash-window</function></link> to rever the
window to its normal colors.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm flash-window)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/flash-window.scm"><filename>scheme/flash-window.scm</filename></ulink>
  at line 9 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/flash-window.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="flatten">
  <refnamediv>
    <refname>flatten</refname>
    <refpurpose>Return LIST-OF-LISTS as a single flat list.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(flatten list-of-lists)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return LIST-OF-LISTS as a single flat list.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm listops)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/listops.scm"><filename>scheme/listops.scm</filename></ulink>
  at line 245 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/listops.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="focus">
  <refnamediv>
    <refname>focus</refname>
    <refpurpose>Give WIN the input focus.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(focus  #&amp;optional win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Give <parameter>win</parameter> the input focus.
This will typically result in drawing <parameter>win</parameter>'s frame in a special style
as well. <parameter>win</parameter> defaults to the window context in the usual way if not
specified. Note that <parameter>win</parameter> is not raised by giving it the focus;  see
<link linkend="raise-window"><function>raise-window</function></link> if that is your intent.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/window.c"><filename>scwm/window.c</filename></ulink>
  at line 1748 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="focus-to-register">
  <refnamediv>
    <refname>focus-to-register</refname>
    <refpurpose>No documentation supplied.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(focus-to-register #&amp;optional (register (get-register-name)))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  No documentation supplied.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm register)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/register.scm"><filename>scheme/register.scm</filename></ulink>
  at line 55 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/register.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="fold-menu-list">
  <refnamediv>
    <refname>fold-menu-list</refname>
    <refpurpose>Split ML into chained menus of no more than MAX-LINES items.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(fold-menu-list
		ml #&amp;optional (max-lines (scwm-option-get *menu-max-fold-lines*)))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Split ML into chained menus of no more than MAX-LINES items.
ML is a list of menuitem objects. MAX-LINES is a number, which
defaults to <link linkend="default-menu-max-fold-lines"><function>default-menu-max-fold-lines</function></link>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm menus-extras)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/menus-extras.scm"><filename>scheme/menus-extras.scm</filename></ulink>
  at line 59 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/menus-extras.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="fold-menu-list-by-group">
  <refnamediv>
    <refname>fold-menu-list-by-group</refname>
    <refpurpose>Split ML-CONS into chained menus based on their group.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(fold-menu-list-by-group ml-cons)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Split ML-CONS into chained menus based on their group.
ML-CONS is a list of lists. Each sublist's car is the name of the
group, and the cdr is a list of the menuitems for that group.
The list must be sorted by GROUP.  Returns a list of menu items
for each group, popping up the group's MENUITEMs.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/menus-extras.scm"><filename>scheme/menus-extras.scm</filename></ulink>
  at line 84 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/menus-extras.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="font-properties">
  <refnamediv>
    <refname>font-properties</refname>
    <refpurpose>Return an association list giving some properties of FONT.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(font-properties font)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return an association list giving some properties of <parameter>font</parameter>.
Currently defined properties are 'name, the string name of the
color, and 'height, its total height in pixels.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/font.c"><filename>scwm/font.c</filename></ulink>
  at line 232 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/font.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="font-property">
  <refnamediv>
    <refname>font-property</refname>
    <refpurpose>Return the KEY property of FONT.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(font-property font key)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the KEY property of FONT.
See <link linkend="font-properties"><function>font-properties</function></link> for a list of the keys.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm base)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/base.scm"><filename>scheme/base.scm</filename></ulink>
  at line 540 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/base.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="font-p">
  <refnamediv>
    <refname>font?</refname>
    <refpurpose>Returns <literal>#t</literal> if OBJ is a font object, otherwise <literal>#f</literal>.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(font? obj)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Returns <literal>#t</literal> if <parameter>obj</parameter> is a font object, otherwise <literal>#f</literal>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/font.c"><filename>scwm/font.c</filename></ulink>
  at line 222 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/font.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="for-all-p">
  <refnamediv>
    <refname>for-all?</refname>
    <refpurpose>Return true if PRED is true for all elements of L, otherwise false.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(for-all? l pred)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return true if PRED is true for all elements of L, otherwise false.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm listops)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/listops.scm"><filename>scheme/listops.scm</filename></ulink>
  at line 102 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/listops.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="force-reset-window-frame-x">
  <refnamediv>
    <refname>force-reset-window-frame!</refname>
    <refpurpose>This redraws the window frame and decorations of WIN.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(force-reset-window-frame!  #&amp;optional win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  This redraws the window frame and decorations of <parameter>win</parameter>.
Ideally it would never be necessary, but it is useful for debugging
and for new window objects set via object properties.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/window.c"><filename>scwm/window.c</filename></ulink>
  at line 1007 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="force-segv-for-testing">
  <refnamediv>
    <refname>force-segv-for-testing</refname>
    <refpurpose>Cause a segmentation violation.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(force-segv-for-testing)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Cause a segmentation violation.
Do not do this unless you are testing segv handling!
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/miscprocs.c"><filename>scwm/miscprocs.c</filename></ulink>
  at line 630 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/miscprocs.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="frame-id-to-window">
  <refnamediv>
    <refname>frame-id->window</refname>
    <refpurpose>Return the window object corresponding to a frame WINDOW-ID.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(frame-id->window window-id)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the window object corresponding to a frame <parameter>window-id</parameter>.
<parameter>window-id</parameter> should be the X id of a scwm frame window. If there is no
such window object, return <literal>#f</literal>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/window.c"><filename>scwm/window.c</filename></ulink>
  at line 2788 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="fvwm-exec">
  <refnamediv>
    <refname>fvwm-exec</refname>
    <refpurpose>No documentation supplied.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(fvwm-exec command)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  No documentation supplied.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm fvwm-compat)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/fvwm-compat.scm"><filename>scheme/fvwm-compat.scm</filename></ulink>
  at line 41 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/fvwm-compat.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="fvwm-exec-use-shell">
  <refnamediv>
    <refname>fvwm-exec-use-shell</refname>
    <refpurpose>No documentation supplied.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(fvwm-exec-use-shell #&amp;optional (shell #f))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  No documentation supplied.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm fvwm-compat)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/fvwm-compat.scm"><filename>scheme/fvwm-compat.scm</filename></ulink>
  at line 32 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/fvwm-compat.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="fvwm-none">
  <refnamediv>
    <refname>fvwm-none</refname>
    <refpurpose>No documentation supplied.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(fvwm-none thunk #&amp;key (only '()) (except '()))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  No documentation supplied.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm fvwm-compat)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/fvwm-compat.scm"><filename>scheme/fvwm-compat.scm</filename></ulink>
  at line 49 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/fvwm-compat.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="fvwm-nop">
  <refnamediv>
    <refname>fvwm-nop</refname>
    <refpurpose>No documentation supplied.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(fvwm-nop . args)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  No documentation supplied.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm fvwm-compat)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/fvwm-compat.scm"><filename>scheme/fvwm-compat.scm</filename></ulink>
  at line 73 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/fvwm-compat.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="fvwm-pipe-read">
  <refnamediv>
    <refname>fvwm-pipe-read</refname>
    <refpurpose>No documentation supplied.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(fvwm-pipe-read command)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  No documentation supplied.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm fvwm-compat)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/fvwm-compat.scm"><filename>scheme/fvwm-compat.scm</filename></ulink>
  at line 53 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/fvwm-compat.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="gdk-draw-arc-x">
  <refnamediv>
    <refname>gdk-draw-arc!</refname>
    <refpurpose>Draw an arc on the root window.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(gdk-draw-arc! top_left width height angle1 angle2)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Draw an arc on the root window.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/ui-constraints-gdk-drawing.scm"><filename>scheme/ui-constraints-gdk-drawing.scm</filename></ulink>
  at line 98 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/ui-constraints-gdk-drawing.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="gdk-draw-line-x">
  <refnamediv>
    <refname>gdk-draw-line!</refname>
    <refpurpose>Draw a line on the root window.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(gdk-draw-line! p1 p2)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Draw a line on the root window.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm ui-constraints-gdk-drawing)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/ui-constraints-gdk-drawing.scm"><filename>scheme/ui-constraints-gdk-drawing.scm</filename></ulink>
  at line 88 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/ui-constraints-gdk-drawing.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="gdk-draw-rectangle-x">
  <refnamediv>
    <refname>gdk-draw-rectangle!</refname>
    <refpurpose>Draw a rectangle on the root window.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(gdk-draw-rectangle! top-left width height)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Draw a rectangle on the root window.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm ui-constraints-gdk-drawing)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/ui-constraints-gdk-drawing.scm"><filename>scheme/ui-constraints-gdk-drawing.scm</filename></ulink>
  at line 80 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/ui-constraints-gdk-drawing.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="gdk-drawing-get-drawable">
  <refnamediv>
    <refname>gdk-drawing-get-drawable</refname>
    <refpurpose>Returns the drawable object used to draw on the root window.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(gdk-drawing-get-drawable)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Returns the drawable object used to draw on the root window.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm ui-constraints-gdk-drawing)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/ui-constraints-gdk-drawing.scm"><filename>scheme/ui-constraints-gdk-drawing.scm</filename></ulink>
  at line 68 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/ui-constraints-gdk-drawing.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="gdk-drawing-get-gc">
  <refnamediv>
    <refname>gdk-drawing-get-gc</refname>
    <refpurpose>Returns the gc used to draw on the root window.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(gdk-drawing-get-gc)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Returns the gc used to draw on the root window.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm ui-constraints-gdk-drawing)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/ui-constraints-gdk-drawing.scm"><filename>scheme/ui-constraints-gdk-drawing.scm</filename></ulink>
  at line 64 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/ui-constraints-gdk-drawing.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="gdk-drawing-initialize">
  <refnamediv>
    <refname>gdk-drawing-initialize</refname>
    <refpurpose>Setup the draw functions for drawing onto the root window.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(gdk-drawing-initialize)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Setup the draw functions for drawing onto the root window.
Requires the ui-constraints-buttons window be initialized and
made visible, otherwise initialization will not occur.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm ui-constraints-gdk-drawing)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/ui-constraints-gdk-drawing.scm"><filename>scheme/ui-constraints-gdk-drawing.scm</filename></ulink>
  at line 44 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/ui-constraints-gdk-drawing.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="gdk-drawing-initialized-p">
  <refnamediv>
    <refname>gdk-drawing-initialized?</refname>
    <refpurpose>Returns whether or not the module has been initialized.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(gdk-drawing-initialized?)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Returns whether or not the module has been initialized.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm ui-constraints-gdk-drawing)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/ui-constraints-gdk-drawing.scm"><filename>scheme/ui-constraints-gdk-drawing.scm</filename></ulink>
  at line 60 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/ui-constraints-gdk-drawing.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="gdk-drawing-set-line-width-x">
  <refnamediv>
    <refname>gdk-drawing-set-line-width!</refname>
    <refpurpose>Set the width of the line to draw with.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(gdk-drawing-set-line-width! width)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Set the width of the line to draw with.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm ui-constraints-gdk-drawing)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/ui-constraints-gdk-drawing.scm"><filename>scheme/ui-constraints-gdk-drawing.scm</filename></ulink>
  at line 76 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/ui-constraints-gdk-drawing.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="get-fvwm2-module-config">
  <refnamediv>
    <refname>get-fvwm2-module-config</refname>
    <refpurpose>No documentation supplied.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(get-fvwm2-module-config module-type)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  No documentation supplied.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm fvwm-module)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/fvwm-module.scm"><filename>scheme/fvwm-module.scm</filename></ulink>
  at line 390 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/fvwm-module.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="get-input-hooks-list">
  <refnamediv>
    <refname>get-input-hooks-list</refname>
    <refpurpose>Return the input-hooks list.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(get-input-hooks-list)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the input-hooks list.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/callbacks.c"><filename>scwm/callbacks.c</filename></ulink>
  at line 900 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/callbacks.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="get-key-event">
  <refnamediv>
    <refname>get-key-event</refname>
    <refpurpose>Return a represention of the next key event.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(get-key-event)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return a represention of the next key event.
The return value is (string modmask keycode). The
<link linkend="cdr"><function>cdr</function></link> of the return value can be used as the arguments to
<link linkend="undo-passive-grab"><function>undo-passive-grab</function></link> and <link linkend="redo-passive-grab"><function>redo-passive-grab</function></link>.
The string is usable as a key binding string.  Modifiers
are listed first, separated by "-" followed by a "-" and the
keysym name.  E.g., "S-C-M-z" is Shift+Control+Meta + 'z' key.
If the event is only modifier keys, then the string will
end in a "-"; e.g., "S-C-M-"
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/miscprocs.c"><filename>scwm/miscprocs.c</filename></ulink>
  at line 703 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/miscprocs.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="get-mouse-event">
  <refnamediv>
    <refname>get-mouse-event</refname>
    <refpurpose>Return a represention of the next mouse event.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(get-mouse-event)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return a represention of the next mouse event.
The return value is (string modmask button-number <literal>#t</literal>).  The
<link linkend="cdr"><function>cdr</function></link> of the return value can be used as the arguments to
<link linkend="undo-passive-grab"><function>undo-passive-grab</function></link> and <link linkend="redo-passive-grab"><function>redo-passive-grab</function></link>.
The string is usable as a mouse binding string.  Modifiers
are listed first, separated by "-" followed by a "-" and the
button number.  E.g., "S-C-M-1" is Shift+Control+Meta + button 1.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/miscprocs.c"><filename>scwm/miscprocs.c</filename></ulink>
  at line 773 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/miscprocs.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="get-proplist-with-description">
  <refnamediv>
    <refname>get-proplist-with-description</refname>
    <refpurpose>Return a property list by parsing DESC in GNUstep proplist format.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(get-proplist-with-description desc)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return a property list by parsing <parameter>desc</parameter> in GNUstep proplist format.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Primitive from (app scwm proplist)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/modules/proplist/scwmproplist.c"><filename>modules/proplist/scwmproplist.c</filename></ulink>
  at line 887 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/modules/proplist/scwmproplist.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="get-proplist-with-path">
  <refnamediv>
    <refname>get-proplist-with-path</refname>
    <refpurpose>Return the proplist from path FILENAME.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(get-proplist-with-path filename)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the proplist from path <parameter>filename</parameter>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Primitive from (app scwm proplist)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/modules/proplist/scwmproplist.c"><filename>modules/proplist/scwmproplist.c</filename></ulink>
  at line 869 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/modules/proplist/scwmproplist.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="get-register">
  <refnamediv>
    <refname>get-register</refname>
    <refpurpose>Return contents of Emacs register named REGISTER, or <literal>#f</literal> if none.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(get-register register)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return contents of Emacs register named REGISTER, or <literal>#f</literal> if none.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm register)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/register.scm"><filename>scheme/register.scm</filename></ulink>
  at line 36 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/register.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="get-register-name">
  <refnamediv>
    <refname>get-register-name</refname>
    <refpurpose>No documentation supplied.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(get-register-name)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  No documentation supplied.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm register)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/register.scm"><filename>scheme/register.scm</filename></ulink>
  at line 13 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/register.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="get-timer-hooks-list">
  <refnamediv>
    <refname>get-timer-hooks-list</refname>
    <refpurpose>Return the timer-hooks list.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(get-timer-hooks-list)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the timer-hooks list.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/callbacks.c"><filename>scwm/callbacks.c</filename></ulink>
  at line 750 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/callbacks.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="get-ui-constraint-class-by-name">
  <refnamediv>
    <refname>get-ui-constraint-class-by-name</refname>
    <refpurpose>No documentation supplied.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(get-ui-constraint-class-by-name name)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  No documentation supplied.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm ui-constraints)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/ui-constraints.scm"><filename>scheme/ui-constraints.scm</filename></ulink>
  at line 149 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/ui-constraints.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="get-window">
  <refnamediv>
    <refname>get-window</refname>
    <refpurpose>Retrieve the window context or select interactively.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(get-window  #&amp;optional select? release? cursor)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Retrieve the window context or select interactively.
If there is no window context, a window is selected interactively.
The boolean <parameter>select?</parameter> argument (default <literal>#t</literal>) determines whether or not a
window should be selected interactively if there is no current window
context. The <parameter>release?</parameter> argument (default <literal>#t</literal>) determines whether or not
interactive selection (if any) should wait for a mouse release event
or just a press. The latter behavior is useful if the action being
performed on the window is an interactive one involving mouse
drags. The <parameter>cursor</parameter> argument is either a cursor object or <literal>#t</literal> to use
the "skull and crossbones" cursor, or <literal>#f</literal> to use the standard
circle cursor.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/window.c"><filename>scwm/window.c</filename></ulink>
  at line 966 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="get-window-colors">
  <refnamediv>
    <refname>get-window-colors</refname>
    <refpurpose>Return a two-element list, "(fg bg)", the colors for WIN.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(get-window-colors  #&amp;optional win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return a two-element list, "(fg bg)", the colors for <parameter>win</parameter>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/window.c"><filename>scwm/window.c</filename></ulink>
  at line 3448 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="get-window-focus">
  <refnamediv>
    <refname>get-window-focus</refname>
    <refpurpose>Get the focus style of WIN.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(get-window-focus  #&amp;optional win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Get the focus style of <parameter>win</parameter>.
Returns one of 'mouse, 'click, 'sloppy, or 'none.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/window.c"><filename>scwm/window.c</filename></ulink>
  at line 3425 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="get-window-highlight-colors">
  <refnamediv>
    <refname>get-window-highlight-colors</refname>
    <refpurpose>Return a two-element list, "(fg bg)", the highlight colors for WIN.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(get-window-highlight-colors  #&amp;optional win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return a two-element list, "(fg bg)", the highlight colors for <parameter>win</parameter>.
fg or bg may be <literal>#f</literal>, which means that the color is inherited from the decor.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/window.c"><filename>scwm/window.c</filename></ulink>
  at line 3462 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="get-window-nonant">
  <refnamediv>
    <refname>get-window-nonant</refname>
    <refpurpose>SELECT-LIST is a list of (win x y), returns the nonant selected.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(get-window-nonant select-list)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  SELECT-LIST is a list of (win x y), returns the nonant selected.
The nonant is a number in [0,8] referring to which of the tic-tac-toe board
squares x,y is in of WIN. x,y are root-window relative viewport positions.
<link linkend="select-viewport-position"><function>select-viewport-position</function></link> returns lists of the form needed by this procedure.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm nonants)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/nonants.scm"><filename>scheme/nonants.scm</filename></ulink>
  at line 110 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/nonants.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="get-window-with-nonant">
  <refnamediv>
    <refname>get-window-with-nonant</refname>
    <refpurpose>Select a WINDOW and a NONANT, defaulting to the current window context.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(get-window-with-nonant #&amp;optional (window #f) (nonant 4))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Select a WINDOW and a NONANT, defaulting to the current window context.  
If the WINDOW is not specified and there is no window context, 
perform interactive selection.  If WINDOW is passed in but 
NONANT is not specified, the center nonant is used.  The nonant
is stored as an object-property of the window for use with the
window-selection and constraints modules.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm nonants)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/nonants.scm"><filename>scheme/nonants.scm</filename></ulink>
  at line 44 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/nonants.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="get-window-with-nonant-interactively">
  <refnamediv>
    <refname>get-window-with-nonant-interactively</refname>
    <refpurpose>Interactively select a window and a nonant.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(get-window-with-nonant-interactively)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Interactively select a window and a nonant.
The nonant is stored as an object-property of the window
for use with the window-selection and constraints modules.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm nonants)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/nonants.scm"><filename>scheme/nonants.scm</filename></ulink>
  at line 77 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/nonants.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="get-wm-command">
  <refnamediv>
    <refname>get-wm-command</refname>
    <refpurpose>Get the "WM_COMMAND" X-Property of WIN and return that string.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(get-wm-command win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Get the "WM_COMMAND" X-Property of WIN and return that string.
WIN is a Scwm window object. The "WM_COMMAND" X-Property is the application's
notion of what the command line was used to run the application.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm xprop-extras)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/xprop-extras.scm"><filename>scheme/xprop-extras.scm</filename></ulink>
  at line 43 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/xprop-extras.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="get-x-cursor">
  <refnamediv>
    <refname>get-x-cursor</refname>
    <refpurpose>Return the cursor object corresponding to NAME-OR-NUMBER.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(get-x-cursor name-or-number)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the cursor object corresponding to <parameter>name-or-number</parameter>.
<parameter>name-or-number</parameter> can be either a string naming an X11 cursor (e.g.,
"trek") or a number specifying the cursor number.  See
<file>X11/cursorfont.h</file> for the standard cursors.  Note
that the "XC_" macro prefix should be omitted when used with
this procedure..
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/cursor.c"><filename>scwm/cursor.c</filename></ulink>
  at line 247 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/cursor.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="global-window-configuration">
  <refnamediv>
    <refname>global-window-configuration</refname>
    <refpurpose>Return an object abstracting all of the current windows' states.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(global-window-configuration)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return an object abstracting all of the current windows' states.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm window-configuration)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/window-configuration.scm"><filename>scheme/window-configuration.scm</filename></ulink>
  at line 64 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/window-configuration.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="global-window-configuration-to-register">
  <refnamediv>
    <refname>global-window-configuration-to-register</refname>
    <refpurpose>No documentation supplied.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(global-window-configuration-to-register #&amp;optional (register (get-register-name)))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  No documentation supplied.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm register)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/register.scm"><filename>scheme/register.scm</filename></ulink>
  at line 66 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/register.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="gnome-desktop-click">
  <refnamediv>
    <refname>gnome-desktop-click</refname>
    <refpurpose>Send a button-press N to the gnome desktop manager.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(gnome-desktop-click n)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Send a button-press N to the gnome desktop manager.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm gnome-hints)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/gnome-hints.scm"><filename>scheme/gnome-hints.scm</filename></ulink>
  at line 435 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/gnome-hints.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="gnome-desktop-click-1">
  <refnamediv>
    <refname>gnome-desktop-click-1</refname>
    <refpurpose>Send a button-press 1 and button-release 1 to the gnome desktop manager.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(gnome-desktop-click-1)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Send a button-press 1 and button-release 1 to the gnome desktop manager.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm gnome-hints)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/gnome-hints.scm"><filename>scheme/gnome-hints.scm</filename></ulink>
  at line 451 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/gnome-hints.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="gnome-desktop-click-2">
  <refnamediv>
    <refname>gnome-desktop-click-2</refname>
    <refpurpose>Send a button-press 1 and button-release 2 to the gnome desktop manager.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(gnome-desktop-click-2)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Send a button-press 1 and button-release 2 to the gnome desktop manager.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm gnome-hints)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/gnome-hints.scm"><filename>scheme/gnome-hints.scm</filename></ulink>
  at line 455 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/gnome-hints.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="gnome-desktop-click-3">
  <refnamediv>
    <refname>gnome-desktop-click-3</refname>
    <refpurpose>Send a button-press 1 and button-release 3 to the gnome desktop manager.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(gnome-desktop-click-3)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Send a button-press 1 and button-release 3 to the gnome desktop manager.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm gnome-hints)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/gnome-hints.scm"><filename>scheme/gnome-hints.scm</filename></ulink>
  at line 459 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/gnome-hints.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="gnome-desktop-press">
  <refnamediv>
    <refname>gnome-desktop-press</refname>
    <refpurpose>Send a button-press N to the gnome desktop manager.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(gnome-desktop-press n)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Send a button-press N to the gnome desktop manager.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm gnome-hints)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/gnome-hints.scm"><filename>scheme/gnome-hints.scm</filename></ulink>
  at line 431 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/gnome-hints.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="gnome-desktop-press-1">
  <refnamediv>
    <refname>gnome-desktop-press-1</refname>
    <refpurpose>Send a button-press 1 to the gnome desktop manager.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(gnome-desktop-press-1)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Send a button-press 1 to the gnome desktop manager.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm gnome-hints)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/gnome-hints.scm"><filename>scheme/gnome-hints.scm</filename></ulink>
  at line 439 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/gnome-hints.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="gnome-desktop-press-2">
  <refnamediv>
    <refname>gnome-desktop-press-2</refname>
    <refpurpose>Send a button-press 1 to the gnome desktop manager.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(gnome-desktop-press-2)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Send a button-press 1 to the gnome desktop manager.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm gnome-hints)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/gnome-hints.scm"><filename>scheme/gnome-hints.scm</filename></ulink>
  at line 443 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/gnome-hints.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="gnome-desktop-press-3">
  <refnamediv>
    <refname>gnome-desktop-press-3</refname>
    <refpurpose>Send a button-press 1 to the gnome desktop manager.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(gnome-desktop-press-3)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Send a button-press 1 to the gnome desktop manager.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm gnome-hints)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/gnome-hints.scm"><filename>scheme/gnome-hints.scm</filename></ulink>
  at line 447 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/gnome-hints.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="gravity-to-alignments">
  <refnamediv>
    <refname>gravity->alignments</refname>
    <refpurpose>Return a list of two numeric alignments corresponding to a GRAVITY.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(gravity->alignments gravity)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return a list of two numeric alignments corresponding to a GRAVITY.
GRAVITY can be one of 'nw, 'n, 'ne, 'w, 'center, 'e, 'sw, 's, 'se
or spelled-out versions of these.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm message-window)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/message-window.scm"><filename>scheme/message-window.scm</filename></ulink>
  at line 20 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/message-window.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="gravity-to-string">
  <refnamediv>
    <refname>gravity->string</refname>
    <refpurpose>Returns a string representation of the numerical GRAVITY</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(gravity->string gravity)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Returns a string representation of the numerical GRAVITY
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm stringops)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/stringops.scm"><filename>scheme/stringops.scm</filename></ulink>
  at line 54 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/stringops.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="group-to-windows">
  <refnamediv>
    <refname>group->windows</refname>
    <refpurpose>Returns a list of windows belonging to GROUP.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(group->windows group)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Returns a list of windows belonging to GROUP.
GROUP can be any window belonging to the group. All its peers, including
itself, are returned.  If GROUP is a list, it is treated
as the list of windows and is just returned.  This permits
all the group action procedures to be used on lists of windows, too.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm group)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/group.scm"><filename>scheme/group.scm</filename></ulink>
  at line 47 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/group.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="group-window">
  <refnamediv>
    <refname>group-window</refname>
    <refpurpose>Returns a distinguished window of GROUP.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(group-window group)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Returns a distinguished window of GROUP.
Since a group is represented either by a single window or by a
list, this returns either GROUP or the <link linkend="car"><function>car</function></link> of the list.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm group)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/group.scm"><filename>scheme/group.scm</filename></ulink>
  at line 39 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/group.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="gtk-clist-get-row-values">
  <refnamediv>
    <refname>gtk-clist-get-row-values</refname>
    <refpurpose>Return a list of the COL columns of row ROW of CLIST.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(gtk-clist-get-row-values clist row col)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return a list of the COL columns of row ROW of CLIST.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm prompt-proc)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/prompt-proc.scm"><filename>scheme/prompt-proc.scm</filename></ulink>
  at line 234 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/prompt-proc.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="gtk-pixmap-new-search-scwm-path">
  <refnamediv>
    <refname>gtk-pixmap-new-search-scwm-path</refname>
    <refpurpose>Return the new pixmap object as <link linkend="gtk-pixmap-new"><function>gtk-pixmap-new</function></link> does, but search Scwm's image-load-path for it.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(gtk-pixmap-new-search-scwm-path pixmap-name button)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the new pixmap object as <link linkend="gtk-pixmap-new"><function>gtk-pixmap-new</function></link> does, but search Scwm's image-load-path for it.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm gtk)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/gtk.scm"><filename>scheme/gtk.scm</filename></ulink>
  at line 64 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/gtk.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="gtk-proc-selection-cancel-button">
  <refnamediv>
    <refname>gtk-proc-selection-cancel-button</refname>
    <refpurpose>Returns the cancel button from PROC-DIALOG.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(gtk-proc-selection-cancel-button proc-dialog)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Returns the cancel button from PROC-DIALOG.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm prompt-proc)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/prompt-proc.scm"><filename>scheme/prompt-proc.scm</filename></ulink>
  at line 214 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/prompt-proc.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="gtk-proc-selection-clist-widget">
  <refnamediv>
    <refname>gtk-proc-selection-clist-widget</refname>
    <refpurpose>Returns the clist widgetfrom PROC-DIALOG.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(gtk-proc-selection-clist-widget proc-dialog)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Returns the clist widgetfrom PROC-DIALOG.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm prompt-proc)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/prompt-proc.scm"><filename>scheme/prompt-proc.scm</filename></ulink>
  at line 218 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/prompt-proc.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="gtk-proc-selection-get-procedure">
  <refnamediv>
    <refname>gtk-proc-selection-get-procedure</refname>
    <refpurpose>Returns the currently selected procedure from PROC-DIALOG.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(gtk-proc-selection-get-procedure proc-dialog)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Returns the currently selected procedure from PROC-DIALOG.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm prompt-proc)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/prompt-proc.scm"><filename>scheme/prompt-proc.scm</filename></ulink>
  at line 230 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/prompt-proc.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="gtk-proc-selection-get-procname">
  <refnamediv>
    <refname>gtk-proc-selection-get-procname</refname>
    <refpurpose>Returns the currently selected procedure name from PROC-DIALOG.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(gtk-proc-selection-get-procname proc-dialog)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Returns the currently selected procedure name from PROC-DIALOG.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm prompt-proc)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/prompt-proc.scm"><filename>scheme/prompt-proc.scm</filename></ulink>
  at line 222 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/prompt-proc.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="gtk-proc-selection-new">
  <refnamediv>
    <refname>gtk-proc-selection-new</refname>
    <refpurpose>Returns a new procedure-selecting dialog box.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(gtk-proc-selection-new title #&amp;optional (proclist #f))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Returns a new procedure-selecting dialog box.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm prompt-proc)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/prompt-proc.scm"><filename>scheme/prompt-proc.scm</filename></ulink>
  at line 137 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/prompt-proc.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="gtk-proc-selection-ok-button">
  <refnamediv>
    <refname>gtk-proc-selection-ok-button</refname>
    <refpurpose>Returns the ok button from PROC-DIALOG.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(gtk-proc-selection-ok-button proc-dialog)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Returns the ok button from PROC-DIALOG.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm prompt-proc)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/prompt-proc.scm"><filename>scheme/prompt-proc.scm</filename></ulink>
  at line 210 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/prompt-proc.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="gtk-proc-selection-toplevel-widget">
  <refnamediv>
    <refname>gtk-proc-selection-toplevel-widget</refname>
    <refpurpose>Returns the toplevel window widget from PROC-DIALOG.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(gtk-proc-selection-toplevel-widget proc-dialog)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Returns the toplevel window widget from PROC-DIALOG.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm prompt-proc)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/prompt-proc.scm"><filename>scheme/prompt-proc.scm</filename></ulink>
  at line 206 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/prompt-proc.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="gtk-text-replace">
  <refnamediv>
    <refname>gtk-text-replace</refname>
    <refpurpose>No documentation supplied.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(gtk-text-replace textwidget text)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  No documentation supplied.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm prompt-proc)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/prompt-proc.scm"><filename>scheme/prompt-proc.scm</filename></ulink>
  at line 130 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/prompt-proc.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="gtk-window-to-scwm-window">
  <refnamediv>
    <refname>gtk-window->scwm-window</refname>
    <refpurpose>Return the Scwm window object corresponding to GTKWIN.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(gtk-window->scwm-window gtkwin)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the Scwm window object corresponding to GTKWIN.
GTKWIN is a GTk+ window object returned from <link linkend="gtk-window-new"><function>gtk-window-new</function></link>.
Return value is <literal>#f</literal> if no corresponding window exists now.
Also will return <literal>#f</literal> if your guile-gtk implementation does
not support this procedure (you should upgrade!).
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/gtk.scm"><filename>scheme/gtk.scm</filename></ulink>
  at line 73 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/gtk.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="gui-set">
  <refnamediv>
    <refname>gui-set</refname>
    <refpurpose>No documentation supplied.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(gui-set sym)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  No documentation supplied.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm preferences)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/preferences.scm"><filename>scheme/preferences.scm</filename></ulink>
  at line 94 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/preferences.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="half">
  <refnamediv>
    <refname>half</refname>
    <refpurpose>Return the closest integer to half of X.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(half x)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the closest integer to half of X.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm base)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/base.scm"><filename>scheme/base.scm</filename></ulink>
  at line 56 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/base.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="handle-pending-events">
  <refnamediv>
    <refname>handle-pending-events</refname>
    <refpurpose>Handle all pending Scwm events, returns number of dispatched events.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(handle-pending-events)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Handle all pending Scwm events, returns number of dispatched events.
This is useful to maintain responsiveness of Scwm when in the middle
of a long computation.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/events.c"><filename>scwm/events.c</filename></ulink>
  at line 315 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/events.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="has-overlay-plane-p">
  <refnamediv>
    <refname>has-overlay-plane?</refname>
    <refpurpose>Return <literal>#t</literal> if the current screen has an overlay plane, <literal>#f</literal> otherwise.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(has-overlay-plane?)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return <literal>#t</literal> if the current screen has an overlay plane, <literal>#f</literal> otherwise.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Primitive from (app scwm overlay-plane)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/modules/overlay-plane/overlay-plane.c"><filename>modules/overlay-plane/overlay-plane.c</filename></ulink>
  at line 41 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/modules/overlay-plane/overlay-plane.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="help">
  <refnamediv>
    <refname>help</refname>
    <refpurpose>Print all possible documentation for string or symbol.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(help obj #&amp;optional (port (current-output-port)))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Print all possible documentation for string or symbol.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm doc)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/doc.scm"><filename>scheme/doc.scm</filename></ulink>
  at line 62 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/doc.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="help-mesg">
  <refnamediv>
    <refname>help-mesg</refname>
    <refpurpose>No documentation supplied.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(help-mesg . funcs)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  No documentation supplied.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm prefs-menu)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/prefs-menu.scm"><filename>scheme/prefs-menu.scm</filename></ulink>
  at line 74 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/prefs-menu.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="hex">
  <refnamediv>
    <refname>hex</refname>
    <refpurpose>Return the integer that corresponds to string NUMBER as a hexadecimal value.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(hex number)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the integer that corresponds to string NUMBER as a hexadecimal value.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm number-convert)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/number-convert.scm"><filename>scheme/number-convert.scm</filename></ulink>
  at line 54 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/number-convert.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="hide-overlay-plane">
  <refnamediv>
    <refname>hide-overlay-plane</refname>
    <refpurpose>Draw a box in the overlay plane.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(hide-overlay-plane)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Draw a box in the overlay plane.
This is just for demonstration and testing purposes for now.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Primitive from (app scwm overlay-plane)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/modules/overlay-plane/overlay-plane.c"><filename>modules/overlay-plane/overlay-plane.c</filename></ulink>
  at line 112 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/modules/overlay-plane/overlay-plane.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="hide-selected-nonants">
  <refnamediv>
    <refname>hide-selected-nonants</refname>
    <refpurpose>Hide nonant markers on window when they are selected.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(hide-selected-nonants)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Hide nonant markers on window when they are selected.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/window-selection.scm"><filename>scheme/window-selection.scm</filename></ulink>
  at line 236 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/window-selection.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="hide-side-decorations">
  <refnamediv>
    <refname>hide-side-decorations</refname>
    <refpurpose>No documentation supplied.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(hide-side-decorations win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  No documentation supplied.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm style)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/style.scm"><filename>scheme/style.scm</filename></ulink>
  at line 188 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/style.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="hide-titlebar">
  <refnamediv>
    <refname>hide-titlebar</refname>
    <refpurpose>Cause WIN not to be decorated with a titlebar.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(hide-titlebar  #&amp;optional win in-place?)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Cause <parameter>win</parameter> not to be decorated with a titlebar.
Keeps the client window at its current location if <parameter>in-place?</parameter> is <literal>#t</literal>.
See also <link linkend="show-titlebar"><function>show-titlebar</function></link>.
<parameter>win</parameter> defaults to the window context in the usual way if not
specified.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/window.c"><filename>scwm/window.c</filename></ulink>
  at line 3139 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="hide-titlebar-in-place">
  <refnamediv>
    <refname>hide-titlebar-in-place</refname>
    <refpurpose>Turn off display of the titlebar for WIN without moving the client window.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(hide-titlebar-in-place #&amp;optional (win (get-window)))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Turn off display of the titlebar for WIN without moving the client window.
This may move the frame to keep the application client window area in
the same position as before the call.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm winops)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/winops.scm"><filename>scheme/winops.scm</filename></ulink>
  at line 70 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/winops.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="highlight-background">
  <refnamediv>
    <refname>highlight-background</refname>
    <refpurpose>Return the default background color for windows with the input focus.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(highlight-background)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the default background color for windows with the input focus.
Applies to the current decor. This is used only for windows that don't
have their own background color.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/color.c"><filename>scwm/color.c</filename></ulink>
  at line 783 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/color.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="highlight-current-window">
  <refnamediv>
    <refname>highlight-current-window</refname>
    <refpurpose>No documentation supplied.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(highlight-current-window . modifiers)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  No documentation supplied.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm highlight-current-window)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/highlight-current-window.scm"><filename>scheme/highlight-current-window.scm</filename></ulink>
  at line 68 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/highlight-current-window.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="highlight-factor">
  <refnamediv>
    <refname>highlight-factor</refname>
    <refpurpose>Return the current highlight factor.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(highlight-factor)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the current highlight factor.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/color.c"><filename>scwm/color.c</filename></ulink>
  at line 575 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/color.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="highlight-foreground">
  <refnamediv>
    <refname>highlight-foreground</refname>
    <refpurpose>Return the default foreground color for windows with the input focus.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(highlight-foreground)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the default foreground color for windows with the input focus.
Applies to the current decor. This is used only for windows that don't
have their own foreground color.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/color.c"><filename>scwm/color.c</filename></ulink>
  at line 708 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/color.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="hook-documentation">
  <refnamediv>
    <refname>hook-documentation</refname>
    <refpurpose>Return the docstring for HOOK.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(hook-documentation hook)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the docstring for HOOK.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm doc)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/doc.scm"><filename>scheme/doc.scm</filename></ulink>
  at line 20 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/doc.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="icon-font">
  <refnamediv>
    <refname>icon-font</refname>
    <refpurpose>Return the font used for drawing icon titles.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(icon-font)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the font used for drawing icon titles.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/font.c"><filename>scwm/font.c</filename></ulink>
  at line 261 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/font.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="icon-position">
  <refnamediv>
    <refname>icon-position</refname>
    <refpurpose>Return the position of the icon for WIN.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(icon-position  #&amp;optional win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the position of the icon for <parameter>win</parameter>.
The position is returned as a list of the x coordinate and the y
coordinate in pixels.  If the icon is sticky, the position will
always be in the 0,0 viewport. <parameter>win</parameter> defaults to the window context in the usual
way if not specified.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/window.c"><filename>scwm/window.c</filename></ulink>
  at line 2598 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="icon-size">
  <refnamediv>
    <refname>icon-size</refname>
    <refpurpose>Return the size of the icon for WIN.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(icon-size  #&amp;optional win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the size of the icon for <parameter>win</parameter>.
The position is returned as a list of the width and height in pixels.
<parameter>win</parameter> defaults to the window context in the usual way if not
specified.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/window.c"><filename>scwm/window.c</filename></ulink>
  at line 2618 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="icon-sticky-p">
  <refnamediv>
    <refname>icon-sticky?</refname>
    <refpurpose>Return <literal>#t</literal> if WIN is "sticky", <literal>#f</literal> otherwise.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(icon-sticky?  #&amp;optional win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return <literal>#t</literal> if <parameter>win</parameter> is "sticky", <literal>#f</literal> otherwise.
See <link linkend="stick-icon"><function>stick-icon</function></link> and <link linkend="stick"><function>stick</function></link>. <parameter>win</parameter> defaults to the window context in
the usual way if not specified.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/window.c"><filename>scwm/window.c</filename></ulink>
  at line 3331 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="icon-title-match--p">
  <refnamediv>
    <refname>icon-title-match??</refname>
    <refpurpose>Return a predicate that tests a window's icon title.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(icon-title-match?? STRING TYPE CASE-SENSITIVE?)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return a predicate that tests a window's icon title.  
When applied to a window, this predicate will return true if the icon
title matches STRING in the manner specified by the optional argument
TYPE, which may be 'exact, 'regexp, or 'wildcard. The optional
CASE-SENSITIVE argument determines whether the matching is
case-sensitive or not.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm wininfo)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/wininfo.scm"><filename>scheme/wininfo.scm</filename></ulink>
  at line 313 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/wininfo.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="icon-viewport-position">
  <refnamediv>
    <refname>icon-viewport-position</refname>
    <refpurpose>Return the position of WIN's icon in pixels within the viewport.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(icon-viewport-position #&amp;optional (win (get-window)))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the position of WIN's icon in pixels within the viewport.
The position is returned as a list of the x coordinate and the y
coordinate in pixels. WIN defaults to the window context in the usual
way if not specified.  See also <link linkend="icon-position"><function>icon-position</function></link>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm base)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/base.scm"><filename>scheme/base.scm</filename></ulink>
  at line 327 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/base.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="iconified-p">
  <refnamediv>
    <refname>iconified?</refname>
    <refpurpose>Return <literal>#t</literal> if WIN is iconified, otherwise return <literal>#f</literal>.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(iconified?  #&amp;optional win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return <literal>#t</literal> if <parameter>win</parameter> is iconified, otherwise return <literal>#f</literal>.
<parameter>win</parameter> defaults to the window context in the usual way if not
specified.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/window.c"><filename>scwm/window.c</filename></ulink>
  at line 2055 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="iconify">
  <refnamediv>
    <refname>iconify</refname>
    <refpurpose>Iconify WIN.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(iconify  #&amp;optional win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Iconify <parameter>win</parameter>.
Iconifying hides the regular window, and shows the window's icon.
<parameter>win</parameter> defaults to the window context in the usual way if not
specified.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/window.c"><filename>scwm/window.c</filename></ulink>
  at line 2000 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="iconify-group">
  <refnamediv>
    <refname>iconify-group</refname>
    <refpurpose>Iconify GROUP into one icon.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(iconify-group #&amp;optional (group (get-window)))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Iconify GROUP into one icon.
The icon is that of the window GROUP represents.
<link linkend="deiconify-group-or-window"><function>deiconify-group-or-window</function></link> will deiconify this icon into the whole GROUP.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/group.scm"><filename>scheme/group.scm</filename></ulink>
  at line 158 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/group.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="id-to-message-window">
  <refnamediv>
    <refname>id->message-window</refname>
    <refpurpose>Return the message-window of an X/11 window id (a long integer).</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(id->message-window winid)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the message-window of an X/11 window id (a long integer).
Returns <literal>#f</literal> if <parameter>winid</parameter> does not correspond to a message-window.
You can use the xwininfo program to get the window id of an arbitrary
window on your X/11 display.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/message-window.c"><filename>scwm/message-window.c</filename></ulink>
  at line 306 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/message-window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="id-to-window">
  <refnamediv>
    <refname>id->window</refname>
    <refpurpose>Return the window object corresponding to an application WINDOW-ID.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(id->window window-id)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the window object corresponding to an application <parameter>window-id</parameter>.
<parameter>window-id</parameter> should be the X id of the application window. If there is no
such window object, return <literal>#f</literal>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/window.c"><filename>scwm/window.c</filename></ulink>
  at line 2771 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="ignore-dubious-modifiers-p">
  <refnamediv>
    <refname>ignore-dubious-modifiers?</refname>
    <refpurpose>Return the status of the ignore-dubious-modifiers flag.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(ignore-dubious-modifiers?)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the status of the ignore-dubious-modifiers flag.
See <link linkend="set-ignore-dubious-modifiers-x"><function>set-ignore-dubious-modifiers!</function></link>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/binding.c"><filename>scwm/binding.c</filename></ulink>
  at line 1507 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/binding.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="image-properties">
  <refnamediv>
    <refname>image-properties</refname>
    <refpurpose>Return an association list giving some properties of IMAGE.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(image-properties image)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return an association list giving some properties of <parameter>image</parameter>.
Currently defined properties are 'filename, the fully expanded
pathname of the image, 'width, its width, 'height, its height, and
depth, its color depth.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/image.c"><filename>scwm/image.c</filename></ulink>
  at line 172 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/image.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="image-property">
  <refnamediv>
    <refname>image-property</refname>
    <refpurpose>Return the KEY property of IMAGE.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(image-property image key)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the KEY property of IMAGE.
See <link linkend="image-properties"><function>image-properties</function></link> for a list of the keys.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm base)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/base.scm"><filename>scheme/base.scm</filename></ulink>
  at line 535 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/base.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="image-short-name">
  <refnamediv>
    <refname>image-short-name</refname>
    <refpurpose>Return the short name of IMAGE.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(image-short-name image)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the short name of <parameter>image</parameter>.
Use <link linkend="image-properties"><function>image-properties</function></link> to access other properties of <parameter>image</parameter>
including its full name.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/image.c"><filename>scwm/image.c</filename></ulink>
  at line 207 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/image.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="image-size">
  <refnamediv>
    <refname>image-size</refname>
    <refpurpose>Return the size of IMAGE as a list (width height).</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(image-size image)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the size of <parameter>image</parameter> as a list (width height).
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/image.c"><filename>scwm/image.c</filename></ulink>
  at line 227 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/image.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="image-p">
  <refnamediv>
    <refname>image?</refname>
    <refpurpose>Returns <literal>#t</literal> if OBJ is an image object, otherwise <literal>#f</literal>.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(image? obj)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Returns <literal>#t</literal> if <parameter>obj</parameter> is an image object, otherwise <literal>#f</literal>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/image.c"><filename>scwm/image.c</filename></ulink>
  at line 162 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/image.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="ImageMagick-loader">
  <refnamediv>
    <refname>ImageMagick-loader</refname>
    <refpurpose>Tries to load an arbitrary image using ImageMagick's <link linkend="convert"><function>convert</function></link>.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(ImageMagick-loader fname)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Tries to load an arbitrary image using ImageMagick's <link linkend="convert"><function>convert</function></link>.
Uses <link linkend="convert"><function>convert</function></link> to try to convert the file to an xpm, then
attempts to load it as such.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm image-loaders)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/image-loaders.scm"><filename>scheme/image-loaders.scm</filename></ulink>
  at line 28 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/image-loaders.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="in-viewport-any-desk-p">
  <refnamediv>
    <refname>in-viewport-any-desk?</refname>
    <refpurpose>Return <literal>#t</literal> if WIN is in the current viewport ignoring the desk, else <literal>#f</literal>.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(in-viewport-any-desk? #&amp;optional (win (get-window)))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return <literal>#t</literal> if WIN is in the current viewport ignoring the desk, else <literal>#f</literal>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm wininfo)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/wininfo.scm"><filename>scheme/wininfo.scm</filename></ulink>
  at line 73 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/wininfo.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="in-viewport-placement">
  <refnamediv>
    <refname>in-viewport-placement</refname>
    <refpurpose>Return a procedure that takes a window and places it in viewport (XX, YY).</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(in-viewport-placement xx yy)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return a procedure that takes a window and places it in viewport (XX, YY).
The procedure will act just like calling <link linkend="place-in-viewport"><function>place-in-viewport</function></link> on the
window with the same XX and YY arguments.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm placement)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/placement.scm"><filename>scheme/placement.scm</filename></ulink>
  at line 87 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/placement.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="increment-in-range">
  <refnamediv>
    <refname>increment-in-range</refname>
    <refpurpose>Return v+1 but no more than high.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(increment-in-range v high)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return v+1 but no more than high.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm undo)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/undo.scm"><filename>scheme/undo.scm</filename></ulink>
  at line 41 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/undo.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="increment-undo-index">
  <refnamediv>
    <refname>increment-undo-index</refname>
    <refpurpose>Increment the undo-index.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(increment-undo-index)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Increment the undo-index.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm undo)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/undo.scm"><filename>scheme/undo.scm</filename></ulink>
  at line 56 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/undo.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="initialize-gtk-toggle-menu">
  <refnamediv>
    <refname>initialize-gtk-toggle-menu</refname>
    <refpurpose>Creates the GTK resources for the gtk-toggle-menu.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(initialize-gtk-toggle-menu #&amp;optional (close? #f))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Creates the GTK resources for the gtk-toggle-menu.
To display the toggle menu, call ui-constraint-gtk-toggle-menu.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm ui-constraints-gtk-toggle-menu)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/ui-constraints-gtk-toggle-menu.scm"><filename>scheme/ui-constraints-gtk-toggle-menu.scm</filename></ulink>
  at line 174 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/ui-constraints-gtk-toggle-menu.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="initialize-programs-that-exist">
  <refnamediv>
    <refname>initialize-programs-that-exist</refname>
    <refpurpose>Initializes the cache with programs that exist in the current $PATH.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(initialize-programs-that-exist)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Initializes the cache with programs that exist in the current $PATH.
This creates a list that <link linkend="cached-program-exists-p"><function>cached-program-exists?</function></link> then checks when
queried whether a program exists or not.  Currently, this procedure
spawns a zsh process to get the list of files in the $PATH very quickly.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/path-cache.scm"><filename>scheme/path-cache.scm</filename></ulink>
  at line 23 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/path-cache.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="initialize-ui-constraints-buttons">
  <refnamediv>
    <refname>initialize-ui-constraints-buttons</refname>
    <refpurpose>No documentation supplied.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(initialize-ui-constraints-buttons #&amp;key (vertical #f) (pixmap #t) (show #f))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  No documentation supplied.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm ui-constraints-buttons)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/ui-constraints-buttons.scm"><filename>scheme/ui-constraints-buttons.scm</filename></ulink>
  at line 95 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/ui-constraints-buttons.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="insert-undo-global">
  <refnamediv>
    <refname>insert-undo-global</refname>
    <refpurpose>Insert the global state into the undo list at undo-index.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(insert-undo-global)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Insert the global state into the undo list at undo-index.
See also <link linkend="push-undo-global"><function>push-undo-global</function></link>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm undo)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/undo.scm"><filename>scheme/undo.scm</filename></ulink>
  at line 66 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/undo.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="insert-undo-state">
  <refnamediv>
    <refname>insert-undo-state</refname>
    <refpurpose>Insert STATE into the undo list at undo-index.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(insert-undo-state state)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Insert STATE into the undo list at undo-index.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm undo)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/undo.scm"><filename>scheme/undo.scm</filename></ulink>
  at line 77 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/undo.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="interactive-move">
  <refnamediv>
    <refname>interactive-move</refname>
    <refpurpose>Move WINDOW interactively and possibly opaquely.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(interactive-move 
		 #&amp;optional (win (get-window #t #f #f))
		 (opaquely? (if win ((scwm-option-get *move-opaquely-proc*) win))))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Move WINDOW interactively and possibly opaquely. 
If OPAQUELY? is specified, it is used to determine if the window
should be moved opaquely, or using a rubber-band. If it is not
spcified, <link linkend="interactive-move"><function>interactive-move</function></link> calls `*move-opaquely-proc*' on WIN and moves
opaquely if that returns <literal>#t</literal> and uses a rubber-band if it returns <literal>#f</literal>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm winops)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/winops.scm"><filename>scheme/winops.scm</filename></ulink>
  at line 249 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/winops.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="interactive-move-group">
  <refnamediv>
    <refname>interactive-move-group</refname>
    <refpurpose>Move GROUP interactively.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(interactive-move-group #&amp;optional (group (get-window #t #f #f)))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Move GROUP interactively.
You can drag around the window GROUP represents. The other windows in GROUP
will move along.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm group)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/group.scm"><filename>scheme/group.scm</filename></ulink>
  at line 114 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/group.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="interactive-move-selected-group-or-window">
  <refnamediv>
    <refname>interactive-move-selected-group-or-window</refname>
    <refpurpose>No documentation supplied.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(interactive-move-selected-group-or-window)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  No documentation supplied.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/flux.scm"><filename>scheme/flux.scm</filename></ulink>
  at line 602 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/flux.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="interactive-move-window-with-focus">
  <refnamediv>
    <refname>interactive-move-window-with-focus</refname>
    <refpurpose>Interactively move the window which currently has the focus.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(interactive-move-window-with-focus)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Interactively move the window which currently has the focus.
`*move-opaquely-proc*' is used to control whether a rubberband
outline or the window itself is moved.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/flux.scm"><filename>scheme/flux.scm</filename></ulink>
  at line 73 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/flux.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="interactive-move-window-with-pointer">
  <refnamediv>
    <refname>interactive-move-window-with-pointer</refname>
    <refpurpose>Interactively move the window which currently contains the pointer.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(interactive-move-window-with-pointer)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Interactively move the window which currently contains the pointer.
<link linkend="move-opaquely-p"><function>move-opaquely?</function></link> is used to control whether a rubberband
outline or the window itself is moved.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/flux.scm"><filename>scheme/flux.scm</filename></ulink>
  at line 85 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/flux.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="interactive-place">
  <refnamediv>
    <refname>interactive-place</refname>
    <refpurpose>Place WIN interactively.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(interactive-place win #&amp;key (resize #f))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Place WIN interactively.

Firts WIN is moved interactively with a rubber-band style move, then,
if the optional RESIZE argument is provided, it is resized
interactively immediately after it is placed.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm placement)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/placement.scm"><filename>scheme/placement.scm</filename></ulink>
  at line 48 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/placement.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="interactive-placement">
  <refnamediv>
    <refname>interactive-placement</refname>
    <refpurpose>Return a procedure that takes a window and places it interactively.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(interactive-placement #&amp;key (resize #f) (switch #t)
  (return #f))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return a procedure that takes a window and places it interactively.
If the RESIZE argument is true, the resulting procedure will
interactively resize the window immediately after placing it. If
SWITCH is true, the returned procedure will switch to the virtual desk
and viewport of its window argument before placing it. This is the
default. If RETURN is false, the returned procedure will switch back
to the previous desk and viewport after placing the window. The
default is false.

See also the related <link linkend="interactive-place"><function>interactive-place</function></link> procedure which directly
places a window interactively.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm placement)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/placement.scm"><filename>scheme/placement.scm</filename></ulink>
  at line 100 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/placement.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="interactive-procedure-apropos">
  <refnamediv>
    <refname>interactive-procedure-apropos</refname>
    <refpurpose>Returns a list of interactive procedures that match RGX.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(interactive-procedure-apropos rgx)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Returns a list of interactive procedures that match RGX.
This returns a simple list of procedure objects.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/reflection.scm"><filename>scheme/reflection.scm</filename></ulink>
  at line 195 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/reflection.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="interactive-procedure-apropos-with-modules">
  <refnamediv>
    <refname>interactive-procedure-apropos-with-modules</refname>
    <refpurpose>Returns a list of procedures that match RGX and that can take no arguments.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(interactive-procedure-apropos-with-modules rgx)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Returns a list of procedures that match RGX and that can take no arguments.
I.e., they are interactive procedures useful for bindings.
The returned list contains pairs (modulesym . procsym)
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm reflection)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/reflection.scm"><filename>scheme/reflection.scm</filename></ulink>
  at line 183 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/reflection.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="interactive-resize">
  <refnamediv>
    <refname>interactive-resize</refname>
    <refpurpose>Resize WINDOW interactively and possibly opaquely.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(interactive-resize 
		 #&amp;optional (win (get-window #t #f #f))
		 (opaquely? (if win ((scwm-option-get *resize-opaquely-proc*) win))))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Resize WINDOW interactively and possibly opaquely. 
If OPAQUELY? is specified, it is used to determine if the window
should be resized opaquely, or using a rubber-band. If it is not
spcified, <link linkend="interactive-resize"><function>interactive-resize</function></link> calls `*resize-opaquely-proc*' on WIN and
moves opaquely if that returns <literal>#t</literal> and uses a rubber-band if it returns
<literal>#f</literal>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm winops)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/winops.scm"><filename>scheme/winops.scm</filename></ulink>
  at line 259 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/winops.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="interactive-resize-window-with-focus">
  <refnamediv>
    <refname>interactive-resize-window-with-focus</refname>
    <refpurpose>Interactively resize the window which currently has the focus.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(interactive-resize-window-with-focus)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Interactively resize the window which currently has the focus.
`*resize-opaquely-proc*' is used to control whether a rubberband
outline or the window itself is resized.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/flux.scm"><filename>scheme/flux.scm</filename></ulink>
  at line 79 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/flux.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="interactive-resize-window-with-pointer">
  <refnamediv>
    <refname>interactive-resize-window-with-pointer</refname>
    <refpurpose>Interactively resize the window which currently contains the pointer.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(interactive-resize-window-with-pointer)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Interactively resize the window which currently contains the pointer.
<link linkend="resize-opaquely-p"><function>resize-opaquely?</function></link> is used to control whether a rubberband
outline or the window itself is resized.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/flux.scm"><filename>scheme/flux.scm</filename></ulink>
  at line 91 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/flux.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="interactive-set-window-gravity-x">
  <refnamediv>
    <refname>interactive-set-window-gravity!</refname>
    <refpurpose>Permit user to click on an area of a window and anchor that nonant.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(interactive-set-window-gravity!)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Permit user to click on an area of a window and anchor that nonant.
E.g., if the user clicks on the northeast corner of a window, that
window will be set to have northeast gravity so future resizes keep
that corner fixed.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/flux.scm"><filename>scheme/flux.scm</filename></ulink>
  at line 512 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/flux.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="intersection-area">
  <refnamediv>
    <refname>intersection-area</refname>
    <refpurpose>Returns the size of the intersection of two rectangles.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(intersection-area x1 y1 w1 h1 x2 y2 w2 h2)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Returns the size of the intersection of two rectangles.
X1,Y1 and W1 x H1 are the position and size of the first rectangle.
X2,Y2 and W2 x H2 are the position and size of the second rectangle.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm wininfo)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/wininfo.scm"><filename>scheme/wininfo.scm</filename></ulink>
  at line 52 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/wininfo.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="iota">
  <refnamediv>
    <refname>iota</refname>
    <refpurpose>Generate a list of the integers from 0 to N-1 in order.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(iota n)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Generate a list of the integers from 0 to N-1 in order.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm listops)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/listops.scm"><filename>scheme/listops.scm</filename></ulink>
  at line 41 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/listops.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="jump-to-register">
  <refnamediv>
    <refname>jump-to-register</refname>
    <refpurpose>No documentation supplied.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(jump-to-register #&amp;optional (register (get-register-name)))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  No documentation supplied.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm register)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/register.scm"><filename>scheme/register.scm</filename></ulink>
  at line 70 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/register.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="keep-above">
  <refnamediv>
    <refname>keep-above</refname>
    <refpurpose>Keep W1 wholly above W2.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(keep-above w1 w2 #&amp;optional (enable? #f))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Keep W1 wholly above W2.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm simple-constraints)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/simple-constraints.scm"><filename>scheme/simple-constraints.scm</filename></ulink>
  at line 48 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/simple-constraints.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="keep-adjacent-horizontal">
  <refnamediv>
    <refname>keep-adjacent-horizontal</refname>
    <refpurpose>Keep W1's right edge aligned with W2's left edge.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(keep-adjacent-horizontal w1 w2 #&amp;optional (enable? #f))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Keep W1's right edge aligned with W2's left edge.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm simple-constraints)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/simple-constraints.scm"><filename>scheme/simple-constraints.scm</filename></ulink>
  at line 96 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/simple-constraints.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="keep-adjacent-vertical">
  <refnamediv>
    <refname>keep-adjacent-vertical</refname>
    <refpurpose>Keep W1's bottom edge aligned with W2's top edge.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(keep-adjacent-vertical w1 w2 #&amp;optional (enable? #f))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Keep W1's bottom edge aligned with W2's top edge.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm simple-constraints)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/simple-constraints.scm"><filename>scheme/simple-constraints.scm</filename></ulink>
  at line 104 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/simple-constraints.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="keep-at-left-edge">
  <refnamediv>
    <refname>keep-at-left-edge</refname>
    <refpurpose>Keep W's left edge at the left edge of the desktop.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(keep-at-left-edge w #&amp;optional (enable? #f))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Keep W's left edge at the left edge of the desktop.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm simple-constraints)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/simple-constraints.scm"><filename>scheme/simple-constraints.scm</filename></ulink>
  at line 112 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/simple-constraints.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="keep-at-right-edge">
  <refnamediv>
    <refname>keep-at-right-edge</refname>
    <refpurpose>Keep W's right edge at the right edge of the desktop.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(keep-at-right-edge w #&amp;optional (enable? #f))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Keep W's right edge at the right edge of the desktop.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm simple-constraints)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/simple-constraints.scm"><filename>scheme/simple-constraints.scm</filename></ulink>
  at line 126 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/simple-constraints.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="keep-at-top-edge">
  <refnamediv>
    <refname>keep-at-top-edge</refname>
    <refpurpose>Keep W's top edge at the top edge of the desktop.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(keep-at-top-edge w #&amp;optional (enable? #f))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Keep W's top edge at the top edge of the desktop.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm simple-constraints)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/simple-constraints.scm"><filename>scheme/simple-constraints.scm</filename></ulink>
  at line 119 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/simple-constraints.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="keep-bottoms-even">
  <refnamediv>
    <refname>keep-bottoms-even</refname>
    <refpurpose>Keep W1 and W2 aligned at the bottom.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(keep-bottoms-even w1 w2 #&amp;optional (enable? #f))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Keep W1 and W2 aligned at the bottom.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm simple-constraints)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/simple-constraints.scm"><filename>scheme/simple-constraints.scm</filename></ulink>
  at line 24 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/simple-constraints.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="keep-constant-size">
  <refnamediv>
    <refname>keep-constant-size</refname>
    <refpurpose>Keep W's size from changing.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(keep-constant-size w #&amp;optional (enable? #f))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Keep W's size from changing.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm simple-constraints)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/simple-constraints.scm"><filename>scheme/simple-constraints.scm</filename></ulink>
  at line 142 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/simple-constraints.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="keep-constant-width">
  <refnamediv>
    <refname>keep-constant-width</refname>
    <refpurpose>Keep W's width at WIDTH.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(keep-constant-width w width #&amp;optional (enable? #f))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Keep W's width at WIDTH.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm simple-constraints)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/simple-constraints.scm"><filename>scheme/simple-constraints.scm</filename></ulink>
  at line 133 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/simple-constraints.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="keep-full-height">
  <refnamediv>
    <refname>keep-full-height</refname>
    <refpurpose>Keep W1 and W2 sum of heights equal to the display's height.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(keep-full-height w1 w2 #&amp;optional (enable? #f))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Keep W1 and W2 sum of heights equal to the display's height.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm simple-constraints)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/simple-constraints.scm"><filename>scheme/simple-constraints.scm</filename></ulink>
  at line 88 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/simple-constraints.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="keep-full-width">
  <refnamediv>
    <refname>keep-full-width</refname>
    <refpurpose>Keep W1 and W2 sum of widths equal to the display's width.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(keep-full-width w1 w2 #&amp;optional (enable? #f))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Keep W1 and W2 sum of widths equal to the display's width.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm simple-constraints)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/simple-constraints.scm"><filename>scheme/simple-constraints.scm</filename></ulink>
  at line 80 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/simple-constraints.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="keep-left-at-v">
  <refnamediv>
    <refname>keep-left-at-v</refname>
    <refpurpose>Keep W1's left at cl-variable V's pixel value.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(keep-left-at-v w1 v #&amp;optional (enable? #f))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Keep W1's left at cl-variable V's pixel value.
Use <link linkend="cl-set-solver-var"><function>cl-set-solver-var</function></link> to change V.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm simple-constraints)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/simple-constraints.scm"><filename>scheme/simple-constraints.scm</filename></ulink>
  at line 64 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/simple-constraints.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="keep-lefts-even">
  <refnamediv>
    <refname>keep-lefts-even</refname>
    <refpurpose>Keep W1 and W2 aligned at the left.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(keep-lefts-even w1 w2 #&amp;optional (enable? #f))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Keep W1 and W2 aligned at the left.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm simple-constraints)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/simple-constraints.scm"><filename>scheme/simple-constraints.scm</filename></ulink>
  at line 16 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/simple-constraints.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="keep-on-top">
  <refnamediv>
    <refname>keep-on-top</refname>
    <refpurpose>Ensure that WIN is kept on top of all other windows.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(keep-on-top  #&amp;optional win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Ensure that <parameter>win</parameter> is kept on top of all other windows.
Obviously, other windows that are also on-top may obscure <parameter>win</parameter>.
<parameter>win</parameter> defaults to the window context in the usual way if not specified.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/window.c"><filename>scwm/window.c</filename></ulink>
  at line 2997 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="keep-right-at-v">
  <refnamediv>
    <refname>keep-right-at-v</refname>
    <refpurpose>Keep W1's right at cl-variable Vs pixel value.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(keep-right-at-v w1 v #&amp;optional (enable? #f))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Keep W1's right at cl-variable Vs pixel value.
Use <link linkend="cl-set-solver-var"><function>cl-set-solver-var</function></link> to change V.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm simple-constraints)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/simple-constraints.scm"><filename>scheme/simple-constraints.scm</filename></ulink>
  at line 72 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/simple-constraints.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="keep-rights-even">
  <refnamediv>
    <refname>keep-rights-even</refname>
    <refpurpose>Keep W1 and W2 aligned at the right.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(keep-rights-even w1 w2 #&amp;optional (enable? #f))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Keep W1 and W2 aligned at the right.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm simple-constraints)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/simple-constraints.scm"><filename>scheme/simple-constraints.scm</filename></ulink>
  at line 32 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/simple-constraints.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="keep-to-left-of">
  <refnamediv>
    <refname>keep-to-left-of</refname>
    <refpurpose>Keep W1 to the left of W2.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(keep-to-left-of w1 w2 #&amp;optional (enable? #f))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Keep W1 to the left of W2.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm simple-constraints)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/simple-constraints.scm"><filename>scheme/simple-constraints.scm</filename></ulink>
  at line 40 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/simple-constraints.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="keep-top-at-v">
  <refnamediv>
    <refname>keep-top-at-v</refname>
    <refpurpose>Keep W1's top at cl-variable V's pixel value.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(keep-top-at-v w1 v #&amp;optional (enable? #f))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Keep W1's top at cl-variable V's pixel value.
Use <link linkend="cl-set-solver-var"><function>cl-set-solver-var</function></link> to change V.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm simple-constraints)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/simple-constraints.scm"><filename>scheme/simple-constraints.scm</filename></ulink>
  at line 56 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/simple-constraints.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="keep-tops-even">
  <refnamediv>
    <refname>keep-tops-even</refname>
    <refpurpose>Keep W1 and W2 aligned at the top.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(keep-tops-even w1 w2 #&amp;optional (enable? #f))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Keep W1 and W2 aligned at the top.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm simple-constraints)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/simple-constraints.scm"><filename>scheme/simple-constraints.scm</filename></ulink>
  at line 8 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/simple-constraints.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="kept-on-top-p">
  <refnamediv>
    <refname>kept-on-top?</refname>
    <refpurpose>Return <literal>#t</literal> if WIN is an on-top window, <literal>#f</literal> otherwise.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(kept-on-top?  #&amp;optional win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return <literal>#t</literal> if <parameter>win</parameter> is an on-top window, <literal>#f</literal> otherwise.
<parameter>win</parameter> defaults to the window context in the usual way if not
specified.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/window.c"><filename>scwm/window.c</filename></ulink>
  at line 3055 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="key-mouse-moves">
  <refnamediv>
    <refname>key-mouse-moves</refname>
    <refpurpose>Bind four keys to move the mouse in compass directions by PCT-OF-SCREEN.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(key-mouse-moves modifiers pct-of-screen left down up right)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Bind four keys to move the mouse in compass directions by PCT-OF-SCREEN.
MODIFIERS specifies which modifiers must be depressed for the bindings
to be active.
LEFT, DOWN, UP, and RIGHT are the four keysym names to use for each
of the directions.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm key-mover)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/key-mover.scm"><filename>scheme/key-mover.scm</filename></ulink>
  at line 13 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/key-mover.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="key-viewport-moves">
  <refnamediv>
    <refname>key-viewport-moves</refname>
    <refpurpose>Bind four keys to move the viewport in compass directions by PCT-OF-SCREEN.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(key-viewport-moves modifiers pct-of-screen left down up right)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Bind four keys to move the viewport in compass directions by PCT-OF-SCREEN.
MODIFIERS specifies which modifiers must be depressed for the bindings
to be active.
LEFT, DOWN, UP, and RIGHT are the four keysym names to use for each
of the directions.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/key-mover.scm"><filename>scheme/key-mover.scm</filename></ulink>
  at line 28 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/key-mover.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="keycode-to-keysym">
  <refnamediv>
    <refname>keycode->keysym</refname>
    <refpurpose>Return a string containing the X11 keysym for key with code KEYCODE.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(keycode->keysym keycode)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return a string containing the X11 keysym for key with code KEYCODE.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm base)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/base.scm"><filename>scheme/base.scm</filename></ulink>
  at line 761 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/base.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="keymask-to-string">
  <refnamediv>
    <refname>keymask->string</refname>
    <refpurpose>Return a string representing KEYMASK.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(keymask->string keymask)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return a string representing <parameter>keymask</parameter>.
E.g., (keymask->string 4) => "C-". Returns <literal>#f</literal> on an error.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/binding.c"><filename>scwm/binding.c</filename></ulink>
  at line 1613 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/binding.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="keymask-keycode-to-string">
  <refnamediv>
    <refname>keymask-keycode->string</refname>
    <refpurpose>Return a string representing the key press with mask KEYMASK, code KEYCODE.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(keymask-keycode->string keymask keycode)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return a string representing the key press with mask <parameter>keymask</parameter>, code <parameter>keycode</parameter>.
E.g., (keymask-keycode->string 4 44) => "C-j". Returns <literal>#f</literal> on an error.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/binding.c"><filename>scwm/binding.c</filename></ulink>
  at line 1633 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/binding.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="keysym-to-keycode">
  <refnamediv>
    <refname>keysym->keycode</refname>
    <refpurpose>Returns a list of X/11 keycodes that generate the keysym, KEYSYM-NAME.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(keysym->keycode keysym-name)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Returns a list of X/11 keycodes that generate the keysym, <parameter>keysym-name</parameter>.
<parameter>keysym-name</parameter> should be a string.  E.g., "Control_L".  Return <literal>#f</literal> if <parameter>keysym-name</parameter>
is not a valid keysym.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/binding.c"><filename>scwm/binding.c</filename></ulink>
  at line 951 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/binding.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="kill-all-fvwm2-modules">
  <refnamediv>
    <refname>kill-all-fvwm2-modules</refname>
    <refpurpose>No documentation supplied.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(kill-all-fvwm2-modules)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  No documentation supplied.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm fvwm-module)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/fvwm-module.scm"><filename>scheme/fvwm-module.scm</filename></ulink>
  at line 568 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/fvwm-module.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="kill-fvwm2-module">
  <refnamediv>
    <refname>kill-fvwm2-module</refname>
    <refpurpose>No documentation supplied.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(kill-fvwm2-module fmod)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  No documentation supplied.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm fvwm-module)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/fvwm-module.scm"><filename>scheme/fvwm-module.scm</filename></ulink>
  at line 565 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/fvwm-module.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="kill-fvwm2-modules-by-name">
  <refnamediv>
    <refname>kill-fvwm2-modules-by-name</refname>
    <refpurpose>No documentation supplied.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(kill-fvwm2-modules-by-name module-name)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  No documentation supplied.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm fvwm-module)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/fvwm-module.scm"><filename>scheme/fvwm-module.scm</filename></ulink>
  at line 571 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/fvwm-module.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="kwm-emulation-initialize">
  <refnamediv>
    <refname>kwm-emulation-initialize</refname>
    <refpurpose>No documentation supplied.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(kwm-emulation-initialize)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  No documentation supplied.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm kde-hints)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/kde-hints.scm"><filename>scheme/kde-hints.scm</filename></ulink>
  at line 218 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/kde-hints.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="kwm-emulation-reset">
  <refnamediv>
    <refname>kwm-emulation-reset</refname>
    <refpurpose>No documentation supplied.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(kwm-emulation-reset)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  No documentation supplied.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm kde-hints)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/kde-hints.scm"><filename>scheme/kde-hints.scm</filename></ulink>
  at line 256 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/kde-hints.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="kwm-send-window-list">
  <refnamediv>
    <refname>kwm-send-window-list</refname>
    <refpurpose>No documentation supplied.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(kwm-send-window-list)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  No documentation supplied.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm kde-hints)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/kde-hints.scm"><filename>scheme/kde-hints.scm</filename></ulink>
  at line 190 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/kde-hints.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="list-all-windows">
  <refnamediv>
    <refname>list-all-windows</refname>
    <refpurpose>Return a list of all of the top-level window objects.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(list-all-windows)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return a list of all of the top-level window objects.
The list is in a semi-arbitrary order that is convenient for the sake
of circulation.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/window.c"><filename>scwm/window.c</filename></ulink>
  at line 2912 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="list-focus-order">
  <refnamediv>
    <refname>list-focus-order</refname>
    <refpurpose>Return a list of all the top-level window objects in focus order.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(list-focus-order)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return a list of all the top-level window objects in focus order.
The order is from most recently focussed to least recently focussed.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/window.c"><filename>scwm/window.c</filename></ulink>
  at line 2966 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="list-index">
  <refnamediv>
    <refname>list-index</refname>
    <refpurpose>Return the integer position of OBJ in list L.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(list-index l obj)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the integer position of OBJ in list L.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm listops)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/listops.scm"><filename>scheme/listops.scm</filename></ulink>
  at line 145 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/listops.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="list-stacking-order">
  <refnamediv>
    <refname>list-stacking-order</refname>
    <refpurpose>Return a list of all non-iconified the top-level window objects, from top to bottom.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(list-stacking-order)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return a list of all non-iconified the top-level window objects, from top to bottom.
The order is the stacking order of the windows. The first element is
the topmost window, the last is the bottommost
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/window.c"><filename>scwm/window.c</filename></ulink>
  at line 2932 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="list-windows">
  <refnamediv>
    <refname>list-windows</refname>
    <refpurpose>Return the list of windows matching ONLY and not matching EXCEPT.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(list-windows #&amp;key (only '()) (except '())
			      (by-stacking #f)
			      (by-focus #f)
			      (reverse #f))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the list of windows matching ONLY and not matching EXCEPT.
The windows are returned their stacking order (top first) if
BY-STACKING is <literal>#t</literal> (and that option omits iconified windows).
They are returned sorted by their last focussed
time (most recently focussed first) if BY-FOCUS is <literal>#t</literal>. If REVERSE is
true, they are returned in the reverse of the usual order. ONLY and
EXCEPT each are procedures which take a single window argument and
returns <literal>#t</literal> if the window should be included (for ONLY) or 
excluded (for EXCEPT), or <literal>#f</literal> otherwise.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm winlist)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/winlist.scm"><filename>scheme/winlist.scm</filename></ulink>
  at line 77 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/winlist.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="list-windows-above">
  <refnamediv>
    <refname>list-windows-above</refname>
    <refpurpose>List the windows above w from bottom to top.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(list-windows-above w #&amp;key (only ()) (except()))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  List the windows above w from bottom to top.
Returns a list in the reverse of the stacking order of the windows
above W, in other words, from the one immediately above, to the topmost
window; the ONLY and EXCEPT keyword arguments operate as is usual for
procedures that deal with the window list.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm stacking)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/stacking.scm"><filename>scheme/stacking.scm</filename></ulink>
  at line 30 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/stacking.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="list-windows-below">
  <refnamediv>
    <refname>list-windows-below</refname>
    <refpurpose>List the windows below w from top to bottom.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(list-windows-below w #&amp;key (only ()) (except()))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  List the windows below w from top to bottom.
Returns a list in the stacking order of the windows below in, in other
words, from the one immediately below, to the bottommost window; the
ONLY and EXCEPT keyword arguments operate as is usual for procedures
that deal with the window list.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm stacking)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/stacking.scm"><filename>scheme/stacking.scm</filename></ulink>
  at line 42 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/stacking.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="list-without-elem">
  <refnamediv>
    <refname>list-without-elem</refname>
    <refpurpose>Return the list L with element E deleted.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(list-without-elem l e)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the list L with element E deleted.
Uses <link linkend="eq-p"><function>eq?</function></link> for testing equality with E.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm listops)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/listops.scm"><filename>scheme/listops.scm</filename></ulink>
  at line 227 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/listops.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="load-cached-theme">
  <refnamediv>
    <refname>load-cached-theme</refname>
    <refpurpose>No documentation supplied.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(load-cached-theme fname #&amp;optional force?)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  No documentation supplied.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm themes)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/themes.scm"><filename>scheme/themes.scm</filename></ulink>
  at line 104 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/themes.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="load-imlib-image">
  <refnamediv>
    <refname>load-imlib-image</refname>
    <refpurpose>Load an image file using imlib identified by the pathname FULL-PATH.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(load-imlib-image full-path)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Load an image file using imlib identified by the pathname <parameter>full-path</parameter>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/image.c"><filename>scwm/image.c</filename></ulink>
  at line 374 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/image.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="load-preferences">
  <refnamediv>
    <refname>load-preferences</refname>
    <refpurpose>Load FILENAME to restore the Scwm preferences.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(load-preferences #&amp;optional 
				 (filename (string-append (getenv "HOME") "/.scwm-options")))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Load FILENAME to restore the Scwm preferences.
Since the options file is just a bunch of S-expressions,
this currently just <link linkend="load"><function>load</function></link>s the file to evaluate it.
Returns <literal>#t</literal> iff the load was successful, false otherwise.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/preferences.scm"><filename>scheme/preferences.scm</filename></ulink>
  at line 527 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/preferences.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="load-theme">
  <refnamediv>
    <refname>load-theme</refname>
    <refpurpose>Returns a theme FNAME which is loaded from `*theme-path*'.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(load-theme fname)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Returns a theme FNAME which is loaded from `*theme-path*'.
The theme should be either a directory, or a (possibly gzipped)
tar file with extension .tar, .tar.gz, or .tgz.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm themes)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/themes.scm"><filename>scheme/themes.scm</filename></ulink>
  at line 79 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/themes.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="load-theme-image">
  <refnamediv>
    <refname>load-theme-image</refname>
    <refpurpose>No documentation supplied.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(load-theme-image fname)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  No documentation supplied.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm theme-impl)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/theme-impl.scm"><filename>scheme/theme-impl.scm</filename></ulink>
  at line 56 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/theme-impl.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="load-xbm">
  <refnamediv>
    <refname>load-xbm</refname>
    <refpurpose>Load an X Bitmap file identified by the pathname FULL-PATH.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(load-xbm full-path)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Load an X Bitmap file identified by the pathname <parameter>full-path</parameter>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/image.c"><filename>scwm/image.c</filename></ulink>
  at line 273 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/image.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="load-xpm">
  <refnamediv>
    <refname>load-xpm</refname>
    <refpurpose>Load an X Pixmap file identified by the pathname FULL-PATH.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(load-xpm full-path)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Load an X Pixmap file identified by the pathname <parameter>full-path</parameter>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/image.c"><filename>scwm/image.c</filename></ulink>
  at line 307 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/image.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="lookup-key">
  <refnamediv>
    <refname>lookup-key</refname>
    <refpurpose>Return the procedures bound to KEY within the CONTEXTS.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(lookup-key contexts key)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the procedures bound to <parameter>key</parameter> within the <parameter>contexts</parameter>.
<parameter>key</parameter> is a modifiers and keysym string.
<parameter>contexts</parameter> is a list of event-contexts (e.g., '(left-button-1 frame-sides))
The return value is a list: (press-proc release-proc), or <literal>#f</literal>
if there is no matching binding.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/binding.c"><filename>scwm/binding.c</filename></ulink>
  at line 868 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/binding.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="lookup-mouse">
  <refnamediv>
    <refname>lookup-mouse</refname>
    <refpurpose>Return the procedure bound to mouse BUTTON within the CONTEXTS.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(lookup-mouse contexts button)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the procedure bound to mouse <parameter>button</parameter> within the <parameter>contexts</parameter>.
<parameter>button</parameter> is a string that may contain modifier prefixes, e.g.,
"C-S-M-1".
<parameter>contexts</parameter> is a list of event-contexts (e.g., '(button1 sidebar))
<parameter>button</parameter> is a string or integer giving the mouse button number and any
modifiers as a prefix.
The return values is the procedure object, or <literal>#f</literal> if there is no
matching binding.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/binding.c"><filename>scwm/binding.c</filename></ulink>
  at line 1215 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/binding.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="lookup-procedure-bindings">
  <refnamediv>
    <refname>lookup-procedure-bindings</refname>
    <refpurpose>Return any bindings that invoke PROC.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(lookup-procedure-bindings  #&amp;optional proc)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return any bindings that invoke <parameter>proc</parameter>.
If <parameter>proc</parameter> is omitted, return all bindings.
The return value is a list of binding descriptions.  Each binding
description is a list: (mouse? contexts modmask keycode-or-butnum press-proc
release-or-immediate-proc).  mouse? is a boolean, contexts is a list of
symbols.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/binding.c"><filename>scwm/binding.c</filename></ulink>
  at line 1273 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/binding.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="lower-by-one">
  <refnamediv>
    <refname>lower-by-one</refname>
    <refpurpose>Lower window W below the next window down that overlaps it.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(lower-by-one #&amp;optional (w (get-window)))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Lower window W below the next window down that overlaps it.
W defaults to the window context in the usual way.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm stacking)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/stacking.scm"><filename>scheme/stacking.scm</filename></ulink>
  at line 69 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/stacking.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="lower-group">
  <refnamediv>
    <refname>lower-group</refname>
    <refpurpose>Raise members of GROUP above all other windows.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(lower-group #&amp;optional (group (get-window)))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Raise members of GROUP above all other windows.
Keeps the relative stacking order of the members intact.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm group)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/group.scm"><filename>scheme/group.scm</filename></ulink>
  at line 89 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/group.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="lower-window">
  <refnamediv>
    <refname>lower-window</refname>
    <refpurpose>Lower WIN to the bottom of the window stack.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(lower-window  #&amp;optional win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Lower <parameter>win</parameter> to the bottom of the window stack. <parameter>win</parameter> defaults to
the window context in the usual way if not specified.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/window.c"><filename>scwm/window.c</filename></ulink>
  at line 1830 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="lower-window-below">
  <refnamediv>
    <refname>lower-window-below</refname>
    <refpurpose>Restack window W immediately below W2.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(lower-window-below w w2)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Restack window W immediately below W2.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm stacking)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/stacking.scm"><filename>scheme/stacking.scm</filename></ulink>
  at line 58 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/stacking.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="make-color">
  <refnamediv>
    <refname>make-color</refname>
    <refpurpose>Return the color object corresponding to the X color specifier CNAME.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(make-color cname)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the color object corresponding to the X color specifier <parameter>cname</parameter>.
If <parameter>cname</parameter> is not a valid X color name, or cannot be
allocated, an error results.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/color.c"><filename>scwm/color.c</filename></ulink>
  at line 236 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/color.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="make-conditional-style">
  <refnamediv>
    <refname>make-conditional-style</refname>
    <refpurpose>No documentation supplied.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(make-conditional-style condition . args)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  No documentation supplied.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm style)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/style.scm"><filename>scheme/style.scm</filename></ulink>
  at line 119 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/style.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="make-context-menu">
  <refnamediv>
    <refname>make-context-menu</refname>
    <refpurpose>Create a menu of actions applicable to the filename in the X selection.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(make-context-menu)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Create a menu of actions applicable to the filename in the X selection.
The selection must contain a single full pathname.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/std-menus.scm"><filename>scheme/std-menus.scm</filename></ulink>
  at line 153 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/std-menus.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="make-decor">
  <refnamediv>
    <refname>make-decor</refname>
    <refpurpose>Create a new decor object.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(make-decor  #&amp;optional name)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Create a new decor object. <parameter>name</parameter> optionally provides a string
that is used to name the decor, and is displayed when the decor is
printed.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/decor.c"><filename>scwm/decor.c</filename></ulink>
  at line 210 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/decor.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="make-face">
  <refnamediv>
    <refname>make-face</refname>
    <refpurpose>Create a new face.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(make-face flags specs)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Create a new face.
<parameter>flags</parameter> is a list of face flags (see concept) and
<parameter>specs</parameter> is a list of face specifiers.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/face.c"><filename>scwm/face.c</filename></ulink>
  at line 443 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/face.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="make-file-menu">
  <refnamediv>
    <refname>make-file-menu</refname>
    <refpurpose>Return a menu-object for viewing or editing FILE.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(make-file-menu file . rest)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return a menu-object for viewing or editing FILE.
REST is a list of other menu-items to include in the returned menu.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/flux.scm"><filename>scheme/flux.scm</filename></ulink>
  at line 146 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/flux.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="make-font">
  <refnamediv>
    <refname>make-font</refname>
    <refpurpose>Return the font object for the X font specifier FNAME.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(make-font fname)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the font object for the X font specifier <parameter>fname</parameter>.
If <parameter>fname</parameter> is not a valid X font name, or cannot be
allocated, an error results.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/font.c"><filename>scwm/font.c</filename></ulink>
  at line 97 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/font.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="make-hosts-menu">
  <refnamediv>
    <refname>make-hosts-menu</refname>
    <refpurpose>Create a telnet menu.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(make-hosts-menu host-list #&amp;optional (user (user-name)))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Create a telnet menu.
To use this, add the following to the menu of your choice:
  (menuitem "telnet" #:action (make-hosts-menu '("host1" "host2" ...)))
An optional USER argument specifies the user to telnet as.
The element of the list of hosts can be a host (in which case telnet is
used) or a cons of (host . command).
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/std-menus.scm"><filename>scheme/std-menus.scm</filename></ulink>
  at line 105 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/std-menus.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="make-image">
  <refnamediv>
    <refname>make-image</refname>
    <refpurpose>Loads an image from the file NAME.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(make-image name)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Loads an image from the file <parameter>name</parameter>.
To load the image, the appropriate image loaders will be invoked as
needed. If <parameter>name</parameter> starts with "/", "./" or "../", it is treated as a
fully qualified pathname; otherwise, the image path is searched for an
appropriate file.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/image.c"><filename>scwm/image.c</filename></ulink>
  at line 568 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/image.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="make-list">
  <refnamediv>
    <refname>make-list</refname>
    <refpurpose>Return a list containing N elements equal to the optional second argument.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(make-list n . init)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return a list containing N elements equal to the optional second argument.
If INIT is empty indicating the optional argument was not provided,
use the empty list as the element.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm listops)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/listops.scm"><filename>scheme/listops.scm</filename></ulink>
  at line 157 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/listops.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="make-menu">
  <refnamediv>
    <refname>make-menu</refname>
    <refpurpose>Make and return a menu object from the given arguments.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(make-menu list-of-menuitems bg-color text-color stipple-color font #&amp;optional picture-side side-picture-align side-bg-color picture-bg extra-options)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Make and return a menu object from the given arguments.
<parameter>list-of-menuitems</parameter> is a non-empty scheme list of menu items -- see <link linkend="make-menuitem"><function>make-menuitem</function></link>;
<parameter>bg-color</parameter>, <parameter>text-color</parameter> and <parameter>stipple-color</parameter> are color objects or symbols;
<parameter>font</parameter> is a font object or symbol;
<parameter>picture-side</parameter> is an image object to draw on the left side of the menu;
<parameter>side-picture-align</parameter> is one of 'top, 'center, or 'bottom;
<parameter>side-bg-color</parameter> is a color object or symbol;
<parameter>picture-bg</parameter> is an image object;
<parameter>extra-options</parameter> can be anything understood by the menu-look
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/menu.c"><filename>scwm/menu.c</filename></ulink>
  at line 260 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/menu.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="make-menuitem">
  <refnamediv>
    <refname>make-menuitem</refname>
    <refpurpose>Return a newly created menuitem object using the given arguments.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(make-menuitem label action #&amp;optional extra-label picture-above picture-left hover-action unhover-action hotkey-prefs submenu?)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return a newly created menuitem object using the given arguments.
<parameter>label</parameter> is a string giving the main text label of the menu item;
<parameter>action</parameter> is a procedure or menu object -- if it is a procedure, it gets
invoked when the menuitem is selected, if it is a menu object, that
menu is attached as a submenu from the enclosing menu that the created
menuitem is put in.  You can also force <parameter>action</parameter> to be treated as a
submenu by setting <parameter>submenu?</parameter> to <literal>#t</literal>.
<parameter>extra-label</parameter> is extra text describing the menu item -- often this
contains a shortcut key description, or some other descriptive text.
<parameter>picture-above</parameter> and <parameter>picture-left</parameter> are picture objects which correspond to
images to display within the bounding region of the menuitem.
<parameter>hover-action</parameter> and <parameter>unhover-action</parameter> are procedures to be invoked when the
mouse pointer hovers over the item and is moved away after hovering
over the item, respectively.
<parameter>hotkey-prefs</parameter> is a string listing preferred alphanumeric shortcut-keys
for the given menu-item; the menu creation routine uses these as hints
for assigning shortcut keys to the various menuitems.
For a higher-level interface to this function, see <link linkend="menuitem"><function>menuitem</function></link>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/menuitem.c"><filename>scwm/menuitem.c</filename></ulink>
  at line 127 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/menuitem.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="make-menuitems-from-menu-information-list">
  <refnamediv>
    <refname>make-menuitems-from-menu-information-list</refname>
    <refpurpose>Return a list of menu-items from a list of detailed programs list.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(make-menuitems-from-menu-information-list menu-info-list)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return a list of menu-items from a list of detailed programs list.
The format is subject to change.  See sample.scwmrc/gjb.scwmrc for
example usage.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/flux.scm"><filename>scheme/flux.scm</filename></ulink>
  at line 220 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/flux.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="make-message-window">
  <refnamediv>
    <refname>make-message-window</refname>
    <refpurpose>Returns a newly created message window object with string MESSAGE.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(make-message-window message)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Returns a newly created message window object with string <parameter>message</parameter>.
<parameter>message</parameter> is the initial string for the message window.
Uses defaults from the ScreenInfo struct for the other values.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/message-window.c"><filename>scwm/message-window.c</filename></ulink>
  at line 258 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/message-window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="make-message-window-clone-default">
  <refnamediv>
    <refname>make-message-window-clone-default</refname>
    <refpurpose>Return a new message window that has the default style.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(make-message-window-clone-default str)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return a new message window that has the default style.
This is done by cloning the style (see <link linkend="message-window-style"><function>message-window-style</function></link>) of
the variable <link linkend="default-message-window"><function>default-message-window</function></link>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm message-window)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/message-window.scm"><filename>scheme/message-window.scm</filename></ulink>
  at line 248 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/message-window.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="make-message-window-win-copy">
  <refnamediv>
    <refname>make-message-window-win-copy</refname>
    <refpurpose>Return a message window with a background that is a copy of the image in WIN.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(make-message-window-win-copy #&amp;optional (win 'root-window))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return a message window with a background that is a copy of the image in WIN.
The message-window will have no text and no relief, and be the same size
as WIN.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm message-window)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/message-window.scm"><filename>scheme/message-window.scm</filename></ulink>
  at line 280 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/message-window.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="make-message-window-with-image">
  <refnamediv>
    <refname>make-message-window-with-image</refname>
    <refpurpose>Return a new message window with IMG as a background, sized appropriately.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(make-message-window-with-image img #&amp;optional (shaped? #f))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return a new message window with IMG as a background, sized appropriately.
Initially the message window is centered in the display.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm message-window)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/message-window.scm"><filename>scheme/message-window.scm</filename></ulink>
  at line 239 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/message-window.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="make-relief-color">
  <refnamediv>
    <refname>make-relief-color</refname>
    <refpurpose>Convert a color into a new color appropriate for a relief.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(make-relief-color color factor)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Convert a color into a new color appropriate for a relief.
Multiplies the luminosity and saturation of <parameter>color</parameter> by the
positive floating point number <parameter>factor</parameter>. Using a <parameter>factor</parameter> smaller than 1
will result in a dimmer color, suitable for use as a darker
relief. Using a factor greater than 1 will result in a brighter color
which is suitable for use as a highlight.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/color.c"><filename>scwm/color.c</filename></ulink>
  at line 486 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/color.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="make-reversed-color">
  <refnamediv>
    <refname>make-reversed-color</refname>
    <refpurpose>Return a new color that is opposite COLOR.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(make-reversed-color color)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return a new color that is opposite <parameter>color</parameter>.
Note that the returned color will not necessarily contrast with
<parameter>color</parameter>; (make-reversed-color "gray50") is almost indistinguishable
from "gray50".
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/color.c"><filename>scwm/color.c</filename></ulink>
  at line 506 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/color.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="make-rhosts-menu">
  <refnamediv>
    <refname>make-rhosts-menu</refname>
    <refpurpose>Returns a menu which lets you rlogin to each host mentioned in your .</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(make-rhosts-menu)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Returns a menu which lets you rlogin to each host mentioned in your .rhosts
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/flux.scm"><filename>scheme/flux.scm</filename></ulink>
  at line 286 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/flux.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="make-small-window-ops-menu">
  <refnamediv>
    <refname>make-small-window-ops-menu</refname>
    <refpurpose>No documentation supplied.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(make-small-window-ops-menu w)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  No documentation supplied.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/flux.scm"><filename>scheme/flux.scm</filename></ulink>
  at line 611 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/flux.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="make-string-usable-for-resource-key">
  <refnamediv>
    <refname>make-string-usable-for-resource-key</refname>
    <refpurpose>Return a converted string from STRING that can be used as an X resource key.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(make-string-usable-for-resource-key string)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return a converted string from STRING that can be used as an X resource key.
The returned string will have all non-alphanumeric characters replaced with
underscores, so that the resulting string can be used as a key for
<link linkend="X-resource-get"><function>X-resource-get</function></link> and <link linkend="X-resource-put"><function>X-resource-put</function></link>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm stringops)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/stringops.scm"><filename>scheme/stringops.scm</filename></ulink>
  at line 11 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/stringops.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="make-style">
  <refnamediv>
    <refname>make-style</refname>
    <refpurpose>No documentation supplied.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(make-style . args)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  No documentation supplied.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm style)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/style.scm"><filename>scheme/style.scm</filename></ulink>
  at line 59 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/style.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="make-theme">
  <refnamediv>
    <refname>make-theme</refname>
    <refpurpose>Creates a theme object with the given NAME, WINDOW-STYLE, and BACKGROUND-STYLE.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(make-theme name #&amp;key (window-style (make-style #t))
			   (background-style (lambda () ())))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Creates a theme object with the given NAME, WINDOW-STYLE, and BACKGROUND-STYLE.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm theme-impl)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/theme-impl.scm"><filename>scheme/theme-impl.scm</filename></ulink>
  at line 62 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/theme-impl.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="make-toggling-winop">
  <refnamediv>
    <refname>make-toggling-winop</refname>
    <refpurpose>Returns a procedure which takes a window WIN and toggles a property of it.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>((make-toggling-winop pred neg pos) 
		 #&amp;optional (win (get-window)))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Returns a procedure which takes a window WIN and toggles a property of it.
PRED, NEG, and POS should be functions which take a window and
check whether the property holds for the window, reset the property
on the window, and set the property on the window, respectively.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm winops)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/winops.scm"><filename>scheme/winops.scm</filename></ulink>
  at line 35 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/winops.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="make-ui-constraint">
  <refnamediv>
    <refname>make-ui-constraint</refname>
    <refpurpose>UI-CONSTRAINT-CLASS specified the type of constraint to be created.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(make-ui-constraint ui-constraint-class arg-list #&amp;key (visible? #t))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  UI-CONSTRAINT-CLASS specified the type of constraint to be created.
WIN-LIST specifies the windows to be constrained.  Returns a new constraint
object that is NOT enabled.  errors if UI-CONSTRAINT-CLASS is not valid.
Returned objects are #(obid-ui-constraint CLASS CN ENABLED? LIST-OF-WINDOWS OPTS BUT DHOOKS)
The OPTS param is a spot for optional data to be specified by the ui-constraint-class 
constructor.  If data returns from that constructor in list form, the first element of
the list is assumed to be the CN and the cdr is stuck in OPTS.
BUT may contain a reference to the gtk button for the constraint instance in the 
toggle menu if that feature is in use.
DHOOKS is a list of hook procedures that should be called when the enable is changed on this
constraint.  These hook functions may only be added after an instance is created.
SIDE-EFFECT: adds new instance object to the global list.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm ui-constraints)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/ui-constraints.scm"><filename>scheme/ui-constraints.scm</filename></ulink>
  at line 277 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/ui-constraints.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="make-ui-constraint-class">
  <refnamediv>
    <refname>make-ui-constraint-class</refname>
    <refpurpose>Creates a new ui-constraint-class object.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(make-ui-constraint-class name description num-windows ctr ui-ctr draw-proc satisfied-proc pixmap-name menuname-proc)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Creates a new ui-constraint-class object.
CTR takes a set of arguments and installs the appropriate constraints in the solver.  A number of
windows should be included in those arguments, falling somewhere in the range of NUM-WINDOWS.  
NUM-WINDOWS is a list of '(min-win max-win) where the values specify the minimum and maximum number
of windows which may be constrained.  Max-win may optionally be specified as a non-number (preferably
as <literal>#t</literal>), in which case the constraint is taken to be able to constraint an infinite number of windows.
SATISFIED-PROC is a procedure that takes a single argument, the cn, and tells if it is satisfied
UI-CTR should return the arguments (as a list) for CTR to build the constraint with.  UI-CTR should
return <literal>#f</literal> if the user cancels the construction or fails to follow the interface correctly.  PIXMAP-NAME
is the name of the pixmap to associate with this constraint-class in the user interface.
MENUNAME-PROC is a proc that takes a UI-CONSTRAINT as an arg and returns the name that should be used
for the constraint in the toggle menu.  
This routine returns a new constraint class object based on the parameters.
SIDE-EFFECT: addes new class obj to the global class list.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm ui-constraints)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/ui-constraints.scm"><filename>scheme/ui-constraints.scm</filename></ulink>
  at line 80 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/ui-constraints.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="make-ui-constraint-interactively">
  <refnamediv>
    <refname>make-ui-constraint-interactively</refname>
    <refpurpose>Uses the UI constructor of the constraint class to prompt the user to</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(make-ui-constraint-interactively ui-constraint-class)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Uses the UI constructor of the constraint class to prompt the user to
specify options for the constraint.  errors if UI-CONSTRAINT-CLASS is 
not a ui-constraint-class.  Calls make-ui-constraint (see above).
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm ui-constraints)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/ui-constraints.scm"><filename>scheme/ui-constraints.scm</filename></ulink>
  at line 313 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/ui-constraints.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="make-window-group-menu">
  <refnamediv>
    <refname>make-window-group-menu</refname>
    <refpurpose>No documentation supplied.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(make-window-group-menu w)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  No documentation supplied.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/flux.scm"><filename>scheme/flux.scm</filename></ulink>
  at line 664 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/flux.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="make-window-list-menu">
  <refnamediv>
    <refname>make-window-list-menu</refname>
    <refpurpose>Popup a window list menu and permit a selection to be made.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(make-window-list-menu #&amp;key (only '()) (except '())
				       (by-stacking #f)
				       (by-focus #f)
				       (by-resource #f)
				       (reverse #f)
				       (proc window-list-proc)
				       (flash-window-proc flash-window-on)
				       (unflash-window-proc unflash-window)
				       (hover-delay 0)
				       (popup-delay #f)
				       (show-geometry #f)
				       (show-last-focus-time #f)
				       (ignore-winlist-skip #f)
				       (show-mini-icon #t)
				       (enumerate-hotkeys #t))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Popup a window list menu and permit a selection to be made.
ONLY and EXCEPT are procedures that control which windows will appear
in the list -- see <link linkend="list-windows"><function>list-windows</function></link> for details. BY-STACKING, BY-FOCUS
and REVERSE control the order in which windows appear. See
<link linkend="list-windows"><function>list-windows</function></link> for more on these as well.

PROC is the procedure which will be called on the selected window. 

FLASH-WINDOW-PROC and UNFLASH-WINDOW-PROC are set as the hover-action
and unhover-action (respectively) of the items in the menu.  (See
<link linkend="menuitem"><function>menuitem</function></link>.)

If SHOW-GEOMETRY is <literal>#t</literal>, the geometries of the windows will be listed
in each menuitem.  

If SHOW-LAST-FOCUS-TIME is <literal>#t</literal>, the last focus time of the windows will be listed
in each menuitem.

If SHOW-MINI-ICON is <literal>#t</literal>, the mini-icon of the windows will be
displayed with each menuitem.

If WARP-TO-FIRST is <literal>#t</literal>, the mouse pointer will be warped to the first
menuitem (see <link linkend="popup-menu"><function>popup-menu</function></link>).  

If BY-RESOURCE is <literal>#t</literal>, the window list is split into sublists by the
window resource name (this is also the behaviour if too many windows
exist to fit vertically on the menu).

If ENUMERATE-HOT-KEYS is <literal>#t</literal>, then add alpha-numeric hot keys for the window-list.
For the hotkey, the characters 1 through 9 are used first, followed by
the letters a through z.  Currently this is turned off if BY-RESOURCE is <literal>#t</literal>.

  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm winlist)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/winlist.scm"><filename>scheme/winlist.scm</filename></ulink>
  at line 115 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/winlist.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="make-window-style-menu">
  <refnamediv>
    <refname>make-window-style-menu</refname>
    <refpurpose>Offer a choice to style the window, like named windows, or a whole class.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(make-window-style-menu #&amp;optional (win (get-window)))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Offer a choice to style the window, like named windows, or a whole class.
WIN is the window to style and defaults to the window-context.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm stylist)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/stylist.scm"><filename>scheme/stylist.scm</filename></ulink>
  at line 167 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/stylist.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="make-wmconfig-menu">
  <refnamediv>
    <refname>make-wmconfig-menu</refname>
    <refpurpose>Return a menu object for the window-manager configuration menu.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(make-wmconfig-menu 
		 #&amp;optional (wmconfig-title default-wmconfig-title)
		 (wmconfig-dir default-wmconfig-dir))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return a menu object for the window-manager configuration menu.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/wmconfig-menu.scm"><filename>scheme/wmconfig-menu.scm</filename></ulink>
  at line 95 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/wmconfig-menu.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="make-xlock-menu">
  <refnamediv>
    <refname>make-xlock-menu</refname>
    <refpurpose>Create an xlock menu.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(make-xlock-menu #&amp;optional (lock? #f))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Create an xlock menu.
To use this, add the following to the menu of your choice:
   (menuitem "Screensaver" #:action (make-xlock-menu <literal>#f</literal>))
or (menuitem "Lock Screen" #:action (make-xlock-menu <literal>#t</literal>))
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/std-menus.scm"><filename>scheme/std-menus.scm</filename></ulink>
  at line 91 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/std-menus.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="map-in-order">
  <refnamediv>
    <refname>map-in-order</refname>
    <refpurpose>Process FIRST and the lists comprising REST as <link linkend="map"><function>map</function></link> would.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(map-in-order proc first . rest)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Process FIRST and the lists comprising REST as <link linkend="map"><function>map</function></link> would.
However, PROC is guaranteed to be called on these elements in the
order in which they appear in the lists.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm listops)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/listops.scm"><filename>scheme/listops.scm</filename></ulink>
  at line 173 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/listops.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="marshal-fvwm2-config-info">
  <refnamediv>
    <refname>marshal-fvwm2-config-info</refname>
    <refpurpose>Constructs a fvwm2 BroadcastInfo module packet.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(marshal-fvwm2-config-info win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Constructs a fvwm2 BroadcastInfo module packet.
The return value is the contents of a BroadcastInfo fvwm2
module packet for <parameter>win</parameter> as a Scheme string.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/module-interface.c"><filename>scwm/module-interface.c</filename></ulink>
  at line 131 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/module-interface.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="marshal-fvwm2-iconify-info">
  <refnamediv>
    <refname>marshal-fvwm2-iconify-info</refname>
    <refpurpose>Constructs a fvwm2 "M_ICONIFY" module packet.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(marshal-fvwm2-iconify-info win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Constructs a fvwm2 "M_ICONIFY" module packet.
The return value is the contents of an "M_ICONIFY" fvwm
module packet for <parameter>win</parameter> as a Scheme string.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/module-interface.c"><filename>scwm/module-interface.c</filename></ulink>
  at line 174 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/module-interface.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="mask-to-keycodes">
  <refnamediv>
    <refname>mask->keycodes</refname>
    <refpurpose>No documentation supplied.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(mask->keycodes mask)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  No documentation supplied.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm quote)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/quote.scm"><filename>scheme/quote.scm</filename></ulink>
  at line 54 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/quote.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="maximize">
  <refnamediv>
    <refname>maximize</refname>
    <refpurpose>Maximize WIN to new pixel width NW and new pixel height NH.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(maximize nw nh #&amp;optional (win (get-window)))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Maximize WIN to new pixel width NW and new pixel height NH.
If NW or NH is 0, that dimension is not changed.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm winops)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/winops.scm"><filename>scheme/winops.scm</filename></ulink>
  at line 94 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/winops.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="maximized-p">
  <refnamediv>
    <refname>maximized?</refname>
    <refpurpose>Return <literal>#t</literal> if WIN is maximized, <literal>#f</literal> otherwise.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(maximized? #&amp;optional (win (get-window)))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return <literal>#t</literal> if WIN is maximized, <literal>#f</literal> otherwise.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm winops)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/winops.scm"><filename>scheme/winops.scm</filename></ulink>
  at line 141 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/winops.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="maybe-make-color">
  <refnamediv>
    <refname>maybe-make-color</refname>
    <refpurpose>Try to make OBJ into a color and return that color object.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(maybe-make-color obj)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Try to make OBJ into a color and return that color object.
Returns <literal>#f</literal> if OBJ is not a color object or a string.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm base)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/base.scm"><filename>scheme/base.scm</filename></ulink>
  at line 60 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/base.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="menu">
  <refnamediv>
    <refname>menu</refname>
    <refpurpose>Return a menu object with the given attributes.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(menu list-of-menuitems #&amp;key
		      (image-side 'menu-side-image)
		      (image-align 'top)
		      (color-bg-image-side 'menu-side-bg-color)
		      (image-bg 'menu-bg-image)
		      (color-text 'menu-text-color)
		      (color-bg 'menu-bg-color)
		      (color-stipple 'menu-stipple-color)
		      (hl-color-fg 'menu-hl-fg-color)
		      (hl-color-bg 'menu-hl-bg-color)
		      (hl-relief? #t)
		      (font 'menu-font)
		      (look 'menu-look)
		      popup-delay hover-delay
		      (extra #f))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return a menu object with the given attributes.
LIST-OF-MENUITEMS is a list of menuitem objects (each created with
<link linkend="make-menuitem"><function>make-menuitem</function></link> or <link linkend="menuitem"><function>menuitem</function></link>).  IMAGE-SIDE is an image object to be
displayed along the left edge of the menu.  IMAGE-ALIGN determines
whether to align that image to the 'top, 'center or 'bottom of the
menu.  COLOR-BG-IMAGE-SIDE is the background color for that image
object.  COLOR-TEXT is a color object or string for the foreground
text color of menu items.  COLOR-BG is a color object or string for
the background color for the menu and menu items.  COLOR-STIPPLE is a
color object for stippled ("grayed") menu items.  FONT is a font
object for the font of the menu items.  EXTRA is an extra argument
specific to the menu look used for this menu.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm base)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/base.scm"><filename>scheme/base.scm</filename></ulink>
  at line 467 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/base.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="menu-global-theme">
  <refnamediv>
    <refname>menu-global-theme</refname>
    <refpurpose>No documentation supplied.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(menu-global-theme #&amp;optional force?)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  No documentation supplied.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/std-menus.scm"><filename>scheme/std-menus.scm</filename></ulink>
  at line 185 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/std-menus.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="menu-highlight-colors">
  <refnamediv>
    <refname>menu-highlight-colors</refname>
    <refpurpose>Return list text-color, bg-color, the highlight colors for MENU.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(menu-highlight-colors menu)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return list text-color, bg-color, the highlight colors for <parameter>menu</parameter>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/menu.c"><filename>scwm/menu.c</filename></ulink>
  at line 484 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/menu.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="menu-highlight-factor">
  <refnamediv>
    <refname>menu-highlight-factor</refname>
    <refpurpose>Return the current menu highlight factor.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(menu-highlight-factor)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the current menu highlight factor.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/color.c"><filename>scwm/color.c</filename></ulink>
  at line 639 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/color.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="menu-highlight-relief-p">
  <refnamediv>
    <refname>menu-highlight-relief?</refname>
    <refpurpose>Return <literal>#t</literal> if MENU's selected item is relieved, <literal>#f</literal> otherwise.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(menu-highlight-relief? menu)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return <literal>#t</literal> if <parameter>menu</parameter>'s selected item is relieved, <literal>#f</literal> otherwise.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/menu.c"><filename>scwm/menu.c</filename></ulink>
  at line 495 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/menu.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="menu-hotkeys-activate-item-p">
  <refnamediv>
    <refname>menu-hotkeys-activate-item?</refname>
    <refpurpose>Return <literal>#t</literal> if hotkeys invoke item, <literal>#f</literal> if they just select the item.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(menu-hotkeys-activate-item?)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return <literal>#t</literal> if hotkeys invoke item, <literal>#f</literal> if they just select the item.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/menu.c"><filename>scwm/menu.c</filename></ulink>
  at line 1628 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/menu.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="menu-hover-delay">
  <refnamediv>
    <refname>menu-hover-delay</refname>
    <refpurpose>Return MENU's hover action delay.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(menu-hover-delay menu)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return <parameter>menu</parameter>'s hover action delay.
See <link linkend="set-menu-hover-delay-x"><function>set-menu-hover-delay!</function></link>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/menu.c"><filename>scwm/menu.c</filename></ulink>
  at line 383 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/menu.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="menu-look-p">
  <refnamediv>
    <refname>menu-look?</refname>
    <refpurpose>Return <literal>#t</literal> if OBJ is a menulook object, <literal>#f</literal> otherwise.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(menu-look? obj)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return <literal>#t</literal> if <parameter>obj</parameter> is a menulook object, <literal>#f</literal> otherwise.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/menulook.c"><filename>scwm/menulook.c</filename></ulink>
  at line 51 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/menulook.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="menu-max-fold-lines">
  <refnamediv>
    <refname>menu-max-fold-lines</refname>
    <refpurpose>Return an approximation of the number of menuitems that will fit vertically on screen.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(menu-max-fold-lines)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return an approximation of the number of menuitems that will fit vertically on screen.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm menus-extras)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/menus-extras.scm"><filename>scheme/menus-extras.scm</filename></ulink>
  at line 31 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/menus-extras.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="menu-popup-delay">
  <refnamediv>
    <refname>menu-popup-delay</refname>
    <refpurpose>Return MENU's submenu popup delay.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(menu-popup-delay menu)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return <parameter>menu</parameter>'s submenu popup delay.
See <link linkend="set-menu-popup-delay-x"><function>set-menu-popup-delay!</function></link>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/menu.c"><filename>scwm/menu.c</filename></ulink>
  at line 358 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/menu.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="menu-prefs">
  <refnamediv>
    <refname>menu-prefs</refname>
    <refpurpose>Generate the <link linkend="Preferences"><function>Preferences</function></link> menu.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(menu-prefs . opts)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Generate the <link linkend="Preferences"><function>Preferences</function></link> menu.
All the arguments are passed directly to the <link linkend="menu"><function>menu</function></link> function.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/prefs-menu.scm"><filename>scheme/prefs-menu.scm</filename></ulink>
  at line 211 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/prefs-menu.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="menu-properties">
  <refnamediv>
    <refname>menu-properties</refname>
    <refpurpose>Returns the a list of the menu properties of MENU, a menu object.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(menu-properties menu)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Returns the a list of the menu properties of <parameter>menu</parameter>, a menu object.
The properties returned are:
'(menu-title menu-items side-image side-image-align side-bg-color bg-color
text-color stipple-color
image-bg font extra-options used-shortcut-keys popup-delay hover-delay)
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/menu.c"><filename>scwm/menu.c</filename></ulink>
  at line 222 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/menu.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="menu-shadow-factor">
  <refnamediv>
    <refname>menu-shadow-factor</refname>
    <refpurpose>Return the current menu shadow factor.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(menu-shadow-factor)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the current menu shadow factor.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/color.c"><filename>scwm/color.c</filename></ulink>
  at line 662 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/color.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="menu-style">
  <refnamediv>
    <refname>menu-style</refname>
    <refpurpose>Set various properites for the menus.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(menu-style #&amp;key
		     (fg #f) (foreground #f)
		     (bg #f) (background #f)
		     (hl-fg #f) (hl-foreground #f)
		     (hl-bg #f) (hl-background #f)
		     (bg-image #f)
		     (stipple #f) (font #f)
		     (title-font #f)
		     (look #f)
		     (side-image #f) (side-bg 'unset))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Set various properites for the menus.
See <link linkend="make-menu"><function>make-menu</function></link> for options on creation of individual menus.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm base)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/base.scm"><filename>scheme/base.scm</filename></ulink>
  at line 352 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/base.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="menu-title">
  <refnamediv>
    <refname>menu-title</refname>
    <refpurpose>Return a menuitem object that is a title.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(menu-title label . rest)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return a menuitem object that is a title.
All arguments that <link linkend="menuitem"><function>menuitem</function></link> takes are accepted as usual,
except the font defaults to `*menu-title-font*' instead of
`*menu-font*'.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm base)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/base.scm"><filename>scheme/base.scm</filename></ulink>
  at line 413 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/base.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="menu-window-theme">
  <refnamediv>
    <refname>menu-window-theme</refname>
    <refpurpose>No documentation supplied.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(menu-window-theme #&amp;optional force?)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  No documentation supplied.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/std-menus.scm"><filename>scheme/std-menus.scm</filename></ulink>
  at line 174 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/std-menus.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="menu-p">
  <refnamediv>
    <refname>menu?</refname>
    <refpurpose>Return <literal>#t</literal> if and only if OBJ is a menu object.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(menu? obj)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return <literal>#t</literal> if and only if <parameter>obj</parameter> is a menu object.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/menu.c"><filename>scwm/menu.c</filename></ulink>
  at line 159 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/menu.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="menuitem">
  <refnamediv>
    <refname>menuitem</refname>
    <refpurpose>Return a menuitem object with the given attributes.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(menuitem label #&amp;key image-above image-left
			  (fg #f) (bg #f) (font #f)
			  extra-label action submenu hover-action unhover-action
			  hotkey-prefs)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return a menuitem object with the given attributes.
LABEL is a string for the name on the item.
IMAGE-ABOVE is an image object to show above the label.
IMAGE-LEFT is an image object to show to the left of the label.
EXTRA_LABEL is a second label shown on the item.
ACTION is a menu object or a procedure; if it is a menu object,
the item will popup ACTION as a sub-menu, if it is a procedure,
the procedure will be invoked when the item is selected.
HOVER-ACTION is an procedure to be invoked when the item is
highlighted but not invoked for a moment; UNHOVER-ACTION is
a procedure to be invoked after the HOVER-ACTION is invoked
when the item is unhighlighted.  HOTKEY-PREFS is a string listing
the characters which are appropriate shortcut-keys for the item;
the first not-yet-used-in-this-menu character will be used for
the shortcut key for the menu item.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm base)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/base.scm"><filename>scheme/base.scm</filename></ulink>
  at line 420 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/base.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="menuitem-colors">
  <refnamediv>
    <refname>menuitem-colors</refname>
    <refpurpose>Returns a list of the fg and bg colors for MENUITEM.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(menuitem-colors menuitem)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Returns a list of the fg and bg colors for <parameter>menuitem</parameter>.
Will return <literal>#f</literal> for either/both components if <parameter>menuitem</parameter> inherits its color from
the menu in which it is embedded.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/menuitem.c"><filename>scwm/menuitem.c</filename></ulink>
  at line 225 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/menuitem.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="menuitem-font">
  <refnamediv>
    <refname>menuitem-font</refname>
    <refpurpose>Returns the font of MENUITEM.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(menuitem-font menuitem)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Returns the font of <parameter>menuitem</parameter>.
Returns <literal>#f</literal> if <parameter>menuitem</parameter> inherits its font
from the menu in which it is embedded.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/menuitem.c"><filename>scwm/menuitem.c</filename></ulink>
  at line 255 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/menuitem.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="menuitem-properties">
  <refnamediv>
    <refname>menuitem-properties</refname>
    <refpurpose>Return a list of the properties of the given MENU-ITEM.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(menuitem-properties menu-item)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return a list of the properties of the given <parameter>menu-item</parameter>.
<parameter>menu-item</parameter> is a menuitem object, created by <link linkend="make-menuitem"><function>make-menuitem</function></link>.  The
returned list contains the following, in this order:
'(label action extra-label picture-above picture-left hover-action
unhover-action hotkey-preferences)
Note that this is the same as the arguments to the <link linkend="make-menuitem"><function>make-menuitem</function></link>
primitive.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/menuitem.c"><filename>scwm/menuitem.c</filename></ulink>
  at line 101 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/menuitem.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="menuitem-p">
  <refnamediv>
    <refname>menuitem?</refname>
    <refpurpose>Return <literal>#t</literal> if and only if OBJ is a menu item object.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(menuitem? obj)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return <literal>#t</literal> if and only if <parameter>obj</parameter> is a menu item object.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/menuitem.c"><filename>scwm/menuitem.c</filename></ulink>
  at line 91 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/menuitem.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="message">
  <refnamediv>
    <refname>message</refname>
    <refpurpose>Display the string arguments STR in a message window.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(message . str)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Display the string arguments STR in a message window.
Requires the program <link linkend="xmessage"><function>xmessage</function></link>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/flux.scm"><filename>scheme/flux.scm</filename></ulink>
  at line 160 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/flux.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="message-window-colors">
  <refnamediv>
    <refname>message-window-colors</refname>
    <refpurpose>Returns the colors that the message window MWN is displayed with.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(message-window-colors mwn)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Returns the colors that the message window <parameter>mwn</parameter> is displayed with.
These are returned in a list of the form (fg_color,bg_color).
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/message-window.c"><filename>scwm/message-window.c</filename></ulink>
  at line 659 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/message-window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="message-window-copy-style-x">
  <refnamediv>
    <refname>message-window-copy-style!</refname>
    <refpurpose>Copy the visual style of MSGWIN-SOURCE to the style for MSGWIN.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(message-window-copy-style! msgwin msgwin-source)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Copy the visual style of MSGWIN-SOURCE to the style for MSGWIN.
Returns a list of the font, fg-color, bg-color of msgwin-source
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm message-window)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/message-window.scm"><filename>scheme/message-window.scm</filename></ulink>
  at line 256 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/message-window.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="message-window-font">
  <refnamediv>
    <refname>message-window-font</refname>
    <refpurpose>Returns the font that the message window MWN uses for displaying text.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(message-window-font mwn)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Returns the font that the message window <parameter>mwn</parameter> uses for displaying text.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/message-window.c"><filename>scwm/message-window.c</filename></ulink>
  at line 637 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/message-window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="message-window-hide-x">
  <refnamediv>
    <refname>message-window-hide!</refname>
    <refpurpose>Hide the message window MWN.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(message-window-hide! mwn)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Hide the message window <parameter>mwn</parameter>.
See also <link linkend="message-window-show"><function>message-window-show</function></link>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/message-window.c"><filename>scwm/message-window.c</filename></ulink>
  at line 551 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/message-window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="message-window-id">
  <refnamediv>
    <refname>message-window-id</refname>
    <refpurpose>Returns the X11 id of message window MWN.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(message-window-id mwn)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Returns the X11 id of message window <parameter>mwn</parameter>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/message-window.c"><filename>scwm/message-window.c</filename></ulink>
  at line 648 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/message-window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="message-window-image">
  <refnamediv>
    <refname>message-window-image</refname>
    <refpurpose>Returns the image that message window MWN displays.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(message-window-image mwn)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Returns the image that message window <parameter>mwn</parameter> displays.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/message-window.c"><filename>scwm/message-window.c</filename></ulink>
  at line 591 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/message-window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="message-window-message">
  <refnamediv>
    <refname>message-window-message</refname>
    <refpurpose>Returns the message that message window MWN displays.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(message-window-message mwn)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Returns the message that message window <parameter>mwn</parameter> displays.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/message-window.c"><filename>scwm/message-window.c</filename></ulink>
  at line 580 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/message-window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="message-window-options">
  <refnamediv>
    <refname>message-window-options</refname>
    <refpurpose>Allow specification of message-window behavior for standard actions.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(message-window-options action #&amp;key enable
					follow-window 
					position gravity offset 
					proportional-offset)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Allow specification of message-window behavior for standard actions.

ACTION specifies the action for which this behavior should be
used. Currently, 'interactive-move and 'interactive-resize are the
only useful values. 

ENABLE is a boolean value inidicating whether to use a message window
for that action at all.

GRAVITY indicates which point on the message window is used as the
control point for placing it. See `gravity->alignmnents' for a list of
valid gravity specs.

If FOLLOW-WINDOW is true, the message window will track the window on
which an action is being performed, if applicable. In this case,
POSITION is ignored; OFFSET is taken as a list of the X and Y offsets
from the window's top left corner, and PROPORTIONAL-OFFSET is taken as
a list of factors to multiply by the window's size. For instance, an
OFFSET of (0 0) and a PROPORTIONAL-OFFSET of (0.5 0.5) will place the
message window at the center of of the window being operated on.

However, if FOLLOW-WINDOW is false, or there is no applicable window,
POSITION is interpreted as a list of x, y coordinates at which to
place the message window.

These options are cumulative for repeated calls to
<link linkend="message-window-options"><function>message-window-options</function></link> for the same action.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm message-window)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/message-window.scm"><filename>scheme/message-window.scm</filename></ulink>
  at line 49 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/message-window.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="message-window-position">
  <refnamediv>
    <refname>message-window-position</refname>
    <refpurpose>Returns the position that message window MWN is/will be displayed at.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(message-window-position mwn)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Returns the position that message window <parameter>mwn</parameter> is/will be displayed at.
This is returned as a four element list: (x y x-align y-align).
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/message-window.c"><filename>scwm/message-window.c</filename></ulink>
  at line 602 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/message-window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="message-window-relief-p">
  <refnamediv>
    <refname>message-window-relief?</refname>
    <refpurpose>Returns the relief setting for the message window MWN.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(message-window-relief? mwn)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Returns the relief setting for the message window <parameter>mwn</parameter>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/message-window.c"><filename>scwm/message-window.c</filename></ulink>
  at line 671 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/message-window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="message-window-set-colors-x">
  <refnamediv>
    <refname>message-window-set-colors!</refname>
    <refpurpose>Set the fore- and background colors to be used for the message window MWN.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(message-window-set-colors! mwn fg-color bg-color)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Set the fore- and background colors to be used for the message window <parameter>mwn</parameter>.
The foreground color will be <parameter>fg-color</parameter> and the background color will be <parameter>bg-color</parameter>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/message-window.c"><filename>scwm/message-window.c</filename></ulink>
  at line 415 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/message-window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="message-window-set-font-x">
  <refnamediv>
    <refname>message-window-set-font!</refname>
    <refpurpose>Set the font to be used for the message window MWN.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(message-window-set-font! mwn fnt)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Set the font to be used for the message window <parameter>mwn</parameter>.
The font will be <parameter>fnt</parameter>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/message-window.c"><filename>scwm/message-window.c</filename></ulink>
  at line 391 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/message-window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="message-window-set-image-x">
  <refnamediv>
    <refname>message-window-set-image!</refname>
    <refpurpose>Changes the background image for the message window MWN to IMAGE.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(message-window-set-image! mwn image #&amp;optional fg-color bg-color shaped?)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Changes the background image for the message window <parameter>mwn</parameter> to <parameter>image</parameter>.
<parameter>fg-color</parameter>, <parameter>bg-color</parameter> are the colors for the image, <parameter>shaped?</parameter> is whether it
should use a shaped message window.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/message-window.c"><filename>scwm/message-window.c</filename></ulink>
  at line 351 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/message-window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="message-window-set-message-x">
  <refnamediv>
    <refname>message-window-set-message!</refname>
    <refpurpose>Changes the message displayed by the message window MWN.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(message-window-set-message! mwn message)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Changes the message displayed by the message window <parameter>mwn</parameter>.
The message will be <parameter>message</parameter>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/message-window.c"><filename>scwm/message-window.c</filename></ulink>
  at line 330 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/message-window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="message-window-set-position-x">
  <refnamediv>
    <refname>message-window-set-position!</refname>
    <refpurpose>Set the position to be used for the message window MWN.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(message-window-set-position! mwn x y #&amp;optional x-align y-align)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Set the position to be used for the message window <parameter>mwn</parameter>.
<parameter>x</parameter> and <parameter>y</parameter> specify the position of the control point of the window,
while <parameter>x-align</parameter> and <parameter>y-align</parameter> specify a fraction of the width and
height of the message window to offset it from the specified position.
<parameter>x-align</parameter> and <parameter>y-align</parameter> should each be in the range [-1,0].  E.g.,
If <parameter>x-align</parameter> and <parameter>y-align</parameter> are both -0.5, the window will be
centered at viewport pixel position <parameter>x</parameter>, <parameter>y</parameter>.  Any of the parameters
excep <parameter>mwn</parameter> can be <literal>#f</literal> to mean not to change the existing value.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/message-window.c"><filename>scwm/message-window.c</filename></ulink>
  at line 454 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/message-window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="message-window-set-relief-x">
  <refnamediv>
    <refname>message-window-set-relief!</refname>
    <refpurpose>Sets the relief for the window MWN.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(message-window-set-relief! mwn draw-relief?)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Sets the relief for the window <parameter>mwn</parameter>.
Relief will be drawn if and only if <parameter>draw-relief?</parameter> is <literal>#t</literal>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/message-window.c"><filename>scwm/message-window.c</filename></ulink>
  at line 506 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/message-window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="message-window-set-size-x">
  <refnamediv>
    <refname>message-window-set-size!</refname>
    <refpurpose>Set the size of message window MWN to WIDTH pixels by HEIGHT pixels.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(message-window-set-size! mwn width height)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Set the size of message window <parameter>mwn</parameter> to <parameter>width</parameter> pixels by <parameter>height</parameter> pixels.
If <parameter>width</parameter> or <parameter>height</parameter> is <literal>#f</literal>, that direction is automatically sized
based on the message content. This procedure is especially useful when a message window
is used to display an image.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/message-window.c"><filename>scwm/message-window.c</filename></ulink>
  at line 481 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/message-window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="message-window-show-x">
  <refnamediv>
    <refname>message-window-show!</refname>
    <refpurpose>Displays the message window MWN on the screen.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(message-window-show! mwn)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Displays the message window <parameter>mwn</parameter> on the screen.
Be sure to keep the displayed message window somewhere
do that you can call <link linkend="message-window-hide-x"><function>message-window-hide!</function></link> (otherwise
the window will not ever disappear).
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/message-window.c"><filename>scwm/message-window.c</filename></ulink>
  at line 523 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/message-window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="message-window-size">
  <refnamediv>
    <refname>message-window-size</refname>
    <refpurpose>Returns the size of message window MWN in pixels.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(message-window-size mwn)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Returns the size of message window <parameter>mwn</parameter> in pixels.
Returns as a two element list: (width height).
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/message-window.c"><filename>scwm/message-window.c</filename></ulink>
  at line 618 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/message-window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="message-window-style">
  <refnamediv>
    <refname>message-window-style</refname>
    <refpurpose>Set visual style of MSGWIN.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(message-window-style msgwin #&amp;key (font #f) (fg #f) (bg #f))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Set visual style of MSGWIN.
FONT specifies the font, FG the foreground color, and BG the
background color.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm message-window)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/message-window.scm"><filename>scheme/message-window.scm</filename></ulink>
  at line 231 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/message-window.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="message-window-visible-p">
  <refnamediv>
    <refname>message-window-visible?</refname>
    <refpurpose>Return <literal>#t</literal> if the message window MWN is visible, <literal>#f</literal> otherwise.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(message-window-visible? mwn)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return <literal>#t</literal> if the message window <parameter>mwn</parameter> is visible, <literal>#f</literal> otherwise.
See also <link linkend="message-window-show"><function>message-window-show</function></link>, <link linkend="message-window-hide"><function>message-window-hide</function></link>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/message-window.c"><filename>scwm/message-window.c</filename></ulink>
  at line 567 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/message-window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="message-window-p">
  <refnamediv>
    <refname>message-window?</refname>
    <refpurpose>Returns <literal>#t</literal> if MWN is a msgwindow object, otherwise <literal>#f</literal>.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(message-window? mwn)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Returns <literal>#t</literal> if <parameter>mwn</parameter> is a msgwindow object, otherwise <literal>#f</literal>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/message-window.c"><filename>scwm/message-window.c</filename></ulink>
  at line 92 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/message-window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="mod-desk-size-x">
  <refnamediv>
    <refname>mod-desk-size!</refname>
    <refpurpose>Modify the current desktop size by the given parameter.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(mod-desk-size! dx dy)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Modify the current desktop size by the given parameter.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm prefs-menu)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/prefs-menu.scm"><filename>scheme/prefs-menu.scm</filename></ulink>
  at line 69 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/prefs-menu.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="mod-mask-alt">
  <refnamediv>
    <refname>mod-mask-alt</refname>
    <refpurpose>Return the bit-mask for the Alt modifier key, or <literal>#f</literal>.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(mod-mask-alt)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the bit-mask for the Alt modifier key, or <literal>#f</literal>.
Returns <literal>#f</literal> if and only if there is no key bound to act as Alt, otherwise
returns a power of two corresponding to the bit-mask of the modifier
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/binding.c"><filename>scwm/binding.c</filename></ulink>
  at line 1423 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/binding.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="mod-mask-control">
  <refnamediv>
    <refname>mod-mask-control</refname>
    <refpurpose>Return the bit-mask for the Control modifier key, or <literal>#f</literal>.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(mod-mask-control)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the bit-mask for the Control modifier key, or <literal>#f</literal>.
Returns <literal>#f</literal> if and only if there is no key bound to act as Control, otherwise
returns a power of two corresponding to the bit-mask of the modifier
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/binding.c"><filename>scwm/binding.c</filename></ulink>
  at line 1407 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/binding.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="mod-mask-hyper">
  <refnamediv>
    <refname>mod-mask-hyper</refname>
    <refpurpose>Return the bit-mask for the Hyper modifier key, or <literal>#f</literal>.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(mod-mask-hyper)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the bit-mask for the Hyper modifier key, or <literal>#f</literal>.
Returns <literal>#f</literal> if and only if there is no key bound to act as Hyper, otherwise
returns a power of two corresponding to the bit-mask of the modifier
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/binding.c"><filename>scwm/binding.c</filename></ulink>
  at line 1431 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/binding.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="mod-mask-meta">
  <refnamediv>
    <refname>mod-mask-meta</refname>
    <refpurpose>Return the bit-mask for the Meta modifier key, or <literal>#f</literal>.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(mod-mask-meta)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the bit-mask for the Meta modifier key, or <literal>#f</literal>.
Returns <literal>#f</literal> if and only if there is no key bound to act as Meta, otherwise
returns a power of two corresponding to the bit-mask of the modifier
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/binding.c"><filename>scwm/binding.c</filename></ulink>
  at line 1415 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/binding.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="mod-mask-numlock">
  <refnamediv>
    <refname>mod-mask-numlock</refname>
    <refpurpose>Return the bit-mask for the NumLock modifier key, or <literal>#f</literal>.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(mod-mask-numlock)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the bit-mask for the NumLock modifier key, or <literal>#f</literal>.
Returns <literal>#f</literal> if and only if there is no key bound to act as NumLock, otherwise
returns a power of two corresponding to the bit-mask of the modifier
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/binding.c"><filename>scwm/binding.c</filename></ulink>
  at line 1449 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/binding.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="mod-mask-scrolllock">
  <refnamediv>
    <refname>mod-mask-scrolllock</refname>
    <refpurpose>Return the bit-mask for the ScrollLock modifier key, or <literal>#f</literal>.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(mod-mask-scrolllock)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the bit-mask for the ScrollLock modifier key, or <literal>#f</literal>.
Returns <literal>#f</literal> if and only if there is no key bound to act as ScrollLock, otherwise
returns a power of two corresponding to the bit-mask of the modifier
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/binding.c"><filename>scwm/binding.c</filename></ulink>
  at line 1458 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/binding.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="mod-mask-shift">
  <refnamediv>
    <refname>mod-mask-shift</refname>
    <refpurpose>Return the bit-mask for the Shift modifier key, or <literal>#f</literal>.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(mod-mask-shift)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the bit-mask for the Shift modifier key, or <literal>#f</literal>.
Returns <literal>#f</literal> if and only if there is no key bound to act as Shift, otherwise
returns a power of two corresponding to the bit-mask of the modifier
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/binding.c"><filename>scwm/binding.c</filename></ulink>
  at line 1399 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/binding.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="mod-mask-super">
  <refnamediv>
    <refname>mod-mask-super</refname>
    <refpurpose>Return the bit-mask for the Super modifier key, or <literal>#f</literal>.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(mod-mask-super)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the bit-mask for the Super modifier key, or <literal>#f</literal>.
Returns <literal>#f</literal> if and only if there is no key bound to act as Super, otherwise
returns a power of two corresponding to the bit-mask of the modifier
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/binding.c"><filename>scwm/binding.c</filename></ulink>
  at line 1440 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/binding.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="module-and-proc-names-to-proc">
  <refnamediv>
    <refname>module-and-proc-names->proc</refname>
    <refpurpose>Return the procedure named PROC-NAME from module named MODULE-NAME.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(module-and-proc-names->proc module-name proc-name)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the procedure named PROC-NAME from module named MODULE-NAME.
PROC-NAME and MODULE-NAME are both strings.  Note that module name
must be a full name such as "app scwm base".
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/prompt-proc.scm"><filename>scheme/prompt-proc.scm</filename></ulink>
  at line 245 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/prompt-proc.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="module-event-name-from-number">
  <refnamediv>
    <refname>module-event-name-from-number</refname>
    <refpurpose>Return the string module event name for event number NUM.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(module-event-name-from-number num)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the string module event name for event number NUM.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/module-types.scm"><filename>scheme/module-types.scm</filename></ulink>
  at line 64 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/module-types.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="mouse-event-type">
  <refnamediv>
    <refname>mouse-event-type</refname>
    <refpurpose>Return a symbol corresponding to the type of the most recent mouse event.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(mouse-event-type)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return a symbol corresponding to the type of the most recent mouse event.
Return value is one of 'motion, 'click, 'one-and-a-half-clicks, 'double-click.
You can <link linkend="case"><function>case</function></link> on this symbol in a procedure bound to a mouse event
to determine, e.g., whether the user single clicked or double clicked.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/binding.c"><filename>scwm/binding.c</filename></ulink>
  at line 1379 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/binding.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="mouse-focus-click-raises-p">
  <refnamediv>
    <refname>mouse-focus-click-raises?</refname>
    <refpurpose>Returns a boolean value indicating whether a mouse-focus-click will raise the window.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(mouse-focus-click-raises?)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Returns a boolean value indicating whether a mouse-focus-click will raise the window.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/miscprocs.c"><filename>scwm/miscprocs.c</filename></ulink>
  at line 384 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/miscprocs.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="move-group">
  <refnamediv>
    <refname>move-group</refname>
    <refpurpose>Move GROUP to virtual coordinates X, Y.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(move-group x y #&amp;optional (group (get-window)))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Move GROUP to virtual coordinates X, Y.
Move the window GROUP represents to X, Y, and keep the other windows in GROUP
in the same relative positions to this window.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm group)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/group.scm"><filename>scheme/group.scm</filename></ulink>
  at line 102 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/group.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="move-group-relative">
  <refnamediv>
    <refname>move-group-relative</refname>
    <refpurpose>Move all members of GROUP by DX, DY pixels.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(move-group-relative dx dy #&amp;optional (group (get-window)))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Move all members of GROUP by DX, DY pixels.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm group)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/group.scm"><filename>scheme/group.scm</filename></ulink>
  at line 97 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/group.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="move-group-to-desk">
  <refnamediv>
    <refname>move-group-to-desk</refname>
    <refpurpose>Move all members of GROUP to DESK.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(move-group-to-desk desk #&amp;optional (group (get-window)))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Move all members of GROUP to DESK.
See <link linkend="move-window-to-desk"><function>move-window-to-desk</function></link>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm group)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/group.scm"><filename>scheme/group.scm</filename></ulink>
  at line 109 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/group.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="move-inside-aligned-viewport">
  <refnamediv>
    <refname>move-inside-aligned-viewport</refname>
    <refpurpose>Ensure that WIN is entirely inside the XX, YY viewport if possible.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(move-inside-aligned-viewport win xx yy)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Ensure that WIN is entirely inside the XX, YY viewport if possible.
XX and YY are given in units of the display size.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm virtual)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/virtual.scm"><filename>scheme/virtual.scm</filename></ulink>
  at line 122 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/virtual.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="move-inside-current-viewport">
  <refnamediv>
    <refname>move-inside-current-viewport</refname>
    <refpurpose>Ensure that WIN is entirely inside the current viewport, if possible.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(move-inside-current-viewport win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Ensure that WIN is entirely inside the current viewport, if possible.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm virtual)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/virtual.scm"><filename>scheme/virtual.scm</filename></ulink>
  at line 127 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/virtual.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="move-inside-own-viewport">
  <refnamediv>
    <refname>move-inside-own-viewport</refname>
    <refpurpose>Ensure that WIN is entirely inside the closest viewport to its center.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(move-inside-own-viewport win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Ensure that WIN is entirely inside the closest viewport to its center.
The viewport selected will be an integral multiple of the desk size.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm virtual)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/virtual.scm"><filename>scheme/virtual.scm</filename></ulink>
  at line 131 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/virtual.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="move-inside-viewport">
  <refnamediv>
    <refname>move-inside-viewport</refname>
    <refpurpose>Ensure that WIN is entirely inside the X, Y viewport if possible.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(move-inside-viewport win x y)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Ensure that WIN is entirely inside the X, Y viewport if possible.
X and Y are given in pixels.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm virtual)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/virtual.scm"><filename>scheme/virtual.scm</filename></ulink>
  at line 110 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/virtual.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="move-nonsticky-windows-relative">
  <refnamediv>
    <refname>move-nonsticky-windows-relative</refname>
    <refpurpose>Move all windows right X, down Y pixels.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(move-nonsticky-windows-relative x y)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Move all windows right X, down Y pixels.
See `move-window-relative.'
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/flux.scm"><filename>scheme/flux.scm</filename></ulink>
  at line 414 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/flux.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="move-pointer">
  <refnamediv>
    <refname>move-pointer</refname>
    <refpurpose>Move the X11 pointer X pixels to the right, and Y pixels down.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(move-pointer x y)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Move the X11 pointer X pixels to the right, and Y pixels down.
If X is negative, moves to the left.  If Y is negative moves up.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm base)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/base.scm"><filename>scheme/base.scm</filename></ulink>
  at line 261 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/base.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="move-pointer-to">
  <refnamediv>
    <refname>move-pointer-to</refname>
    <refpurpose>Move the mouse pointer to viewport coordinates SX, SY.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(move-pointer-to sx sy)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Move the mouse pointer to viewport coordinates <parameter>sx</parameter>, <parameter>sy</parameter>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/miscprocs.c"><filename>scwm/miscprocs.c</filename></ulink>
  at line 240 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/miscprocs.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="move-to">
  <refnamediv>
    <refname>move-to</refname>
    <refpurpose>Move WIN to viewport position X, Y.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(move-to x y 
			#&amp;optional (win (get-window)))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Move WIN to viewport position X, Y.
If X or Y is <literal>#f</literal>, then do not move along that axis (use existing
value for that coordinate).
See <link linkend="move-window"><function>move-window</function></link> if you wish to move a window to a virtual position.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm base)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/base.scm"><filename>scheme/base.scm</filename></ulink>
  at line 269 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/base.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="move-to-viewport">
  <refnamediv>
    <refname>move-to-viewport</refname>
    <refpurpose>Move to the viewport numbered (XX,YY).</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(move-to-viewport xx yy)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Move to the viewport numbered (XX,YY).
The (0,0) viewport is the starting viewport.  XX and YY are
full display-size increments (e.g., (1,0) is the viewport
just to the right of the home (0,0) viewport).
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm virtual)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/virtual.scm"><filename>scheme/virtual.scm</filename></ulink>
  at line 146 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/virtual.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="move-viewport">
  <refnamediv>
    <refname>move-viewport</refname>
    <refpurpose>Move the viewport onto the virtual desktop relatively.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(move-viewport x y)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Move the viewport onto the virtual desktop relatively.
Moves X pixels horizontally, to the right if positive, to the left if
negative, and Y pixels vertically, down if positive, up if negative.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm base)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/base.scm"><filename>scheme/base.scm</filename></ulink>
  at line 336 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/base.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="move-window">
  <refnamediv>
    <refname>move-window</refname>
    <refpurpose>Move WIN to virtual coordinates X, Y.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(move-window x y #&amp;optional win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Move <parameter>win</parameter> to virtual coordinates <parameter>x</parameter>, <parameter>y</parameter>.
If <parameter>x</parameter> is <literal>#f</literal>, then <parameter>x</parameter> defaults to the current <parameter>x</parameter> position of <parameter>win</parameter>.
If <parameter>y</parameter> is <literal>#f</literal>, then <parameter>y</parameter> defaults to the current <parameter>y</parameter> position of <parameter>win</parameter>.
<parameter>win</parameter> defaults to the window context in the usual way if not
specified.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/window.c"><filename>scwm/window.c</filename></ulink>
  at line 2319 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="move-window-relative">
  <refnamediv>
    <refname>move-window-relative</refname>
    <refpurpose>Move WIN X, Y pixels from where it is currently.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(move-window-relative x y #&amp;optional (win (get-window)))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Move WIN X, Y pixels from where it is currently.
Positive X moves right, negative moves left.
Positive Y moves down, negative moves up.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm base)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/base.scm"><filename>scheme/base.scm</filename></ulink>
  at line 292 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/base.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="move-window-to-desk">
  <refnamediv>
    <refname>move-window-to-desk</refname>
    <refpurpose>Move WIN to DESK.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(move-window-to-desk desk #&amp;optional win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Move <parameter>win</parameter> to <parameter>desk</parameter>. <parameter>desk</parameter> is an integer desk identifier. <parameter>win</parameter>
defaults to the window context in the usual way if not specified.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/window.c"><filename>scwm/window.c</filename></ulink>
  at line 2491 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="move-window-to-viewport">
  <refnamediv>
    <refname>move-window-to-viewport</refname>
    <refpurpose>Move WIN to the viewport numbered (XX,YY).</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(move-window-to-viewport xx yy #&amp;optional (win (get-window)))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Move WIN to the viewport numbered (XX,YY).
The (0,0) viewport is the starting viewport.  XX and YY are
full display-size increments (e.g., (1,0) is the viewport
just to the right of the home (0,0) viewport).  Uses 
<link linkend="window-position-in-viewport"><function>window-position-in-viewport</function></link> to select the position within
the viewport.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm virtual)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/virtual.scm"><filename>scheme/virtual.scm</filename></ulink>
  at line 101 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/virtual.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="ms-to-usec">
  <refnamediv>
    <refname>ms->usec</refname>
    <refpurpose>Convert MS milliseconds into an equivalent number of microseconds.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(ms->usec ms)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Convert MS milliseconds into an equivalent number of microseconds.
Especially useful for add-hook! and other timing related procedures
that take microseconds.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm time-convert)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/time-convert.scm"><filename>scheme/time-convert.scm</filename></ulink>
  at line 30 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/time-convert.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="mwm-decorations-to-string">
  <refnamediv>
    <refname>mwm-decorations->string</refname>
    <refpurpose>Converts the MWM decoration flags into a readable form.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(mwm-decorations->string decor)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Converts the MWM decoration flags into a readable form.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm xprop-extras)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/xprop-extras.scm"><filename>scheme/xprop-extras.scm</filename></ulink>
  at line 149 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/xprop-extras.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="mwm-functions-to-string">
  <refnamediv>
    <refname>mwm-functions->string</refname>
    <refpurpose>Converts the MWM function flags into a readable form.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(mwm-functions->string func)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Converts the MWM function flags into a readable form.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm xprop-extras)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/xprop-extras.scm"><filename>scheme/xprop-extras.scm</filename></ulink>
  at line 128 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/xprop-extras.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="nearest-aligned-viewport">
  <refnamediv>
    <refname>nearest-aligned-viewport</refname>
    <refpurpose>Compute the nearest valid integral viewport position to POS.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(nearest-aligned-viewport pos)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Compute the nearest valid integral viewport position to POS.
POS is a list of x and y virtual coordinates in that order. The
viewport coordinates returned will be in the same format and will be a
integral multiples of the desk size.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm virtual)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/virtual.scm"><filename>scheme/virtual.scm</filename></ulink>
  at line 47 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/virtual.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="netpbm-loader">
  <refnamediv>
    <refname>netpbm-loader</refname>
    <refpurpose>Tries to load an arbitrary image using the netpbm packge.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(netpbm-loader fname)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Tries to load an arbitrary image using the netpbm packge.
Uses <link linkend="anytoppm"><function>anytoppm</function></link> and <link linkend="ppmtoxpm"><function>ppmtoxpm</function></link> to try to convert the file to an xpm,
then attempts to load it as such.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm image-loaders)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/image-loaders.scm"><filename>scheme/image-loaders.scm</filename></ulink>
  at line 38 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/image-loaders.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="netscape-goto-cut-buffer-url">
  <refnamediv>
    <refname>netscape-goto-cut-buffer-url</refname>
    <refpurpose>Goto the url that is held in the X11 cut buffer.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(netscape-goto-cut-buffer-url 
		 #&amp;optional (new *netscape-new-window*))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Goto the url that is held in the X11 cut buffer.
See <link linkend="X-cut-buffer"><function>X-cut-buffer</function></link> and <link linkend="netscape-goto-url"><function>netscape-goto-url</function></link>.  NEW can be <literal>#f</literal> to
not open a new netscape frame.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/netscape.scm"><filename>scheme/netscape.scm</filename></ulink>
  at line 93 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/netscape.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="netscape-goto-url">
  <refnamediv>
    <refname>netscape-goto-url</refname>
    <refpurpose>Make netscape go to the location URL.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(netscape-goto-url url 
                #&amp;optional
		(completion #f)
		(new *netscape-new-window*))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Make netscape go to the location URL.
Calls COMPLETION when done.
The optional argument specifies whether a new window should be opened.
It defaults to `*netscape-new-window*'.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm netscape)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/netscape.scm"><filename>scheme/netscape.scm</filename></ulink>
  at line 81 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/netscape.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="netscape-win">
  <refnamediv>
    <refname>netscape-win</refname>
    <refpurpose>Return a netscape window, prefer a visible netscape window.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(netscape-win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return a netscape window, prefer a visible netscape window.
May error if no netscape windows are present.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm netscape)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/netscape.scm"><filename>scheme/netscape.scm</filename></ulink>
  at line 27 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/netscape.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="next-window">
  <refnamediv>
    <refname>next-window</refname>
    <refpurpose>Circulate to the next matching window.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(next-window #&amp;key (window (get-window #f #f))
			     (only '()) (except '()) (proc window-list-proc))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Circulate to the next matching window.
If WINDOW is given, circulate to that window.
ONLY and EXCEPT control which windows match --- see <link linkend="list-windows"><function>list-windows</function></link> for 
details.
PROC is a procedure of one argument which does the work after the
windows are circulated.  PROC defaults to <link linkend="window-list-proc"><function>window-list-proc</function></link>.
See also <link linkend="prev-window"><function>prev-window</function></link>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm winlist)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/winlist.scm"><filename>scheme/winlist.scm</filename></ulink>
  at line 331 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/winlist.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="nonant-to-dirvector">
  <refnamediv>
    <refname>nonant->dirvector</refname>
    <refpurpose>No documentation supplied.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(nonant->dirvector nonant)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  No documentation supplied.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm ui-constraints-classes)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/ui-constraints-classes.scm"><filename>scheme/ui-constraints-classes.scm</filename></ulink>
  at line 163 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/ui-constraints-classes.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="nonant-to-gravity">
  <refnamediv>
    <refname>nonant->gravity</refname>
    <refpurpose>Return a gravity symbol given NONANT in [0,8].</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(nonant->gravity nonant)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return a gravity symbol given NONANT in [0,8].
0 is northwest, 1 is north, 2 is northeast, etc.
See also <link linkend="get-window-nonant"><function>get-window-nonant</function></link>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/flux.scm"><filename>scheme/flux.scm</filename></ulink>
  at line 499 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/flux.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="nonant-to-string">
  <refnamediv>
    <refname>nonant->string</refname>
    <refpurpose>Return the brief string name for NONANT, an integer.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(nonant->string nonant)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the brief string name for NONANT, an integer.
E.g., an argument of 1 returns <link linkend="N"><function>N</function></link>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/nonants.scm"><filename>scheme/nonants.scm</filename></ulink>
  at line 128 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/nonants.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="normal-border">
  <refnamediv>
    <refname>normal-border</refname>
    <refpurpose>Cause WIN to be decorated with a normal border.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(normal-border  #&amp;optional win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Cause <parameter>win</parameter> to be decorated with a normal border.
This means that there will be resize handles in the corners. <parameter>win</parameter>
defaults to the window context in the usual way if not specified.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/window.c"><filename>scwm/window.c</filename></ulink>
  at line 3179 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="not-menu-background">
  <refnamediv>
    <refname>not-menu-background</refname>
    <refpurpose>Return the default background color for icons, window frames, etc.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(not-menu-background)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the default background color for icons, window frames, etc.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/color.c"><filename>scwm/color.c</filename></ulink>
  at line 852 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/color.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="not-menu-foreground">
  <refnamediv>
    <refname>not-menu-foreground</refname>
    <refpurpose>Return the default foreground color for icons, titlebars, etc.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(not-menu-foreground)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the default foreground color for icons, titlebars, etc.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/color.c"><filename>scwm/color.c</filename></ulink>
  at line 817 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/color.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="number-to-hex-string">
  <refnamediv>
    <refname>number->hex-string</refname>
    <refpurpose>A convenience wrapper around `number->string' that returns N in base-16.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(number->hex-string n)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  A convenience wrapper around `number->string' that returns N in base-16.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm stringops)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/stringops.scm"><filename>scheme/stringops.scm</filename></ulink>
  at line 39 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/stringops.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="number-in-base">
  <refnamediv>
    <refname>number-in-base</refname>
    <refpurpose>Return the integer that corresponds to string NUMBER in base BASE.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(number-in-base number base #&amp;optional value)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the integer that corresponds to string NUMBER in base BASE.
VALUE is the optional value of any prefix to NUMBER.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm number-convert)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/number-convert.scm"><filename>scheme/number-convert.scm</filename></ulink>
  at line 38 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/number-convert.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="number-of-mouse-buttons">
  <refnamediv>
    <refname>number-of-mouse-buttons</refname>
    <refpurpose>Return the number of mouse buttons of the current mouse.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(number-of-mouse-buttons)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the number of mouse buttons of the current mouse.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/binding.c"><filename>scwm/binding.c</filename></ulink>
  at line 1392 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/binding.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="object-documentation">
  <refnamediv>
    <refname>object-documentation</refname>
    <refpurpose>Return documentation attached to SYM or to (eval SYM).</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(object-documentation sym)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return documentation attached to SYM or to (eval SYM).
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/doc.scm"><filename>scheme/doc.scm</filename></ulink>
  at line 76 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/doc.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="oct">
  <refnamediv>
    <refname>oct</refname>
    <refpurpose>Return the integer that corresponds to string NUMBER as an octal value.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(oct number)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the integer that corresponds to string NUMBER as an octal value.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm number-convert)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/number-convert.scm"><filename>scheme/number-convert.scm</filename></ulink>
  at line 58 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/number-convert.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="on-current-desk-p">
  <refnamediv>
    <refname>on-current-desk?</refname>
    <refpurpose>Return <literal>#t</literal> if WIN is on the current desk.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(on-current-desk? #&amp;optional (win (get-window)))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return <literal>#t</literal> if WIN is on the current desk.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm wininfo)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/wininfo.scm"><filename>scheme/wininfo.scm</filename></ulink>
  at line 42 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/wininfo.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="on-desk-n-p">
  <refnamediv>
    <refname>on-desk-n?</refname>
    <refpurpose>Returns a function which takes WIN and returns <literal>#t</literal> if WIN is on desk N, else <literal>#f</literal>.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>((on-desk-n? n) #&amp;optional (win (get-window)))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Returns a function which takes WIN and returns <literal>#t</literal> if WIN is on desk N, else <literal>#f</literal>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm wininfo)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/wininfo.scm"><filename>scheme/wininfo.scm</filename></ulink>
  at line 38 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/wininfo.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="on-desk-placement">
  <refnamediv>
    <refname>on-desk-placement</refname>
    <refpurpose>Return a procedure that takes a window and places it on DESK.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(on-desk-placement desk)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return a procedure that takes a window and places it on DESK.
The procedure will act just like calling <link linkend="place-on-desk"><function>place-on-desk</function></link> on the
window with the same DESK argument.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm placement)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/placement.scm"><filename>scheme/placement.scm</filename></ulink>
  at line 94 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/placement.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="on-desk-p">
  <refnamediv>
    <refname>on-desk?</refname>
    <refpurpose>Return <literal>#t</literal> if WIN is on desk N, else <literal>#f</literal>.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(on-desk? n #&amp;optional (win (get-window)))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return <literal>#t</literal> if WIN is on desk N, else <literal>#f</literal>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm wininfo)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/wininfo.scm"><filename>scheme/wininfo.scm</filename></ulink>
  at line 34 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/wininfo.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="one-window-prompter">
  <refnamediv>
    <refname>one-window-prompter</refname>
    <refpurpose>No documentation supplied.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(one-window-prompter name #&amp;optional (p1 "select window"))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  No documentation supplied.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm ui-constraints-classes)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/ui-constraints-classes.scm"><filename>scheme/ui-constraints-classes.scm</filename></ulink>
  at line 99 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/ui-constraints-classes.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="opaque-move">
  <refnamediv>
    <refname>opaque-move</refname>
    <refpurpose>Move WIN interactively, opaquely.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(opaque-move  #&amp;optional win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Move <parameter>win</parameter> interactively, opaquely.
Returns a list '(X Y) which is the new viewport position of <parameter>win</parameter>.
This allows the user to drag the window itself around the screen. <parameter>win</parameter>
defaults to the window context in the usual way if not specified.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/move.c"><filename>scwm/move.c</filename></ulink>
  at line 554 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/move.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="opaque-resize">
  <refnamediv>
    <refname>opaque-resize</refname>
    <refpurpose>Resize WIN interactively, opaquely.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(opaque-resize  #&amp;optional win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Resize <parameter>win</parameter> interactively, opaquely.
Returns a list '(width height) that is the new size of <parameter>win</parameter>.
This allows the user to drag the boundaries of the window to set its
size. <parameter>win</parameter> defaults to the window context in the usual way if not
specified. The window is updated immediately as the size changes take
place.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/resize.c"><filename>scwm/resize.c</filename></ulink>
  at line 672 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/resize.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="option-menu">
  <refnamediv>
    <refname>option-menu</refname>
    <refpurpose>No documentation supplied.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(option-menu sym)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  No documentation supplied.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm preferences)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/preferences.scm"><filename>scheme/preferences.scm</filename></ulink>
  at line 193 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/preferences.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="option-widget-and-getter">
  <refnamediv>
    <refname>option-widget-and-getter</refname>
    <refpurpose>No documentation supplied.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(option-widget-and-getter sym)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  No documentation supplied.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm preferences)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/preferences.scm"><filename>scheme/preferences.scm</filename></ulink>
  at line 152 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/preferences.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="or-map">
  <refnamediv>
    <refname>or-map</refname>
    <refpurpose>Apply PROC repeatedly, returning the first true value.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(or-map proc first . rest)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Apply PROC repeatedly, returning the first true value.
PROC is applied to elements of FIRST and the lists comprising REST
much as <link linkend="map"><function>map</function></link> would do it. If PROC never returns a true value, return
<literal>#f</literal> instead. If all the lists are empty, return <literal>#f</literal>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm listops)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/listops.scm"><filename>scheme/listops.scm</filename></ulink>
  at line 128 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/listops.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="output-of-system-cmd">
  <refnamediv>
    <refname>output-of-system-cmd</refname>
    <refpurpose>Return the output of command shell execution of CMD.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(output-of-system-cmd cmd)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the output of command shell execution of CMD.
CMD is run synchronously and its output is piped into the return value
of this function, as a string.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/file.scm"><filename>scheme/file.scm</filename></ulink>
  at line 103 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/file.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="pair-virtual-to-viewport">
  <refnamediv>
    <refname>pair-virtual->viewport</refname>
    <refpurpose>Convert a pair point from virtual to viewport coordinates.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(pair-virtual->viewport pt)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Convert a pair point from virtual to viewport coordinates.
Return value is (viewport-x . viewport-y).
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm window-locations)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/window-locations.scm"><filename>scheme/window-locations.scm</filename></ulink>
  at line 10 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/window-locations.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="paste-window-title-from-cut-buffer0">
  <refnamediv>
    <refname>paste-window-title-from-cut-buffer0</refname>
    <refpurpose>Set the window title of WINDOW to be the string in CUT_BUFFER0.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(paste-window-title-from-cut-buffer0 #&amp;optional (window (get-window)))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Set the window title of WINDOW to be the string in CUT_BUFFER0.
Do nothing if the cut buffer does not contain a string.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm xprop-extras)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/xprop-extras.scm"><filename>scheme/xprop-extras.scm</filename></ulink>
  at line 37 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/xprop-extras.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="path-list-to-string-with-colons">
  <refnamediv>
    <refname>path-list->string-with-colons</refname>
    <refpurpose>Convert L, a list of string directory names, to a single colon-separated string.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(path-list->string-with-colons l)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Convert L, a list of string directory names, to a single colon-separated string.
Returns that string.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/file.scm"><filename>scheme/file.scm</filename></ulink>
  at line 68 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/file.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="percent-visible">
  <refnamediv>
    <refname>percent-visible</refname>
    <refpurpose>Return the percent of WIN currently in the viewport as a real in [0,100].</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(percent-visible #&amp;optional (win (get-window)))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the percent of WIN currently in the viewport as a real in [0,100].
Note that this does not consider other windows which may
obscure WIN;  it only checks what fraction of WIN would be visible
if it were on top (unobscured).
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm wininfo)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/wininfo.scm"><filename>scheme/wininfo.scm</filename></ulink>
  at line 111 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/wininfo.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="pix-to-pctx">
  <refnamediv>
    <refname>pix->%x</refname>
    <refpurpose>Return the percent of the display width that PIX is.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(pix->%x pix)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the percent of the display width that PIX is.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm base)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/base.scm"><filename>scheme/base.scm</filename></ulink>
  at line 143 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/base.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="pix-to-pcty">
  <refnamediv>
    <refname>pix->%y</refname>
    <refpurpose>Return the percent of the display height that PIX is.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(pix->%y pix)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the percent of the display height that PIX is.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm base)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/base.scm"><filename>scheme/base.scm</filename></ulink>
  at line 147 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/base.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="place-at-point">
  <refnamediv>
    <refname>place-at-point</refname>
    <refpurpose>Place WIN at the pointer position.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(place-at-point win #&amp;key (offset '(0 0))
			       (proportional-offset '(-0.5 -0.5)))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Place WIN at the pointer position.

If the keyword argument OFFSET is specified, it is interpreted as a
list of x and y offsets to add to the pointer position.

If the keyword argument PROPORTIONAL-OFFSET is specified, it is
interpreted as a list of numbers to multiply by the window's width and
height, and is treated as an extra offset.

The defaults are (0 0) for OFFSET and (-0.5 -0.5) for
PROPORTIONAL-OFFSET, with the result that by default the window is
centered at the mouse pointer position.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm placement)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/placement.scm"><filename>scheme/placement.scm</filename></ulink>
  at line 57 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/placement.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="place-in-viewport">
  <refnamediv>
    <refname>place-in-viewport</refname>
    <refpurpose>Move WIN to the (XX, YY) viewport.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(place-in-viewport win xx yy)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Move WIN to the (XX, YY) viewport.
XX and YY are full display-size increments (e.g., (1,0) is the
viewport just to the right of the home (0,0) viewport).
This is equivalent to <link linkend="move-window-to-viewport"><function>move-window-to-viewport</function></link>, just named
differently for clarity and convenience.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm placement)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/placement.scm"><filename>scheme/placement.scm</filename></ulink>
  at line 34 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/placement.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="place-nonant-marker">
  <refnamediv>
    <refname>place-nonant-marker</refname>
    <refpurpose>Place a nonant marker on W.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(place-nonant-marker #&amp;optional (w (get-window-with-nonant)))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Place a nonant marker on W.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm window-selection)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/window-selection.scm"><filename>scheme/window-selection.scm</filename></ulink>
  at line 169 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/window-selection.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="place-on-default-desk">
  <refnamediv>
    <refname>place-on-default-desk</refname>
    <refpurpose>Place WIN on a desk according to the default algorithm.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(place-on-default-desk win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Place <parameter>win</parameter> on a desk according to the default algorithm.
Place a window with it's window group, with a window it is transient
for, on the desk it was on previous to a restart, on the desk
specified with the starts-on-desk flag,
This is called as part of <link linkend="default-placement-proc"><function>default-placement-proc</function></link>.  It could also be
used in user-defined placement procedures (see
<link linkend="set-window-placement-proc-x"><function>set-window-placement-proc!</function></link>).
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/placement.c"><filename>scwm/placement.c</filename></ulink>
  at line 425 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/placement.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="place-on-desk">
  <refnamediv>
    <refname>place-on-desk</refname>
    <refpurpose>Move window WIN to desk DESK.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(place-on-desk win desk)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Move window WIN to desk DESK.
This is equivalent to <link linkend="move-window-to-desk"><function>move-window-to-desk</function></link>, just named
differently for clarity and convenience.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm placement)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/placement.scm"><filename>scheme/placement.scm</filename></ulink>
  at line 42 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/placement.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="plain-border">
  <refnamediv>
    <refname>plain-border</refname>
    <refpurpose>Cause WIN to be decorated with a plain border.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(plain-border  #&amp;optional win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Cause <parameter>win</parameter> to be decorated with a plain border.
This means that there will be no resize handles in the corners. <parameter>win</parameter>
defaults to the window context in the usual way if not specified.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/window.c"><filename>scwm/window.c</filename></ulink>
  at line 3211 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="pointer-position">
  <refnamediv>
    <refname>pointer-position</refname>
    <refpurpose>Return the current position of the mouse pointer in pixels.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(pointer-position)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the current position of the mouse pointer in pixels.
The return value is a two-element list of the x and y coordinates.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/miscprocs.c"><filename>scwm/miscprocs.c</filename></ulink>
  at line 225 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/miscprocs.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="popup-docs-for">
  <refnamediv>
    <refname>popup-docs-for</refname>
    <refpurpose>No documentation supplied.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(popup-docs-for var)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  No documentation supplied.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm preferences)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/preferences.scm"><filename>scheme/preferences.scm</filename></ulink>
  at line 79 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/preferences.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="popup-menu">
  <refnamediv>
    <refname>popup-menu</refname>
    <refpurpose>Popup MENU, a menu object, and warp to the first item if WARP-TO-FIRST? is <literal>#t</literal>.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(popup-menu menu #&amp;optional warp-to-first? x-pos y-pos left-side?)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Popup <parameter>menu</parameter>, a menu object, and warp to the first item if <parameter>warp-to-first?</parameter> is <literal>#t</literal>.
<parameter>x-pos</parameter>, <parameter>y-pos</parameter> specify a desired position for the menu, and <parameter>left-side?</parameter> should be
<literal>#t</literal> if the menu should be left justified against <parameter>x-pos</parameter>, or <literal>#f</literal> if it should be
right justified against <parameter>x-pos</parameter>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/menu.c"><filename>scwm/menu.c</filename></ulink>
  at line 1638 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/menu.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="popup-menu-from-decoration">
  <refnamediv>
    <refname>popup-menu-from-decoration</refname>
    <refpurpose>Popup MENU from WIN's decoration numbered BUTTON-NUMBER.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(popup-menu-from-decoration menu win button-number)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Popup MENU from WIN's decoration numbered BUTTON-NUMBER.
This positions the popup menu appropriately.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm base)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/base.scm"><filename>scheme/base.scm</filename></ulink>
  at line 516 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/base.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="popup-option-menu">
  <refnamediv>
    <refname>popup-option-menu</refname>
    <refpurpose>No documentation supplied.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(popup-option-menu sym)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  No documentation supplied.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm preferences)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/preferences.scm"><filename>scheme/preferences.scm</filename></ulink>
  at line 220 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/preferences.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="popup-ui-constraints-gtk-toggle-menu">
  <refnamediv>
    <refname>popup-ui-constraints-gtk-toggle-menu</refname>
    <refpurpose>Pops up the constraint toggle menu.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(popup-ui-constraints-gtk-toggle-menu)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Pops up the constraint toggle menu.
Maintains consistency with previous toggle menu code.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm ui-constraints-gtk-toggle-menu)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/ui-constraints-gtk-toggle-menu.scm"><filename>scheme/ui-constraints-gtk-toggle-menu.scm</filename></ulink>
  at line 235 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/ui-constraints-gtk-toggle-menu.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="popup-ui-constraints-toggle-menu">
  <refnamediv>
    <refname>popup-ui-constraints-toggle-menu</refname>
    <refpurpose>Popup a menu that can be used to turn added constraints on and off.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(popup-ui-constraints-toggle-menu)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Popup a menu that can be used to turn added constraints on and off.
See also <link linkend="constraint-toggle-menu"><function>constraint-toggle-menu</function></link>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/ui-constraints-toggle-menu.scm"><filename>scheme/ui-constraints-toggle-menu.scm</filename></ulink>
  at line 67 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/ui-constraints-toggle-menu.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="position-message-window-x">
  <refnamediv>
    <refname>position-message-window!</refname>
    <refpurpose>Move the move/resize message window's GRAVITY point to (X,Y).</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(position-message-window! msgwin x y gravity)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Move the move/resize message window's GRAVITY point to (X,Y).
GRAVITY can be one of 'nw, 'n, 'ne, 'w, 'center, 'e, 'sw, 's, 'se
or spelled-out versions of these. See also `gravity->alignments'.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm message-window)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/message-window.scm"><filename>scheme/message-window.scm</filename></ulink>
  at line 37 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/message-window.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="prev-window">
  <refnamediv>
    <refname>prev-window</refname>
    <refpurpose>Circulate to the previous matching window.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(prev-window #&amp;key (window (get-window #f #f))
			     (only '()) (except '()) (proc window-list-proc))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Circulate to the previous matching window.
If WINDOW is given, circulate to that window.
ONLY and EXCEPT control which windows match --- see <link linkend="list-windows"><function>list-windows</function></link> for 
details.
PROC is a procedure of one argument which does the work after the
windows are circulated.  PROC defaults to <link linkend="window-list-proc"><function>window-list-proc</function></link>.
See also <link linkend="next-window"><function>next-window</function></link>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/winlist.scm"><filename>scheme/winlist.scm</filename></ulink>
  at line 343 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/winlist.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="print-window">
  <refnamediv>
    <refname>print-window</refname>
    <refpurpose>Print WIN using xpr and lpr.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(print-window #&amp;optional (win (get-window)))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Print WIN using xpr and lpr.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm winops)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/winops.scm"><filename>scheme/winops.scm</filename></ulink>
  at line 276 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/winops.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="printable-char-to-keysym-string">
  <refnamediv>
    <refname>printable-char->keysym-string</refname>
    <refpurpose>Return the keysym string corresponding to a printable character.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(printable-char->keysym-string char)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the keysym string corresponding to a printable character.
CHAR is a scheme character.  The return value is appropriate for
use by <link linkend="send-key-press"><function>send-key-press</function></link>.  See also <link linkend="X-synthetic-send-string"><function>X-synthetic-send-string</function></link>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm send-string)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/send-string.scm"><filename>scheme/send-string.scm</filename></ulink>
  at line 12 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/send-string.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="procedure-to-bindings-description">
  <refnamediv>
    <refname>procedure->bindings-description</refname>
    <refpurpose>No documentation supplied.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(procedure->bindings-description proc)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  No documentation supplied.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/flux.scm"><filename>scheme/flux.scm</filename></ulink>
  at line 580 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/flux.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="procedure-to-string">
  <refnamediv>
    <refname>procedure->string</refname>
    <refpurpose>No documentation supplied.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(procedure->string proc)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  No documentation supplied.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/flux.scm"><filename>scheme/flux.scm</filename></ulink>
  at line 524 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/flux.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="procedure-apropos">
  <refnamediv>
    <refname>procedure-apropos</refname>
    <refpurpose>Returns a list of procedures that match RGX.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(procedure-apropos rgx)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Returns a list of procedures that match RGX.
This returns a simple list of procedure objects.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm reflection)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/reflection.scm"><filename>scheme/reflection.scm</filename></ulink>
  at line 177 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/reflection.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="procedure-apropos-with-modules">
  <refnamediv>
    <refname>procedure-apropos-with-modules</refname>
    <refpurpose>Returns a list of procedures that match RGX along with defined-in modules.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(procedure-apropos-with-modules rgx)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Returns a list of procedures that match RGX along with defined-in modules.
The returned list contains pairs (modulesym . procsym)
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm reflection)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/reflection.scm"><filename>scheme/reflection.scm</filename></ulink>
  at line 169 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/reflection.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="procedure-arity">
  <refnamediv>
    <refname>procedure-arity</refname>
    <refpurpose>Return the arity values for PROC.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(procedure-arity proc)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the arity values for PROC.
Three values are returned in a list: (num-required num-optional rest-argument-p).
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm reflection)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/reflection.scm"><filename>scheme/reflection.scm</filename></ulink>
  at line 27 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/reflection.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="procedure-formals">
  <refnamediv>
    <refname>procedure-formals</refname>
    <refpurpose>Return a list of the formal arguments for PROC.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(procedure-formals proc)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return a list of the formal arguments for PROC.
Works for both primitives and procedures. If PROC was
created using an optargs *-format macro, this 
procedure will not provide much useful information.
See instead <link linkend="procedure-keyword-arguments"><function>procedure-keyword-arguments</function></link> and 
<link linkend="procedure-optional-arguments"><function>procedure-optional-arguments</function></link>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm reflection)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/reflection.scm"><filename>scheme/reflection.scm</filename></ulink>
  at line 48 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/reflection.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="procedure-is-interactive-p">
  <refnamediv>
    <refname>procedure-is-interactive?</refname>
    <refpurpose>Return <literal>#t</literal> iff PROC can take no arguments.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(procedure-is-interactive? proc)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return <literal>#t</literal> iff PROC can take no arguments.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm reflection)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/reflection.scm"><filename>scheme/reflection.scm</filename></ulink>
  at line 161 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/reflection.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="procedure-keyword-formals">
  <refnamediv>
    <refname>procedure-keyword-formals</refname>
    <refpurpose>Returns an a-list of the optargs keyword arguments and default values for PROC.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(procedure-keyword-formals proc)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Returns an a-list of the optargs keyword arguments and default values for PROC.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm reflection)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/reflection.scm"><filename>scheme/reflection.scm</filename></ulink>
  at line 93 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/reflection.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="procedure-num-optional-args">
  <refnamediv>
    <refname>procedure-num-optional-args</refname>
    <refpurpose>Return the number of optional arguments for PROC.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(procedure-num-optional-args proc)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the number of optional arguments for PROC.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm reflection)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/reflection.scm"><filename>scheme/reflection.scm</filename></ulink>
  at line 38 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/reflection.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="procedure-num-required-args">
  <refnamediv>
    <refname>procedure-num-required-args</refname>
    <refpurpose>Return the number of required arguments for PROC.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(procedure-num-required-args proc)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the number of required arguments for PROC.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm reflection)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/reflection.scm"><filename>scheme/reflection.scm</filename></ulink>
  at line 33 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/reflection.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="procedure-optargs-arglist">
  <refnamediv>
    <refname>procedure-optargs-arglist</refname>
    <refpurpose>Return a list of the optargs keyword arguments for PROC.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(procedure-optargs-arglist proc)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return a list of the optargs keyword arguments for PROC.
Returns <literal>#f</literal> if PROC was not defined using keyword or optional
arguments (this includes procedures defined using standard . rest
syntax).  Otherwise returns a list such as '(foo #&amp;optional bar).
Note that these currently do not display in their expected format
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm reflection)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/reflection.scm"><filename>scheme/reflection.scm</filename></ulink>
  at line 83 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/reflection.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="procedure-optional-formals">
  <refnamediv>
    <refname>procedure-optional-formals</refname>
    <refpurpose>Returns a list of the optional arguments for PROC.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(procedure-optional-formals proc)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Returns a list of the optional arguments for PROC.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm reflection)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/reflection.scm"><filename>scheme/reflection.scm</filename></ulink>
  at line 105 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/reflection.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="procedure-required-formals">
  <refnamediv>
    <refname>procedure-required-formals</refname>
    <refpurpose>Return a list of the required formal arguments for PROC.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(procedure-required-formals proc)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return a list of the required formal arguments for PROC.
Returns <literal>#f</literal> if PROC is a primitive.  This will not include
any "lambda*" formals generated using optargs. See also
<link linkend="procedure-keyword-arguments"><function>procedure-keyword-arguments</function></link> and <link linkend="procedure-optional-arguments"><function>procedure-optional-arguments</function></link>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm reflection)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/reflection.scm"><filename>scheme/reflection.scm</filename></ulink>
  at line 66 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/reflection.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="procedure-takes-rest-arg-p">
  <refnamediv>
    <refname>procedure-takes-rest-arg?</refname>
    <refpurpose>Return <literal>#t</literal> iff PROC take a rest argument.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(procedure-takes-rest-arg? proc)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return <literal>#t</literal> iff PROC take a rest argument.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm reflection)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/reflection.scm"><filename>scheme/reflection.scm</filename></ulink>
  at line 43 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/reflection.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="process-use-scwm-modules">
  <refnamediv>
    <refname>process-use-scwm-modules</refname>
    <refpurpose>Returns a list of all the modules loaded in successfully.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(process-use-scwm-modules module-list)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Returns a list of all the modules loaded in successfully.
Modules that failed to load have <literal>#f</literal> in their place in the
list instead of the module.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/minimal.scm"><filename>scheme/minimal.scm</filename></ulink>
  at line 171 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/minimal.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="program-exists-p">
  <refnamediv>
    <refname>program-exists?</refname>
    <refpurpose>Return <literal>#t</literal> iff PROGRAM-NAME is in the current $PATH.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(program-exists? program-name)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return <literal>#t</literal> iff PROGRAM-NAME is in the current $PATH.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/path-cache.scm"><filename>scheme/path-cache.scm</filename></ulink>
  at line 17 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/path-cache.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="prompt-bool">
  <refnamediv>
    <refname>prompt-bool</refname>
    <refpurpose>Prompt with PROMPT for a boolean value, and call PROC with result if Ok button is clicked.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(prompt-bool prompt proc #&amp;key
			      (initval #f)
			      (title "prompt-bool"))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Prompt with PROMPT for a boolean value, and call PROC with result if Ok button is clicked.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm prompt-bool)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/prompt-bool.scm"><filename>scheme/prompt-bool.scm</filename></ulink>
  at line 42 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/prompt-bool.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="prompt-bool-hbox">
  <refnamediv>
    <refname>prompt-bool-hbox</refname>
    <refpurpose>Create and return a boolean-prompting hbox and button.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(prompt-bool-hbox prompt initval)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Create and return a boolean-prompting hbox and button.
hbox is the gtk container widget, selected-proc?? is a proc
that when invoked returns <literal>#t</literal> or <literal>#f</literal> depending on the state
of the boolean displayed in hbox.
The returned value is a list: (hbox getter).
See also <link linkend="prompt-bool"><function>prompt-bool</function></link>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/prompt-bool.scm"><filename>scheme/prompt-bool.scm</filename></ulink>
  at line 78 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/prompt-bool.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="prompt-color">
  <refnamediv>
    <refname>prompt-color</refname>
    <refpurpose>Prompt using PROMPT for a color and call PROC with value if Ok is clicked.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(prompt-color prompt proc #&amp;key
			      (initval #f)
			      (title #f)
			      (favorites #f))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Prompt using PROMPT for a color and call PROC with value if Ok is clicked.
INITVAL is a default initial color as a color object or string.
TITLE is a window title.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm prompt-color)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/prompt-color.scm"><filename>scheme/prompt-color.scm</filename></ulink>
  at line 44 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/prompt-color.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="prompt-color-hbox">
  <refnamediv>
    <refname>prompt-color-hbox</refname>
    <refpurpose>Create and return a color-prompting hbox, complete with link to full color dialog.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(prompt-color-hbox prompt initval #&amp;optional favorites)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Create and return a color-prompting hbox, complete with link to full color dialog.
PROMPT is the prompt, INITVAL is the initial color as a color object or a string.
The returned value is a list: (hbox getter).
See also <link linkend="prompt-color"><function>prompt-color</function></link>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/prompt-color.scm"><filename>scheme/prompt-color.scm</filename></ulink>
  at line 94 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/prompt-color.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="prompt-file">
  <refnamediv>
    <refname>prompt-file</refname>
    <refpurpose>Prompt using PROMPT for a file and call PROC with value if Ok is clicked.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(prompt-file prompt proc #&amp;key
			      (initval #f)
			      (title #f)
			      (favorites #f))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Prompt using PROMPT for a file and call PROC with value if Ok is clicked.
INITVAL is a default initial file as a string.
TITLE is a window title.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm prompt-file)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/prompt-file.scm"><filename>scheme/prompt-file.scm</filename></ulink>
  at line 31 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/prompt-file.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="prompt-file-hbox">
  <refnamediv>
    <refname>prompt-file-hbox</refname>
    <refpurpose>Create and return a file-prompting hbox, complete with link to full file dialog.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(prompt-file-hbox prompt initval #&amp;optional favorites)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Create and return a file-prompting hbox, complete with link to full file dialog.
PROMPT is the prompt, INITVAL is the initial file as a string.
The returned value is a list: (hbox getter).
See also <link linkend="prompt-file"><function>prompt-file</function></link>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/prompt-file.scm"><filename>scheme/prompt-file.scm</filename></ulink>
  at line 68 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/prompt-file.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="prompt-font">
  <refnamediv>
    <refname>prompt-font</refname>
    <refpurpose>Prompt using PROMPT for a font and call PROC with value if Ok is clicked.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(prompt-font prompt proc #&amp;key
			      (initval #f)
			      (title #f))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Prompt using PROMPT for a font and call PROC with value if Ok is clicked.
INITVAL is a default initial font as a font object or string.
TITLE is a window title.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm prompt-font)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/prompt-font.scm"><filename>scheme/prompt-font.scm</filename></ulink>
  at line 43 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/prompt-font.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="prompt-font-hbox">
  <refnamediv>
    <refname>prompt-font-hbox</refname>
    <refpurpose>Create and return a font-prompting hbox, complete with link to full font dialog.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(prompt-font-hbox prompt initval)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Create and return a font-prompting hbox, complete with link to full font dialog.
PROMPT is the prompt, INITVAL is the initial font as a font object or a string.
The returned value is a list: (hbox getter).
See also <link linkend="prompt-font"><function>prompt-font</function></link>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/prompt-font.scm"><filename>scheme/prompt-font.scm</filename></ulink>
  at line 79 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/prompt-font.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="prompt-from-name">
  <refnamediv>
    <refname>prompt-from-name</refname>
    <refpurpose>No documentation supplied.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(prompt-from-name name)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  No documentation supplied.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm preferences)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/preferences.scm"><filename>scheme/preferences.scm</filename></ulink>
  at line 128 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/preferences.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="prompt-integer-range">
  <refnamediv>
    <refname>prompt-integer-range</refname>
    <refpurpose>Prompt using PROMPT for an integer value in RANGE, and call PROC with value if Ok is clicked.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(prompt-integer-range prompt range proc #&amp;key
				      (initval #f) (title #f))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Prompt using PROMPT for an integer value in RANGE, and call PROC with value if Ok is clicked.
RANGE is a cons cell (low . high); ranges are inclusive. 
INITVAL is a default initial value.
TITLE is a window title.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm prompt-range)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/prompt-range.scm"><filename>scheme/prompt-range.scm</filename></ulink>
  at line 83 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/prompt-range.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="prompt-integer-range-hbox">
  <refnamediv>
    <refname>prompt-integer-range-hbox</refname>
    <refpurpose>Create and return an integer-range-prompting hbox and scale, label.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(prompt-integer-range-hbox prompt range initval)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Create and return an integer-range-prompting hbox and scale, label.
PROMPT is the prompt, RANGE is the allowed rane, and INITVAL is the initial string.
The returned value is a list: (hbox getter).
See also <link linkend="prompt-range"><function>prompt-range</function></link>, <link linkend="prompt-integer-range"><function>prompt-integer-range</function></link>, <link linkend="prompt-range-hbox"><function>prompt-range-hbox</function></link>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/prompt-range.scm"><filename>scheme/prompt-range.scm</filename></ulink>
  at line 123 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/prompt-range.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="prompt-path-hbox">
  <refnamediv>
    <refname>prompt-path-hbox</refname>
    <refpurpose>Create and return a path-prompting hbox and entry.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(prompt-path-hbox prompt initval)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Create and return a path-prompting hbox and entry.
PROMPT is the prompt, and INITVAL is the initial path (a list of strings).
The returned value is a list: (hbox getter entry).
See also <link linkend="prompt-string"><function>prompt-string</function></link>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm prompt-string)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/prompt-string.scm"><filename>scheme/prompt-string.scm</filename></ulink>
  at line 77 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/prompt-string.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="prompt-proc">
  <refnamediv>
    <refname>prompt-proc</refname>
    <refpurpose>Prompt using PROMPT for a proc and call PROC with value if Ok is clicked.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(prompt-proc prompt proc #&amp;key
			      (initval #f)
			      (title #f)
			      (favorites #f))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Prompt using PROMPT for a proc and call PROC with value if Ok is clicked.
INITVAL is a default initial proc as a string.
TITLE is a window title.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm prompt-proc)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/prompt-proc.scm"><filename>scheme/prompt-proc.scm</filename></ulink>
  at line 36 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/prompt-proc.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="prompt-proc-hbox">
  <refnamediv>
    <refname>prompt-proc-hbox</refname>
    <refpurpose>Create and return a proc-prompting hbox, complete with link to full proc dialog.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(prompt-proc-hbox prompt initval #&amp;optional favorites)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Create and return a proc-prompting hbox, complete with link to full proc dialog.
PROMPT is the prompt, INITVAL is the initial proc as a string.
The returned value is a list: (hbox getter entry).
See also <link linkend="prompt-proc"><function>prompt-proc</function></link>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm prompt-proc)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/prompt-proc.scm"><filename>scheme/prompt-proc.scm</filename></ulink>
  at line 78 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/prompt-proc.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="prompt-range">
  <refnamediv>
    <refname>prompt-range</refname>
    <refpurpose>Prompt using PROMPT for a numeric value in RANGE, and call PROC with value if Ok is clicked.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(prompt-range prompt range proc #&amp;key
			      (initval #f)
			      (title #f)
			      (digits 1))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Prompt using PROMPT for a numeric value in RANGE, and call PROC with value if Ok is clicked.
RANGE is a cons cell (low . hight); ranges are inclusive. 
INITVAL is a default initial value.
TITLE is a window title.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm prompt-range)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/prompt-range.scm"><filename>scheme/prompt-range.scm</filename></ulink>
  at line 45 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/prompt-range.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="prompt-range-hbox">
  <refnamediv>
    <refname>prompt-range-hbox</refname>
    <refpurpose>Create and return a range-prompting hbox and scale, label.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(prompt-range-hbox prompt range initval #&amp;optional (digits 1))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Create and return a range-prompting hbox and scale, label.
PROMPT is the prompt, RANGE is the allowed rane, and INITVAL is the initial string.
The returned value is a list: (hbox getter).
See also <link linkend="prompt-range"><function>prompt-range</function></link>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm prompt-range)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/prompt-range.scm"><filename>scheme/prompt-range.scm</filename></ulink>
  at line 96 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/prompt-range.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="prompt-string">
  <refnamediv>
    <refname>prompt-string</refname>
    <refpurpose>Use PROMPT as prompt in text entry widget and call PROC with the entered string.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(prompt-string prompt proc #&amp;key
			       (initval #f) (title "prompt-string"))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Use PROMPT as prompt in text entry widget and call PROC with the entered string.
E.g., (prompt-string "Enter new name" (lambda (nm) (set-window-title! w nm)))
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm prompt-string)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/prompt-string.scm"><filename>scheme/prompt-string.scm</filename></ulink>
  at line 35 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/prompt-string.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="prompt-string-hbox">
  <refnamediv>
    <refname>prompt-string-hbox</refname>
    <refpurpose>Create and return a string-prompting hbox and entry.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(prompt-string-hbox prompt initval)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Create and return a string-prompting hbox and entry.
PROMPT is the prompt, and INITVAL is the initial string.
The returned value is a list: (hbox getter entry).
See also <link linkend="prompt-string"><function>prompt-string</function></link>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm prompt-string)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/prompt-string.scm"><filename>scheme/prompt-string.scm</filename></ulink>
  at line 59 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/prompt-string.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="property-changed-debug">
  <refnamediv>
    <refname>property-changed-debug</refname>
    <refpurpose>Print debugging information about the property change of PROP on WIN.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(property-changed-debug prop win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Print debugging information about the property change of PROP on WIN.
See also <link linkend="X-PropertyNotify-hook"><function>X-PropertyNotify-hook</function></link>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm property-respond)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/property-respond.scm"><filename>scheme/property-respond.scm</filename></ulink>
  at line 51 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/property-respond.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="property-changed-respond">
  <refnamediv>
    <refname>property-changed-respond</refname>
    <refpurpose>Handle various property changes of PROP on WIN.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(property-changed-respond prop win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Handle various property changes of PROP on WIN.
See also <link linkend="X-PropertyNotify-hook"><function>X-PropertyNotify-hook</function></link>.  Currently handles
"flashing" and "flash".
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm property-respond)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/property-respond.scm"><filename>scheme/property-respond.scm</filename></ulink>
  at line 90 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/property-respond.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="proplist-append-array-element">
  <refnamediv>
    <refname>proplist-append-array-element</refname>
    <refpurpose>Return the PL-ARRAY after appending ITEM to the end.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(proplist-append-array-element pl-array item)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the <parameter>pl-array</parameter> after appending <parameter>item</parameter> to the end.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Primitive from (app scwm proplist)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/modules/proplist/scwmproplist.c"><filename>modules/proplist/scwmproplist.c</filename></ulink>
  at line 297 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/modules/proplist/scwmproplist.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="proplist-deep-copy">
  <refnamediv>
    <refname>proplist-deep-copy</refname>
    <refpurpose>Return a deep copy of property list PL.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(proplist-deep-copy pl)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return a deep copy of property list <parameter>pl</parameter>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Primitive from (app scwm proplist)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/modules/proplist/scwmproplist.c"><filename>modules/proplist/scwmproplist.c</filename></ulink>
  at line 373 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/modules/proplist/scwmproplist.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="proplist-delete-domain">
  <refnamediv>
    <refname>proplist-delete-domain</refname>
    <refpurpose>Delete domain PL-DOMAIN-NAME.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(proplist-delete-domain pl-domain-name kick-me?)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Delete domain <parameter>pl-domain-name</parameter>.
If <parameter>kick-me?</parameter> is <literal>#f</literal>, any callback registered for the domain will not be called.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Primitive from (app scwm proplist)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/modules/proplist/scwmproplist.c"><filename>modules/proplist/scwmproplist.c</filename></ulink>
  at line 755 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/modules/proplist/scwmproplist.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="proplist-get-all-dictionary-keys">
  <refnamediv>
    <refname>proplist-get-all-dictionary-keys</refname>
    <refpurpose>Return a proplist array object that contains all the keys of PL-DICT.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(proplist-get-all-dictionary-keys pl-dict)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return a proplist array object that contains all the keys of <parameter>pl-dict</parameter>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Primitive from (app scwm proplist)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/modules/proplist/scwmproplist.c"><filename>modules/proplist/scwmproplist.c</filename></ulink>
  at line 506 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/modules/proplist/scwmproplist.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="proplist-get-array-element">
  <refnamediv>
    <refname>proplist-get-array-element</refname>
    <refpurpose>Return the element at INDEX offset of PL.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(proplist-get-array-element pl index)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the element at <parameter>index</parameter> offset of <parameter>pl</parameter>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Primitive from (app scwm proplist)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/modules/proplist/scwmproplist.c"><filename>modules/proplist/scwmproplist.c</filename></ulink>
  at line 475 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/modules/proplist/scwmproplist.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="proplist-get-container">
  <refnamediv>
    <refname>proplist-get-container</refname>
    <refpurpose>Return the array or dictionary of which PL is an element.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(proplist-get-container pl)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the array or dictionary of which <parameter>pl</parameter> is an element.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Primitive from (app scwm proplist)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/modules/proplist/scwmproplist.c"><filename>modules/proplist/scwmproplist.c</filename></ulink>
  at line 462 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/modules/proplist/scwmproplist.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="proplist-get-data">
  <refnamediv>
    <refname>proplist-get-data</refname>
    <refpurpose>Returns the raw data from PL (a data proplist object) as a string.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(proplist-get-data pl)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Returns the raw data from <parameter>pl</parameter> (a data proplist object) as a string.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Primitive from (app scwm proplist)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/modules/proplist/scwmproplist.c"><filename>modules/proplist/scwmproplist.c</filename></ulink>
  at line 583 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/modules/proplist/scwmproplist.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="proplist-get-data-description">
  <refnamediv>
    <refname>proplist-get-data-description</refname>
    <refpurpose>Returns a description of PL (a data proplist object) in GNUstep format.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(proplist-get-data-description pl)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Returns a description of <parameter>pl</parameter> (a data proplist object) in GNUstep format.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Primitive from (app scwm proplist)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/modules/proplist/scwmproplist.c"><filename>modules/proplist/scwmproplist.c</filename></ulink>
  at line 560 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/modules/proplist/scwmproplist.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="proplist-get-dictionary-entry">
  <refnamediv>
    <refname>proplist-get-dictionary-entry</refname>
    <refpurpose>Return the proplist dictionary entry associated with entry KEY in PL-DICT.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(proplist-get-dictionary-entry pl-dict key)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the proplist dictionary entry associated with entry <parameter>key</parameter> in <parameter>pl-dict</parameter>.
Returns <literal>#f</literal> if <parameter>key</parameter> is not in <parameter>pl-dict</parameter>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Primitive from (app scwm proplist)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/modules/proplist/scwmproplist.c"><filename>modules/proplist/scwmproplist.c</filename></ulink>
  at line 520 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/modules/proplist/scwmproplist.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="proplist-get-domain">
  <refnamediv>
    <refname>proplist-get-domain</refname>
    <refpurpose>Return a property list represeting the domain PL-DOMAIN-NAME.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(proplist-get-domain pl-domain-name)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return a property list represeting the domain <parameter>pl-domain-name</parameter>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Primitive from (app scwm proplist)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/modules/proplist/scwmproplist.c"><filename>modules/proplist/scwmproplist.c</filename></ulink>
  at line 772 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/modules/proplist/scwmproplist.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="proplist-get-domainnames">
  <refnamediv>
    <refname>proplist-get-domainnames</refname>
    <refpurpose>Return a array proplist containing all registered domain names.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(proplist-get-domainnames)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return a array proplist containing all registered domain names.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Primitive from (app scwm proplist)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/modules/proplist/scwmproplist.c"><filename>modules/proplist/scwmproplist.c</filename></ulink>
  at line 785 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/modules/proplist/scwmproplist.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="proplist-get-filename">
  <refnamediv>
    <refname>proplist-get-filename</refname>
    <refpurpose>Return the filename of PL.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(proplist-get-filename pl)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the filename of <parameter>pl</parameter>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Primitive from (app scwm proplist)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/modules/proplist/scwmproplist.c"><filename>modules/proplist/scwmproplist.c</filename></ulink>
  at line 797 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/modules/proplist/scwmproplist.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="proplist-get-number-of-elements">
  <refnamediv>
    <refname>proplist-get-number-of-elements</refname>
    <refpurpose>Return the number of elements in PL.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(proplist-get-number-of-elements pl)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the number of elements in <parameter>pl</parameter>.
If <parameter>pl</parameter> is a string or data objects, this returns 0.  If it
is an array or dictionary, it is the number of elements
or pairs.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Primitive from (app scwm proplist)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/modules/proplist/scwmproplist.c"><filename>modules/proplist/scwmproplist.c</filename></ulink>
  at line 491 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/modules/proplist/scwmproplist.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="proplist-get-string">
  <refnamediv>
    <refname>proplist-get-string</refname>
    <refpurpose>Returns the string from PL (a string proplist object).</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(proplist-get-string pl)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Returns the string from <parameter>pl</parameter> (a string proplist object).
Note that numerous procedures automatically convert string
proplist objects into Guile strings, so this may not often be necessary.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Primitive from (app scwm proplist)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/modules/proplist/scwmproplist.c"><filename>modules/proplist/scwmproplist.c</filename></ulink>
  at line 609 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/modules/proplist/scwmproplist.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="proplist-get-string-description">
  <refnamediv>
    <refname>proplist-get-string-description</refname>
    <refpurpose>Retuns a description of PL (a string proplist object) in GNUstep format.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(proplist-get-string-description pl)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Retuns a description of <parameter>pl</parameter> (a string proplist object) in GNUstep format.
If the string contains whitespace or special characters, the string returned will
be enclosed in quotes.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Primitive from (app scwm proplist)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/modules/proplist/scwmproplist.c"><filename>modules/proplist/scwmproplist.c</filename></ulink>
  at line 536 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/modules/proplist/scwmproplist.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="proplist-insert-array-element">
  <refnamediv>
    <refname>proplist-insert-array-element</refname>
    <refpurpose>Return the PL-ARRAY after inserting ITEM at offset INDEX.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(proplist-insert-array-element pl-array item index)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the <parameter>pl-array</parameter> after inserting <parameter>item</parameter> at offset <parameter>index</parameter>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Primitive from (app scwm proplist)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/modules/proplist/scwmproplist.c"><filename>modules/proplist/scwmproplist.c</filename></ulink>
  at line 279 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/modules/proplist/scwmproplist.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="proplist-insert-dictionary-entry">
  <refnamediv>
    <refname>proplist-insert-dictionary-entry</refname>
    <refpurpose>Return PL-DICT after inserting (KEY,VALUE) into it.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(proplist-insert-dictionary-entry pl-dict key Value)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return <parameter>pl-dict</parameter> after inserting (<parameter>key</parameter>,<parameter>value</parameter>) into it.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Primitive from (app scwm proplist)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/modules/proplist/scwmproplist.c"><filename>modules/proplist/scwmproplist.c</filename></ulink>
  at line 313 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/modules/proplist/scwmproplist.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="proplist-is-array">
  <refnamediv>
    <refname>proplist-is-array</refname>
    <refpurpose>Return <literal>#t</literal> iff PL is an array proplist object, <literal>#f</literal> otherwise.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(proplist-is-array pl)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return <literal>#t</literal> iff <parameter>pl</parameter> is an array proplist object, <literal>#f</literal> otherwise.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Primitive from (app scwm proplist)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/modules/proplist/scwmproplist.c"><filename>modules/proplist/scwmproplist.c</filename></ulink>
  at line 655 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/modules/proplist/scwmproplist.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="proplist-is-compound">
  <refnamediv>
    <refname>proplist-is-compound</refname>
    <refpurpose>Return <literal>#t</literal> iff PL is a dictionary or array proplist object, <literal>#f</literal> otherwise.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(proplist-is-compound pl)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return <literal>#t</literal> iff <parameter>pl</parameter> is a dictionary or array proplist object, <literal>#f</literal> otherwise.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Primitive from (app scwm proplist)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/modules/proplist/scwmproplist.c"><filename>modules/proplist/scwmproplist.c</filename></ulink>
  at line 691 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/modules/proplist/scwmproplist.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="proplist-is-data">
  <refnamediv>
    <refname>proplist-is-data</refname>
    <refpurpose>Return <literal>#t</literal> iff PL is a data proplist object, <literal>#f</literal> otherwise.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(proplist-is-data pl)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return <literal>#t</literal> iff <parameter>pl</parameter> is a data proplist object, <literal>#f</literal> otherwise.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Primitive from (app scwm proplist)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/modules/proplist/scwmproplist.c"><filename>modules/proplist/scwmproplist.c</filename></ulink>
  at line 643 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/modules/proplist/scwmproplist.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="proplist-is-dictionary">
  <refnamediv>
    <refname>proplist-is-dictionary</refname>
    <refpurpose>Return <literal>#t</literal> iff PL is a dictionary proplist object, <literal>#f</literal> otherwise.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(proplist-is-dictionary pl)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return <literal>#t</literal> iff <parameter>pl</parameter> is a dictionary proplist object, <literal>#f</literal> otherwise.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Primitive from (app scwm proplist)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/modules/proplist/scwmproplist.c"><filename>modules/proplist/scwmproplist.c</filename></ulink>
  at line 667 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/modules/proplist/scwmproplist.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="proplist-is-equal">
  <refnamediv>
    <refname>proplist-is-equal</refname>
    <refpurpose>Return <literal>#t</literal> iff PLA is equal to PLB.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(proplist-is-equal plA plB)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return <literal>#t</literal> iff <parameter>pla</parameter> is equal to <parameter>plb</parameter>.
This does a case sensitive comparison by default.
See <link linkend="proplist-set-string-cmp-hook"><function>proplist-set-string-cmp-hook</function></link> for changing the behaviour.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Primitive from (app scwm proplist)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/modules/proplist/scwmproplist.c"><filename>modules/proplist/scwmproplist.c</filename></ulink>
  at line 386 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/modules/proplist/scwmproplist.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="proplist-is-simple">
  <refnamediv>
    <refname>proplist-is-simple</refname>
    <refpurpose>Return <literal>#t</literal> iff PL is a string or data proplist object, <literal>#f</literal> otherwise.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(proplist-is-simple pl)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return <literal>#t</literal> iff <parameter>pl</parameter> is a string or data proplist object, <literal>#f</literal> otherwise.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Primitive from (app scwm proplist)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/modules/proplist/scwmproplist.c"><filename>modules/proplist/scwmproplist.c</filename></ulink>
  at line 679 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/modules/proplist/scwmproplist.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="proplist-is-string">
  <refnamediv>
    <refname>proplist-is-string</refname>
    <refpurpose>Return <literal>#t</literal> iff PL is a string proplist object, <literal>#f</literal> otherwise.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(proplist-is-string pl)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return <literal>#t</literal> iff <parameter>pl</parameter> is a string proplist object, <literal>#f</literal> otherwise.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Primitive from (app scwm proplist)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/modules/proplist/scwmproplist.c"><filename>modules/proplist/scwmproplist.c</filename></ulink>
  at line 631 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/modules/proplist/scwmproplist.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="proplist-make-array-from-elements">
  <refnamediv>
    <refname>proplist-make-array-from-elements</refname>
    <refpurpose>Return a newly created array object populated with elements ITEMS.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(proplist-make-array-from-elements  . items)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return a newly created array object populated with elements <parameter>items</parameter>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Primitive from (app scwm proplist)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/modules/proplist/scwmproplist.c"><filename>modules/proplist/scwmproplist.c</filename></ulink>
  at line 189 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/modules/proplist/scwmproplist.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="proplist-make-data">
  <refnamediv>
    <refname>proplist-make-data</refname>
    <refpurpose>Return a proplist argument containing arbitrary data from DATA.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(proplist-make-data data)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return a proplist argument containing arbitrary data from <parameter>data</parameter>.
This is often unnecessary as the proplist procedures will
permit Guile strings to be used anywhere a string proplist object is expected.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Primitive from (app scwm proplist)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/modules/proplist/scwmproplist.c"><filename>modules/proplist/scwmproplist.c</filename></ulink>
  at line 441 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/modules/proplist/scwmproplist.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="proplist-make-dictionary-from-entries">
  <refnamediv>
    <refname>proplist-make-dictionary-from-entries</refname>
    <refpurpose>Return a newly created dictionary object with elements ITEMS.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(proplist-make-dictionary-from-entries  . items)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return a newly created dictionary object with elements <parameter>items</parameter>.
The elements in <parameter>items</parameter> should be a flat list (key1 value1 key2 value2 ...).
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Primitive from (app scwm proplist)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/modules/proplist/scwmproplist.c"><filename>modules/proplist/scwmproplist.c</filename></ulink>
  at line 221 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/modules/proplist/scwmproplist.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="proplist-merge-dictionaries">
  <refnamediv>
    <refname>proplist-merge-dictionaries</refname>
    <refpurpose>Return PL-DICT-DEST after merging in all entries from PL-DICT-SOURCE.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(proplist-merge-dictionaries pl-dict-dest pl-dict-source)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return <parameter>pl-dict-dest</parameter> after merging in all entries from <parameter>pl-dict-source</parameter>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Primitive from (app scwm proplist)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/modules/proplist/scwmproplist.c"><filename>modules/proplist/scwmproplist.c</filename></ulink>
  at line 345 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/modules/proplist/scwmproplist.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="proplist-register">
  <refnamediv>
    <refname>proplist-register</refname>
    <refpurpose>Register thunk CALLBACK to be called when PL-DOMAIN-NAME changes.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(proplist-register pl-domain-name callback)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Register thunk <parameter>callback</parameter> to be called when <parameter>pl-domain-name</parameter> changes.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Primitive from (app scwm proplist)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/modules/proplist/scwmproplist.c"><filename>modules/proplist/scwmproplist.c</filename></ulink>
  at line 716 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/modules/proplist/scwmproplist.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="proplist-remove-array-element">
  <refnamediv>
    <refname>proplist-remove-array-element</refname>
    <refpurpose>Return PL-ARRAY after deleting the element at position INDEX.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(proplist-remove-array-element pl-array index)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return <parameter>pl-array</parameter> after deleting the element at position <parameter>index</parameter>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Primitive from (app scwm proplist)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/modules/proplist/scwmproplist.c"><filename>modules/proplist/scwmproplist.c</filename></ulink>
  at line 263 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/modules/proplist/scwmproplist.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="proplist-remove-dictionary-entry">
  <refnamediv>
    <refname>proplist-remove-dictionary-entry</refname>
    <refpurpose>Return PL-DICT after removing KEY and its corresponding value from it.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(proplist-remove-dictionary-entry pl-dict key)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return <parameter>pl-dict</parameter> after removing <parameter>key</parameter> and its corresponding value from it.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Primitive from (app scwm proplist)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/modules/proplist/scwmproplist.c"><filename>modules/proplist/scwmproplist.c</filename></ulink>
  at line 330 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/modules/proplist/scwmproplist.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="proplist-save">
  <refnamediv>
    <refname>proplist-save</refname>
    <refpurpose>Save PL, atomically if ATOMICALLY? is <literal>#t</literal>.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(proplist-save pl atomically?)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Save <parameter>pl</parameter>, atomically if <parameter>atomically?</parameter> is <literal>#t</literal>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Primitive from (app scwm proplist)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/modules/proplist/scwmproplist.c"><filename>modules/proplist/scwmproplist.c</filename></ulink>
  at line 841 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/modules/proplist/scwmproplist.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="proplist-set-domain">
  <refnamediv>
    <refname>proplist-set-domain</refname>
    <refpurpose>Set PL-DOMAIN-NAME to have VALUE.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(proplist-set-domain pl-domain-name value kick-me?)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Set <parameter>pl-domain-name</parameter> to have <parameter>value</parameter>.
If <parameter>kick-me?</parameter> is <literal>#f</literal>, any callback registered for the domain will not be called.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Primitive from (app scwm proplist)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/modules/proplist/scwmproplist.c"><filename>modules/proplist/scwmproplist.c</filename></ulink>
  at line 736 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/modules/proplist/scwmproplist.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="proplist-set-filename-x">
  <refnamediv>
    <refname>proplist-set-filename!</refname>
    <refpurpose>Set the filename for PL to be FILENAME.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(proplist-set-filename! pl filename)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Set the filename for <parameter>pl</parameter> to be <parameter>filename</parameter>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Primitive from (app scwm proplist)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/modules/proplist/scwmproplist.c"><filename>modules/proplist/scwmproplist.c</filename></ulink>
  at line 810 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/modules/proplist/scwmproplist.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="proplist-set-string-cmp-hook">
  <refnamediv>
    <refname>proplist-set-string-cmp-hook</refname>
    <refpurpose>Use PRED as a predicate for doing proplist string comparisons.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(proplist-set-string-cmp-hook pred)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Use <parameter>pred</parameter> as a predicate for doing proplist string comparisons.
<parameter>pred</parameter> should take two proplist objects and return <literal>#t</literal> or <literal>#f</literal> to answer
whether they are equal in whatever sense it chooses.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Primitive from (app scwm proplist)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/modules/proplist/scwmproplist.c"><filename>modules/proplist/scwmproplist.c</filename></ulink>
  at line 402 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/modules/proplist/scwmproplist.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="proplist-shallow-copy">
  <refnamediv>
    <refname>proplist-shallow-copy</refname>
    <refpurpose>Return a shallow copy of property list PL.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(proplist-shallow-copy pl)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return a shallow copy of property list <parameter>pl</parameter>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Primitive from (app scwm proplist)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/modules/proplist/scwmproplist.c"><filename>modules/proplist/scwmproplist.c</filename></ulink>
  at line 360 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/modules/proplist/scwmproplist.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="proplist-synchronize">
  <refnamediv>
    <refname>proplist-synchronize</refname>
    <refpurpose>Synchronize the in-memory proplist PL with the disk contents.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(proplist-synchronize pl)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Synchronize the in-memory proplist <parameter>pl</parameter> with the disk contents.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Primitive from (app scwm proplist)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/modules/proplist/scwmproplist.c"><filename>modules/proplist/scwmproplist.c</filename></ulink>
  at line 856 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/modules/proplist/scwmproplist.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="proplist-unregister">
  <refnamediv>
    <refname>proplist-unregister</refname>
    <refpurpose>No longer invoke callback when domain associated with PL-DOMAIN-NAME is changed.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(proplist-unregister pl-domain-name)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  No longer invoke callback when domain associated with <parameter>pl-domain-name</parameter> is changed.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Primitive from (app scwm proplist)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/modules/proplist/scwmproplist.c"><filename>modules/proplist/scwmproplist.c</filename></ulink>
  at line 703 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/modules/proplist/scwmproplist.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="publish-scwm-evaluator-servant">
  <refnamediv>
    <refname>publish-scwm-evaluator-servant</refname>
    <refpurpose>Publish the scwm-evaluator-servant by putting its IOR as a property on the root window.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(publish-scwm-evaluator-servant)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Publish the scwm-evaluator-servant by putting its IOR as a property on the root window.
The "SCWM_EVALUATOR_IOR" property of the root window will contain a
printable string for Corba clients to use to access the scwm-scheme-evaluator interface.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/corba.scm"><filename>scheme/corba.scm</filename></ulink>
  at line 30 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/corba.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="push-undo-global">
  <refnamediv>
    <refname>push-undo-global</refname>
    <refpurpose>Push the global state onto the undo list.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(push-undo-global)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Push the global state onto the undo list.
See also <link linkend="insert-undo-global"><function>insert-undo-global</function></link> which honours
the current position in the undo-list, undo-index.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm undo)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/undo.scm"><filename>scheme/undo.scm</filename></ulink>
  at line 60 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/undo.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="push-undo-state">
  <refnamediv>
    <refname>push-undo-state</refname>
    <refpurpose>Push STATE onto the undo list.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(push-undo-state state)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Push STATE onto the undo list.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm undo)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/undo.scm"><filename>scheme/undo.scm</filename></ulink>
  at line 71 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/undo.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="put-string-in-palm-clipboard">
  <refnamediv>
    <refname>put-string-in-palm-clipboard</refname>
    <refpurpose>No documentation supplied.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(put-string-in-palm-clipboard str)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  No documentation supplied.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/flux.scm"><filename>scheme/flux.scm</filename></ulink>
  at line 389 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/flux.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="quote-key-event">
  <refnamediv>
    <refname>quote-key-event</refname>
    <refpurpose>No documentation supplied.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(quote-key-event)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  No documentation supplied.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm quote)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/quote.scm"><filename>scheme/quote.scm</filename></ulink>
  at line 33 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/quote.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="quote-key-events-p">
  <refnamediv>
    <refname>quote-key-events?</refname>
    <refpurpose>Return <literal>#t</literal> iff key events are being qutoed.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(quote-key-events?)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return <literal>#t</literal> iff key events are being qutoed.
See also <link linkend="set-quote-key-events-x"><function>set-quote-key-events!</function></link>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/binding.c"><filename>scwm/binding.c</filename></ulink>
  at line 856 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/binding.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="quote-mouse-event">
  <refnamediv>
    <refname>quote-mouse-event</refname>
    <refpurpose>No documentation supplied.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(quote-mouse-event)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  No documentation supplied.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm quote)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/quote.scm"><filename>scheme/quote.scm</filename></ulink>
  at line 40 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/quote.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="quotify-single-quotes">
  <refnamediv>
    <refname>quotify-single-quotes</refname>
    <refpurpose>Return a string that has single quote characters backslashified.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(quotify-single-quotes str)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return a string that has single quote characters backslashified.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/flux.scm"><filename>scheme/flux.scm</filename></ulink>
  at line 155 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/flux.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="raise-by-one">
  <refnamediv>
    <refname>raise-by-one</refname>
    <refpurpose>Raise window W above the next window up that overlaps it.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(raise-by-one #&amp;optional (w (get-window)))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Raise window W above the next window up that overlaps it.
W defaults to the window context in the usual way.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/stacking.scm"><filename>scheme/stacking.scm</filename></ulink>
  at line 77 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/stacking.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="raise-group">
  <refnamediv>
    <refname>raise-group</refname>
    <refpurpose>Raise members of GROUP above all other windows.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(raise-group #&amp;optional (group (get-window)))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Raise members of GROUP above all other windows.
Keeps the relative stacking order of the members intact.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm group)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/group.scm"><filename>scheme/group.scm</filename></ulink>
  at line 81 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/group.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="raise-window">
  <refnamediv>
    <refname>raise-window</refname>
    <refpurpose>Raise WIN to the top of the window stack.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(raise-window  #&amp;optional win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Raise <parameter>win</parameter> to the top of the window stack.
Stays-on-top windows still take priority. <parameter>win</parameter> defaults to the window
context in the usual way if not specified.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/window.c"><filename>scwm/window.c</filename></ulink>
  at line 1804 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="raise-window-above">
  <refnamediv>
    <refname>raise-window-above</refname>
    <refpurpose>Restack window W immediately above W2.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(raise-window-above w w2)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Restack window W immediately above W2.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm stacking)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/stacking.scm"><filename>scheme/stacking.scm</filename></ulink>
  at line 62 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/stacking.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="raised-p">
  <refnamediv>
    <refname>raised?</refname>
    <refpurpose>Return <literal>#t</literal> if WIN is currently raised, <literal>#f</literal> if not.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(raised?  #&amp;optional win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return <literal>#t</literal> if <parameter>win</parameter> is currently raised, <literal>#f</literal> if not.
<parameter>win</parameter> defaults to the window context in the usual way if not
specified. A window is considered to be raised if the application
window (not the frame) is unobscured (or if this was the last
window you called <link linkend="raise-window"><function>raise-window</function></link> on).
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/window.c"><filename>scwm/window.c</filename></ulink>
  at line 1936 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="random-place-window">
  <refnamediv>
    <refname>random-place-window</refname>
    <refpurpose>Places WIN just as if being placed by fvwm2's RandomPlacement.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(random-place-window win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Places <parameter>win</parameter> just as if being placed by fvwm2's RandomPlacement.
This placement is not truly random; it is based on two state variables
which are incremented for the x and y coordinates, and which wrap
around once a window would be forced off the screen. The placement is
fairly arbitrary, but always succeeds, and so avoids user
interaction. <literal>#t</literal> is always returned.
This is called as part of <link linkend="default-placement-proc"><function>default-placement-proc</function></link>.  It could also be
used in user-defined placement procedures (see
<link linkend="set-window-placement-proc-x"><function>set-window-placement-proc!</function></link>).
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/placement.c"><filename>scwm/placement.c</filename></ulink>
  at line 527 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/placement.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="raw-binding-to-string">
  <refnamediv>
    <refname>raw-binding->string</refname>
    <refpurpose>No documentation supplied.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(raw-binding->string raw-binding)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  No documentation supplied.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/flux.scm"><filename>scheme/flux.scm</filename></ulink>
  at line 560 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/flux.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="read-and-append-to">
  <refnamediv>
    <refname>read-and-append-to</refname>
    <refpurpose>Read in the lines from port P and return them.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(read-and-append-to p #&amp;optional (l '()))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Read in the lines from port P and return them.
L is a the tail of the accumulating list. 
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/rgb-database.scm"><filename>scheme/rgb-database.scm</filename></ulink>
  at line 27 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/rgb-database.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="read-until-eof">
  <refnamediv>
    <refname>read-until-eof</refname>
    <refpurpose>Return all the text from input port IN until eof.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(read-until-eof in)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return all the text from input port IN until eof.
IN should be a newline-terminated Ascii input port.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/file.scm"><filename>scheme/file.scm</filename></ulink>
  at line 93 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/file.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="recapture">
  <refnamediv>
    <refname>recapture</refname>
    <refpurpose>Recapture all the windows.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(recapture)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Recapture all the windows.
This destroys all the current frame windows and recreate them from
scratch. This is hopefully not necessary during normal operation.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/miscprocs.c"><filename>scwm/miscprocs.c</filename></ulink>
  at line 256 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/miscprocs.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="rectangle-overlap-p">
  <refnamediv>
    <refname>rectangle-overlap?</refname>
    <refpurpose>Returns <literal>#t</literal> iff the two specified rectangles overlap.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(rectangle-overlap? x1 y1 w1 h1 x2 y2 w2 h2)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Returns <literal>#t</literal> iff the two specified rectangles overlap.
X1,Y1 and W1 x H1 are the position and size of the first rectangle.
X2,Y2 and W2 x H2 are the position and size of the second rectangle.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm wininfo)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/wininfo.scm"><filename>scheme/wininfo.scm</filename></ulink>
  at line 46 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/wininfo.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="redo">
  <refnamediv>
    <refname>redo</refname>
    <refpurpose>Redo the last undone operation.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(redo)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Redo the last undone operation.
This re-applyiesthe state at undo-index - 1.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm undo)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/undo.scm"><filename>scheme/undo.scm</filename></ulink>
  at line 107 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/undo.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="redo-all-passive-grabs">
  <refnamediv>
    <refname>redo-all-passive-grabs</refname>
    <refpurpose>Re-instate all passive grabs of keys and buttons of bindings.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(redo-all-passive-grabs)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Re-instate all passive grabs of keys and buttons of bindings.
See <link linkend="undo-all-passive-grabs"><function>undo-all-passive-grabs</function></link> for temporarily removing those bindings.
This procedure might be useful for re-establishing bindings after
quoting numerous keystrokes or mouse events.  Beware that it can
take several seconds to execute.
This procedure considers the state of <link linkend="ignore-dubious-modifiers-p"><function>ignore-dubious-modifiers?</function></link>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/binding.c"><filename>scwm/binding.c</filename></ulink>
  at line 1534 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/binding.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="redo-passive-grab">
  <refnamediv>
    <refname>redo-passive-grab</refname>
    <refpurpose>Re-instate the passive grab of KEYCODE-OR-BUTNUM with MODMASK on all windows.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(redo-passive-grab modmask keycode-or-butnum #&amp;optional mouse?)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Re-instate the passive grab of <parameter>keycode-or-butnum</parameter> with <parameter>modmask</parameter> on all windows.
If <parameter>mouse?</parameter> is <literal>#t</literal>, then treat <parameter>keycode-or-butnum</parameter> as a button number and remove
a grabe of a mouse binding.  Otherwise remove a keyboard passive grab.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/binding.c"><filename>scwm/binding.c</filename></ulink>
  at line 1571 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/binding.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="reduce">
  <refnamediv>
    <refname>reduce</refname>
    <refpurpose>Repeatedly apply PROC to a current value and a member of L.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(reduce proc init l)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Repeatedly apply PROC to a current value and a member of L.  The
initial current value is the first member of the list. The list is
processed from left to right. The final result is returned, unless the
list is empty, in which case INIT is returned. Compare to
<link linkend="accumulate"><function>accumulate</function></link>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm listops)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/listops.scm"><filename>scheme/listops.scm</filename></ulink>
  at line 61 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/listops.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="refresh">
  <refnamediv>
    <refname>refresh</refname>
    <refpurpose>Make sure all windows and their decorations are up to date.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(refresh)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Make sure all windows and their decorations are up to date.
This forces a redraw of the entire current viewport. Should not be
necessary during normal operation.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/miscprocs.c"><filename>scwm/miscprocs.c</filename></ulink>
  at line 150 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/miscprocs.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="refresh-window">
  <refnamediv>
    <refname>refresh-window</refname>
    <refpurpose>Refresh the decorations on window WIN.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(refresh-window  #&amp;optional win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Refresh the decorations on window <parameter>win</parameter>.
Refreshing ensuring that everything, including the decorations is up
to date. <link linkend="refresh"><function>refresh</function></link> does this in a more efficient way for all windows,
as well as the root. <parameter>win</parameter> defaults to the window context in the usual
way if not specified.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/window.c"><filename>scwm/window.c</filename></ulink>
  at line 2458 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="register-fvwm2-module-config">
  <refnamediv>
    <refname>register-fvwm2-module-config</refname>
    <refpurpose>No documentation supplied.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(register-fvwm2-module-config module-type . args)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  No documentation supplied.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm fvwm-module)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/fvwm-module.scm"><filename>scheme/fvwm-module.scm</filename></ulink>
  at line 395 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/fvwm-module.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="register-image-loader">
  <refnamediv>
    <refname>register-image-loader</refname>
    <refpurpose>Register PROC as the loader to use for images ending in EXTENSION.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(register-image-loader extension proc)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Register <parameter>proc</parameter> as the loader to use for images ending in <parameter>extension</parameter>.
<parameter>extension</parameter> must be a string beginning with a period, the
empty string (for files with no extension), or the string "default"
(for files that no other image loader succeeds in loading). <parameter>proc</parameter> will
be called with the full pathname of the image and should return an
image object, or <literal>#f</literal> if it succeeds.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/image.c"><filename>scwm/image.c</filename></ulink>
  at line 409 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/image.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="remove-input-hook-x">
  <refnamediv>
    <refname>remove-input-hook!</refname>
    <refpurpose>Remove an input hook identified by HANDLE.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(remove-input-hook! handle)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Remove an input hook identified by <parameter>handle</parameter>.
<parameter>handle</parameter> should be an object that was returned by <link linkend="add-input-hook-x"><function>add-input-hook!</function></link>. An
input hook may safely remove itself.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/callbacks.c"><filename>scwm/callbacks.c</filename></ulink>
  at line 868 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/callbacks.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="remove-motion-handler-x">
  <refnamediv>
    <refname>remove-motion-handler!</refname>
    <refpurpose>No longer call PROC on XMotionEvents.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(remove-motion-handler! proc)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  No longer call <parameter>proc</parameter> on XMotionEvents.
Handling motion events can considerably slow Scwm down so use it only when
necessary.  See <link linkend="add-motion-handler"><function>add-motion-handler</function></link> and <link linkend="reset-motion-handlers"><function>reset-motion-handlers</function></link>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/events.c"><filename>scwm/events.c</filename></ulink>
  at line 2047 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/events.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="remove-nonant-marker">
  <refnamediv>
    <refname>remove-nonant-marker</refname>
    <refpurpose>Remove a nonant marker from W.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(remove-nonant-marker #&amp;optional (w (get-window)))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Remove a nonant marker from W.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm window-selection)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/window-selection.scm"><filename>scheme/window-selection.scm</filename></ulink>
  at line 181 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/window-selection.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="remove-suffix">
  <refnamediv>
    <refname>remove-suffix</refname>
    <refpurpose>No documentation supplied.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(remove-suffix str suffix)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  No documentation supplied.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/flux.scm"><filename>scheme/flux.scm</filename></ulink>
  at line 595 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/flux.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="remove-timer-hook-x">
  <refnamediv>
    <refname>remove-timer-hook!</refname>
    <refpurpose>Remove a timer hook identified by HANDLE.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(remove-timer-hook! handle)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Remove a timer hook identified by <parameter>handle</parameter>.
The <parameter>handle</parameter> should be an object that was returned by
<link linkend="add-timer-hook-x"><function>add-timer-hook!</function></link>. No warning or error will occur if <parameter>handle</parameter> is for a
timer hook that has already been triggered.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/callbacks.c"><filename>scwm/callbacks.c</filename></ulink>
  at line 725 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/callbacks.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="rename-window-interactively">
  <refnamediv>
    <refname>rename-window-interactively</refname>
    <refpurpose>Prompt for a new name for WIN and change its title.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(rename-window-interactively #&amp;optional (win (get-window)))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Prompt for a new name for WIN and change its title.
WIN defaults as usual to the current window context.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm flux-gtk)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/flux-gtk.scm"><filename>scheme/flux-gtk.scm</filename></ulink>
  at line 25 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/flux-gtk.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="repeat">
  <refnamediv>
    <refname>repeat</refname>
    <refpurpose>Builds a list of repeating values.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(repeat . args)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Builds a list of repeating values.
ARGS must contain NUMBERs followed by VALUEs. Each VALUE is repeated NUMBER
times in the resulting list. E.g. (repeat 3 'a 2 'b 1 'c) => (a a a b b c)
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm listops)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/listops.scm"><filename>scheme/listops.scm</filename></ulink>
  at line 234 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/listops.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="report-scwm-usage">
  <refnamediv>
    <refname>report-scwm-usage</refname>
    <refpurpose>Log your usage of scwm to a central host.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(report-scwm-usage)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Log your usage of scwm to a central host.
The data sent includes the version of scwm you are running and your
hostname. If the environment variable SCWM_DO_NOT_LOG_USAGE is set,
however, no message will be sent even if this function is called.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/report-usage.scm"><filename>scheme/report-usage.scm</filename></ulink>
  at line 42 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/report-usage.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="reset-background-x">
  <refnamediv>
    <refname>reset-background!</refname>
    <refpurpose>Resets the root window to the default "weave".</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(reset-background!)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Resets the root window to the default "weave".
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Primitive from (app scwm background)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/modules/background/background.c"><filename>modules/background/background.c</filename></ulink>
  at line 197 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/modules/background/background.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="reset-constraints">
  <refnamediv>
    <refname>reset-constraints</refname>
    <refpurpose>Reset the constraint solving system.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(reset-constraints)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Reset the constraint solving system.
This switches to a fresh new master solver object, and resets
the global list of ui-constraint instances (so the menu of
constraints is reset to empty).
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm constraints)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/constraints.scm"><filename>scheme/constraints.scm</filename></ulink>
  at line 19 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/constraints.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="reset-input-hook-x">
  <refnamediv>
    <refname>reset-input-hook!</refname>
    <refpurpose>Remove all procedures from the input hook.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(reset-input-hook!)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Remove all procedures from the input hook.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/callbacks.c"><filename>scwm/callbacks.c</filename></ulink>
  at line 885 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/callbacks.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="reset-motion-handlers-x">
  <refnamediv>
    <refname>reset-motion-handlers!</refname>
    <refpurpose>Call no procedures on XMotionEvents.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(reset-motion-handlers!)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Call no procedures on XMotionEvents.
Handling motion events can considerably slow Scwm down so use it only when
necessary.  See <link linkend="add-motion-handler"><function>add-motion-handler</function></link> and <link linkend="remove-motion-handler"><function>remove-motion-handler</function></link>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/events.c"><filename>scwm/events.c</filename></ulink>
  at line 2063 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/events.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="reset-on-segv">
  <refnamediv>
    <refname>reset-on-segv</refname>
    <refpurpose>Return the number of segv signals Scwm will reset on.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(reset-on-segv)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the number of segv signals Scwm will reset on.
See <link linkend="set-reset-on-segv-x"><function>set-reset-on-segv!</function></link>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/miscprocs.c"><filename>scwm/miscprocs.c</filename></ulink>
  at line 657 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/miscprocs.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="reset-scwmexec-protocol">
  <refnamediv>
    <refname>reset-scwmexec-protocol</refname>
    <refpurpose>Reset the scwmexec protocol.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(reset-scwmexec-protocol)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Reset the scwmexec protocol.
This procedure removes the "XA_SCWMEXEC_REQUEST" property on the
root window.  It should not be necessary but may be useful in case
your X server goes awry (and otherwise you would have to restart your
X server).  Use if scwmexec or scwmrepl are not returning (e.g.,
if your Emacs hangs when you try evaluating a scwm expression).
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/events.c"><filename>scwm/events.c</filename></ulink>
  at line 582 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/events.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="reset-timer-hook-x">
  <refnamediv>
    <refname>reset-timer-hook!</refname>
    <refpurpose>Remove all timer-hook procedures.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(reset-timer-hook!)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Remove all timer-hook procedures.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/callbacks.c"><filename>scwm/callbacks.c</filename></ulink>
  at line 739 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/callbacks.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="reset-ui-constraint-classes-x">
  <refnamediv>
    <refname>reset-ui-constraint-classes!</refname>
    <refpurpose>Empty the global list of ui-constraint-classes.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(reset-ui-constraint-classes!)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Empty the global list of ui-constraint-classes.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm ui-constraints)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/ui-constraints.scm"><filename>scheme/ui-constraints.scm</filename></ulink>
  at line 117 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/ui-constraints.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="reset-undo-x">
  <refnamediv>
    <refname>reset-undo!</refname>
    <refpurpose>Reset the undo system.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(reset-undo!)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Reset the undo system.
Clears the list of states.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm undo)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/undo.scm"><filename>scheme/undo.scm</filename></ulink>
  at line 33 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/undo.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="resize-frame-to">
  <refnamediv>
    <refname>resize-frame-to</refname>
    <refpurpose>Resize WIN to a size of W by H in pixels.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(resize-frame-to w h #&amp;optional win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Resize <parameter>win</parameter> to a size of <parameter>w</parameter> by <parameter>h</parameter> in pixels.
The size includes the window decorations. <parameter>win</parameter> defaults to the window
context in the usual way if not specified.  The resulting size
of the frame may not be <parameter>w</parameter> by <parameter>h</parameter> due to rounding to the nearest
acceptable size for the client window (e.g., Emacs windows can
only be sizes that are multiples of the basic character size).
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/window.c"><filename>scwm/window.c</filename></ulink>
  at line 2390 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="resize-to">
  <refnamediv>
    <refname>resize-to</refname>
    <refpurpose>Resize WIN's client area to a size of W by H in pixels.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(resize-to w h #&amp;optional win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Resize <parameter>win</parameter>'s client area to a size of <parameter>w</parameter> by <parameter>h</parameter> in pixels.
The size does not include the window decorations -- only the client
application size. <parameter>win</parameter> defaults to the window
context in the usual way if not specified.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/window.c"><filename>scwm/window.c</filename></ulink>
  at line 2350 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="resize-window">
  <refnamediv>
    <refname>resize-window</refname>
    <refpurpose>Resize WIN's client area to a size of W by H in pixels.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(resize-window w h #&amp;optional (win (get-window)))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Resize WIN's client area to a size of W by H in pixels. 
The size does not include the window decorations -- only the client
application size. WIN defaults to the window context in the usual way
if not specified.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm winops)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/winops.scm"><filename>scheme/winops.scm</filename></ulink>
  at line 286 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/winops.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="resource-match--p">
  <refnamediv>
    <refname>resource-match??</refname>
    <refpurpose>Return a predicate that tests a window's resource instance.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(resource-match?? STRING TYPE CASE-SENSITIVE?)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return a predicate that tests a window's resource instance.  
When applied to a window, this predicate will return true if the
resource instance matches STRING in the manner specified by the
optional argument TYPE, which may be 'exact, 'regexp, or
'wildcard. The optional CASE-SENSITIVE argument determines whether the
matching is case-sensitive or not.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm wininfo)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/wininfo.scm"><filename>scheme/wininfo.scm</filename></ulink>
  at line 304 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/wininfo.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="restack-windows">
  <refnamediv>
    <refname>restack-windows</refname>
    <refpurpose>Restack the windows in WINLIST from front to back.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(restack-windows winlist)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Restack the windows in <parameter>winlist</parameter> from front to back.
The first element of <parameter>winlist</parameter> will be kept in its current stacking
order, the remainder will be stacked immediately below it in the order
given. (Note: This will currently confuse the heck out of the pager
and possibly other legacy fvwm2 modules).
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/window.c"><filename>scwm/window.c</filename></ulink>
  at line 1847 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="restart">
  <refnamediv>
    <refname>restart</refname>
    <refpurpose>Restart the window manager.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(restart  #&amp;optional command)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Restart the window manager. If <parameter>command</parameter> is specified, use
that, as the new window manager to run. If <parameter>command</parameter> is not specified or
is exactly equal to "scwm", restart scwm with the same command-line
arguments as given previously.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/shutdown.c"><filename>scwm/shutdown.c</filename></ulink>
  at line 176 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/shutdown.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="restarted-p">
  <refnamediv>
    <refname>restarted?</refname>
    <refpurpose>Returns true if scwm is being restarted by itself.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(restarted?)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Returns true if scwm is being restarted by itself.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/miscprocs.c"><filename>scwm/miscprocs.c</filename></ulink>
  at line 127 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/miscprocs.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="restore-global-window-configuration">
  <refnamediv>
    <refname>restore-global-window-configuration</refname>
    <refpurpose>Restore the states of all windows from GLOBAL-CONFIGURATION.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(restore-global-window-configuration global-configuration)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Restore the states of all windows from GLOBAL-CONFIGURATION.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/window-configuration.scm"><filename>scheme/window-configuration.scm</filename></ulink>
  at line 70 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/window-configuration.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="restore-scwm-handlers">
  <refnamediv>
    <refname>restore-scwm-handlers</refname>
    <refpurpose>Restore the scwm behavior for signals and for X errors.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(restore-scwm-handlers)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Restore the scwm behavior for signals and for X errors.
This is automatically called when (app scwm gtk) is loaded, to clean up
after the (gtk gtk) module.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Primitive from (app scwm scwmgtkhelper)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/modules/scwmgtkhelper/scwmgtkhelper.c"><filename>modules/scwmgtkhelper/scwmgtkhelper.c</filename></ulink>
  at line 72 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/modules/scwmgtkhelper/scwmgtkhelper.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="restore-window-configuration">
  <refnamediv>
    <refname>restore-window-configuration</refname>
    <refpurpose>Restore the state of WIN from GLOBAL-CONFIGURATION.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(restore-window-configuration global-configuration 
					     #&amp;optional (win (get-window)))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Restore the state of WIN from GLOBAL-CONFIGURATION.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm window-configuration)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/window-configuration.scm"><filename>scheme/window-configuration.scm</filename></ulink>
  at line 58 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/window-configuration.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="reverse-iota">
  <refnamediv>
    <refname>reverse-iota</refname>
    <refpurpose>Generate a list of the integers from N-1 to 0 in order.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(reverse-iota n)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Generate a list of the integers from N-1 to 0 in order.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm listops)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/listops.scm"><filename>scheme/listops.scm</filename></ulink>
  at line 49 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/listops.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="rgb-colors">
  <refnamediv>
    <refname>rgb-colors</refname>
    <refpurpose>Read in the rgb-colors database.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(rgb-colors)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Read in the rgb-colors database.
Requires uniq, awk, /usr/X11R6/lib/X11/rgb.txt.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/rgb-database.scm"><filename>scheme/rgb-database.scm</filename></ulink>
  at line 35 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/rgb-database.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="round-d">
  <refnamediv>
    <refname>round/</refname>
    <refpurpose>Return the closest integer to X divided by Y.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(round/ x y)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the closest integer to X divided by Y.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm base)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/base.scm"><filename>scheme/base.scm</filename></ulink>
  at line 52 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/base.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="rubber-band-move">
  <refnamediv>
    <refname>rubber-band-move</refname>
    <refpurpose>Move WIN interactively, using a rubber band frame.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(rubber-band-move  #&amp;optional win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Move <parameter>win</parameter> interactively, using a rubber band frame.
Returns a list '(X Y) which is the new viewport position of <parameter>win</parameter>.
This allows the user to drag a rubber band frame around the
screen. <parameter>win</parameter> defaults to the window context in the usual way if not
specified.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/move.c"><filename>scwm/move.c</filename></ulink>
  at line 535 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/move.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="rubber-band-resize">
  <refnamediv>
    <refname>rubber-band-resize</refname>
    <refpurpose>Resize WIN interactively, using a rubber band frame.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(rubber-band-resize  #&amp;optional win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Resize <parameter>win</parameter> interactively, using a rubber band frame.
Returns a list '(width height) that is the new size of <parameter>win</parameter>.
This allows the user to drag a rubber band frame to set the size of
the window. <parameter>win</parameter> defaults to the window context in the usual way if not
specified.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/resize.c"><filename>scwm/resize.c</filename></ulink>
  at line 640 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/resize.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="run-dot-xclients-at-startup">
  <refnamediv>
    <refname>run-dot-xclients-at-startup</refname>
    <refpurpose>After done reading your startup file, run your ~/.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(run-dot-xclients-at-startup)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  After done reading your startup file, run your ~/.xclients script.
Uses the <link linkend="startup-hook"><function>startup-hook</function></link> and <link linkend="run-dot-xclients-script"><function>run-dot-xclients-script</function></link> to do so.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm base)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/base.scm"><filename>scheme/base.scm</filename></ulink>
  at line 756 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/base.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="run-dot-xclients-script">
  <refnamediv>
    <refname>run-dot-xclients-script</refname>
    <refpurpose>Runs the ~/.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(run-dot-xclients-script)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Runs the ~/.xclients script.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm base)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/base.scm"><filename>scheme/base.scm</filename></ulink>
  at line 752 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/base.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="run-fvwm2-module">
  <refnamediv>
    <refname>run-fvwm2-module</refname>
    <refpurpose>No documentation supplied.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(run-fvwm2-module module-name #&amp;optional
				  (other-args '())	       
				  (config-file "~/.fvwm2rc")
				  (config-info
				   (append (aux-config-info)
                                           (get-fvwm2-module-config
					    (basename module-name)))))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  No documentation supplied.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm fvwm-module)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/fvwm-module.scm"><filename>scheme/fvwm-module.scm</filename></ulink>
  at line 423 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/fvwm-module.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="run-in-netscape">
  <refnamediv>
    <refname>run-in-netscape</refname>
    <refpurpose>Runs COMMAND in a Netscape window, calling COMPLETION when done, if set.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(run-in-netscape command completion #&amp;optional (netwin (netscape-win)))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Runs COMMAND in a Netscape window, calling COMPLETION when done, if set.
Uses Netscape window NETWIN if specifies, or one found by (netscape-win)
otherwise; it is an error if NETWIN refers to a non-Netscape window.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm netscape)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/netscape.scm"><filename>scheme/netscape.scm</filename></ulink>
  at line 41 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/netscape.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="run-in-xterm">
  <refnamediv>
    <refname>run-in-xterm</refname>
    <refpurpose>Return a procedure that runs CMD in an xterm.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(run-in-xterm cmd . opts)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return a procedure that runs CMD in an xterm.
Uses the variable `*xterm-command*' to determine how
to run an xterm.  CMD may include options to the command.
The rest of the arguments are passed as options to the xterm command.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm base)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/base.scm"><filename>scheme/base.scm</filename></ulink>
  at line 575 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/base.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="run-ScwmButtons">
  <refnamediv>
    <refname>run-ScwmButtons</refname>
    <refpurpose>No documentation supplied.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(run-ScwmButtons button-item-list #&amp;key (orientation 'horizontal)
				 (name "ScwmButtons") (auto-orient #t)
				 (auto-orient-margin 100))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  No documentation supplied.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm ScwmButtons)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/ScwmButtons.scm"><filename>scheme/ScwmButtons.scm</filename></ulink>
  at line 86 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/ScwmButtons.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="run-ScwmClock">
  <refnamediv>
    <refname>run-ScwmClock</refname>
    <refpurpose>No documentation supplied.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(run-ScwmClock #&amp;key (24-hour #t) (show-timezone #t)
			       (update-interval 1) (parent #f))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  No documentation supplied.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm ScwmClock)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/ScwmClock.scm"><filename>scheme/ScwmClock.scm</filename></ulink>
  at line 33 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/ScwmClock.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="run-ScwmDeskButtons">
  <refnamediv>
    <refname>run-ScwmDeskButtons</refname>
    <refpurpose>No documentation supplied.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(run-ScwmDeskButtons desks #&amp;key desk-names)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  No documentation supplied.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm ScwmDeskButtons)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/ScwmDeskButtons.scm"><filename>scheme/ScwmDeskButtons.scm</filename></ulink>
  at line 39 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/ScwmDeskButtons.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="safe-load">
  <refnamediv>
    <refname>safe-load</refname>
    <refpurpose>Load file FNAME while trapping and displaying errors.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(safe-load fname)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Load file <parameter>fname</parameter> while trapping and displaying errors.
Each individual top-level-expression is evaluated separately and all
errors are trapped and displayed.  You should use this procedure if
you need to make sure most of a file loads, even if it may contain
errors.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/callbacks.c"><filename>scwm/callbacks.c</filename></ulink>
  at line 637 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/callbacks.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="save-preferences">
  <refnamediv>
    <refname>save-preferences</refname>
    <refpurpose>Save the current Scwm preferences to FILENAME.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(save-preferences #&amp;optional 
				 (filename (string-append (getenv "HOME") "/.scwm-options")))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Save the current Scwm preferences to FILENAME.
FILENAME defaults to $HOME/.scwm-options if not specified.
The string written is generated by <link linkend="scwm-options-string"><function>scwm-options-string</function></link>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm preferences)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/preferences.scm"><filename>scheme/preferences.scm</filename></ulink>
  at line 516 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/preferences.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="save-settings">
  <refnamediv>
    <refname>save-settings</refname>
    <refpurpose>No documentation supplied.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(save-settings)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  No documentation supplied.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm prefs-menu)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/prefs-menu.scm"><filename>scheme/prefs-menu.scm</filename></ulink>
  at line 48 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/prefs-menu.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="scwm-gdk-X-fdes">
  <refnamediv>
    <refname>scwm-gdk-X-fdes</refname>
    <refpurpose>Return the integer connection number of the gdk_display.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(scwm-gdk-X-fdes)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the integer connection number of the gdk_display.
Returns -1 if gdk_display is not initialized.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Primitive from (app scwm scwmgtkhelper)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/modules/scwmgtkhelper/scwmgtkhelper.c"><filename>modules/scwmgtkhelper/scwmgtkhelper.c</filename></ulink>
  at line 34 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/modules/scwmgtkhelper/scwmgtkhelper.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="scwm-group-docstring">
  <refnamediv>
    <refname>scwm-group-docstring</refname>
    <refpurpose>Return the prettified name for group SYM.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(scwm-group-docstring sym)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the prettified name for group SYM.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm defoption)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/defoption.scm"><filename>scheme/defoption.scm</filename></ulink>
  at line 90 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/defoption.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="scwm-group-icon">
  <refnamediv>
    <refname>scwm-group-icon</refname>
    <refpurpose>Return the icon for group SYM.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(scwm-group-icon sym)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the icon for group SYM.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm defoption)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/defoption.scm"><filename>scheme/defoption.scm</filename></ulink>
  at line 95 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/defoption.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="scwm-group-name">
  <refnamediv>
    <refname>scwm-group-name</refname>
    <refpurpose>Return the prettified name for group SYM.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(scwm-group-name sym)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the prettified name for group SYM.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm defoption)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/defoption.scm"><filename>scheme/defoption.scm</filename></ulink>
  at line 85 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/defoption.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="scwm-group-properties">
  <refnamediv>
    <refname>scwm-group-properties</refname>
    <refpurpose>Return the group properties for group SYM.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(scwm-group-properties sym)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the group properties for group SYM.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm defoption)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/defoption.scm"><filename>scheme/defoption.scm</filename></ulink>
  at line 81 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/defoption.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="scwm-gtk-sync">
  <refnamediv>
    <refname>scwm-gtk-sync</refname>
    <refpurpose>Dispatch all pending gtk-events.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(scwm-gtk-sync)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Dispatch all pending gtk-events.
This ought to be called from inside Scwm-controlled loops that do not return
to the main event loop
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm gtk)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/gtk.scm"><filename>scheme/gtk.scm</filename></ulink>
  at line 38 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/gtk.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="scwm-is-constraint-enabled-p">
  <refnamediv>
    <refname>scwm-is-constraint-enabled?</refname>
    <refpurpose>Return <literal>#t</literal> if scwm has the constraint solver primitives, <literal>#f</literal> otherwise.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(scwm-is-constraint-enabled?)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return <literal>#t</literal> if scwm has the constraint solver primitives, <literal>#f</literal> otherwise.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm base)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/base.scm"><filename>scheme/base.scm</filename></ulink>
  at line 651 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/base.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="scwm-last-timestamp">
  <refnamediv>
    <refname>scwm-last-timestamp</refname>
    <refpurpose>Return the timestamp of the last event Scwm handled.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(scwm-last-timestamp)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the timestamp of the last event Scwm handled.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/miscprocs.c"><filename>scwm/miscprocs.c</filename></ulink>
  at line 445 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/miscprocs.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="scwm-module-loaded-p">
  <refnamediv>
    <refname>scwm-module-loaded?</refname>
    <refpurpose>Return <literal>#t</literal> iff MODULE has been loaded.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(scwm-module-loaded? module)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return <literal>#t</literal> iff MODULE has been loaded.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/minimal.scm"><filename>scheme/minimal.scm</filename></ulink>
  at line 128 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/minimal.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="scwm-option-documentation">
  <refnamediv>
    <refname>scwm-option-documentation</refname>
    <refpurpose>Return the documentation for SYM.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(scwm-option-documentation sym)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the documentation for SYM.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm defoption)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/defoption.scm"><filename>scheme/defoption.scm</filename></ulink>
  at line 185 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/defoption.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="scwm-option-favorites">
  <refnamediv>
    <refname>scwm-option-favorites</refname>
    <refpurpose>Return the favorites for SYM.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(scwm-option-favorites sym)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the favorites for SYM.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm defoption)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/defoption.scm"><filename>scheme/defoption.scm</filename></ulink>
  at line 205 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/defoption.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="scwm-option-getter">
  <refnamediv>
    <refname>scwm-option-getter</refname>
    <refpurpose>Return the getter for SYM.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(scwm-option-getter sym)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the getter for SYM.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm defoption)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/defoption.scm"><filename>scheme/defoption.scm</filename></ulink>
  at line 195 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/defoption.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="scwm-option-group">
  <refnamediv>
    <refname>scwm-option-group</refname>
    <refpurpose>Return the group for SYM.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(scwm-option-group sym)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the group for SYM.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm defoption)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/defoption.scm"><filename>scheme/defoption.scm</filename></ulink>
  at line 210 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/defoption.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="scwm-option-layout-hint">
  <refnamediv>
    <refname>scwm-option-layout-hint</refname>
    <refpurpose>Return the permit-disable flag for SYM.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(scwm-option-layout-hint sym)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the permit-disable flag for SYM.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm defoption)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/defoption.scm"><filename>scheme/defoption.scm</filename></ulink>
  at line 220 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/defoption.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="scwm-option-module">
  <refnamediv>
    <refname>scwm-option-module</refname>
    <refpurpose>Return the module in which option SYM was defined.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(scwm-option-module sym)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the module in which option SYM was defined.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm defoption)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/defoption.scm"><filename>scheme/defoption.scm</filename></ulink>
  at line 175 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/defoption.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="scwm-option-name">
  <refnamediv>
    <refname>scwm-option-name</refname>
    <refpurpose>Return the name of SYM.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(scwm-option-name sym)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the name of SYM.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm defoption)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/defoption.scm"><filename>scheme/defoption.scm</filename></ulink>
  at line 180 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/defoption.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="scwm-option-permit-disable">
  <refnamediv>
    <refname>scwm-option-permit-disable</refname>
    <refpurpose>Return the permit-disable flag for SYM.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(scwm-option-permit-disable sym)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the permit-disable flag for SYM.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm defoption)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/defoption.scm"><filename>scheme/defoption.scm</filename></ulink>
  at line 215 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/defoption.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="scwm-option-range">
  <refnamediv>
    <refname>scwm-option-range</refname>
    <refpurpose>Return the range for SYM.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(scwm-option-range sym)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the range for SYM.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm defoption)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/defoption.scm"><filename>scheme/defoption.scm</filename></ulink>
  at line 200 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/defoption.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="scwm-option-setter">
  <refnamediv>
    <refname>scwm-option-setter</refname>
    <refpurpose>Return the setter for SYM.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(scwm-option-setter sym)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the setter for SYM.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm defoption)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/defoption.scm"><filename>scheme/defoption.scm</filename></ulink>
  at line 190 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/defoption.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="scwm-option-short-documentation">
  <refnamediv>
    <refname>scwm-option-short-documentation</refname>
    <refpurpose>No documentation supplied.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(scwm-option-short-documentation sym)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  No documentation supplied.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm preferences)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/preferences.scm"><filename>scheme/preferences.scm</filename></ulink>
  at line 66 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/preferences.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="scwm-option-symget">
  <refnamediv>
    <refname>scwm-option-symget</refname>
    <refpurpose>Get option SYM's value.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(scwm-option-symget sym)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Get option SYM's value.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/defoption.scm"><filename>scheme/defoption.scm</filename></ulink>
  at line 259 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/defoption.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="scwm-option-symset-x">
  <refnamediv>
    <refname>scwm-option-symset!</refname>
    <refpurpose>Set option SYM to VALUE.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(scwm-option-symset! sym value)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Set option SYM to VALUE.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm defoption)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/defoption.scm"><filename>scheme/defoption.scm</filename></ulink>
  at line 250 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/defoption.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="scwm-option-type">
  <refnamediv>
    <refname>scwm-option-type</refname>
    <refpurpose>Return the type for SYM.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(scwm-option-type sym)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the type for SYM.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm defoption)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/defoption.scm"><filename>scheme/defoption.scm</filename></ulink>
  at line 225 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/defoption.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="scwm-options-dialog">
  <refnamediv>
    <refname>scwm-options-dialog</refname>
    <refpurpose>Popup a scwm options dialog box.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(scwm-options-dialog)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Popup a scwm options dialog box.
You may need to use-modules all the modules that contain
scwm-options to have this work for now.
Put "(load-preferences)" in your .scwmrc where you
want the saved preferences to take effect.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm preferences)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/preferences.scm"><filename>scheme/preferences.scm</filename></ulink>
  at line 266 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/preferences.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="scwm-options-listbook">
  <refnamediv>
    <refname>scwm-options-listbook</refname>
    <refpurpose>No documentation supplied.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(scwm-options-listbook done-action cancel-action)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  No documentation supplied.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm preferences)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/preferences.scm"><filename>scheme/preferences.scm</filename></ulink>
  at line 332 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/preferences.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="scwm-options-menu">
  <refnamediv>
    <refname>scwm-options-menu</refname>
    <refpurpose>No documentation supplied.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(scwm-options-menu)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  No documentation supplied.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm preferences)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/preferences.scm"><filename>scheme/preferences.scm</filename></ulink>
  at line 237 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/preferences.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="scwm-options-notebook">
  <refnamediv>
    <refname>scwm-options-notebook</refname>
    <refpurpose>No documentation supplied.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(scwm-options-notebook done-action cancel-action)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  No documentation supplied.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm preferences)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/preferences.scm"><filename>scheme/preferences.scm</filename></ulink>
  at line 312 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/preferences.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="scwm-options-string">
  <refnamediv>
    <refname>scwm-options-string</refname>
    <refpurpose>Return a string that, when evalled, resets preferences to current values.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(scwm-options-string #&amp;optional (syms scwm-options))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return a string that, when evalled, resets preferences to current values.
SYMS is a list of all the preference settings you wish to be included in
the string.  It defaults to the value of <link linkend="scwm-options"><function>scwm-options</function></link>, the list of all
the options in the current session.  At present this means that if some
modules are not loaded, those options will not be included.
The returned string will contain multiple S-expressions, one for each Scwm preference
value.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm preferences)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/preferences.scm"><filename>scheme/preferences.scm</filename></ulink>
  at line 487 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/preferences.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="scwm-options-vbox-page">
  <refnamediv>
    <refname>scwm-options-vbox-page</refname>
    <refpurpose>Popup a scwm options dialog box.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(scwm-options-vbox-page parent done-action cancel-action title syms)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Popup a scwm options dialog box.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm preferences)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/preferences.scm"><filename>scheme/preferences.scm</filename></ulink>
  at line 375 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/preferences.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="scwm-path-exec-prefix">
  <refnamediv>
    <refname>scwm-path-exec-prefix</refname>
    <refpurpose>Return the <envar>$EXEC_PREFIX</envar> directory path that scwm was installed with.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(scwm-path-exec-prefix)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the <envar>$EXEC_PREFIX</envar> directory path that scwm was installed with.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/miscprocs.c"><filename>scwm/miscprocs.c</filename></ulink>
  at line 487 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/miscprocs.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="scwm-path-prefix">
  <refnamediv>
    <refname>scwm-path-prefix</refname>
    <refpurpose>Return the <envar>$PREFIX</envar> directory path that scwm was installed with.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(scwm-path-prefix)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the <envar>$PREFIX</envar> directory path that scwm was installed with.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/miscprocs.c"><filename>scwm/miscprocs.c</filename></ulink>
  at line 477 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/miscprocs.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="scwm-quit">
  <refnamediv>
    <refname>scwm-quit</refname>
    <refpurpose>Exit scwm cleanly.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(scwm-quit  . args)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Exit scwm cleanly. <link linkend="quit"><function>quit</function></link> is redefined as this within
scwm. <parameter>args</parameter> is ignored.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/shutdown.c"><filename>scwm/shutdown.c</filename></ulink>
  at line 198 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/shutdown.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="scwm-system">
  <refnamediv>
    <refname>scwm-system</refname>
    <refpurpose>Run CMD using /bin/sh -c CMD and return a list: (exit-status child-pid).</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(scwm-system cmd)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Run CMD using /bin/sh -c CMD and return a list: (exit-status child-pid).
Note that the child pid is of the executed sh, not CMD.
The CMD is run synchronously, and Bourne-shell meta characters
are interpreted by /bin/sh.  E.g., to start CMD in the background,
use a trailing "&amp;" character.  See also guile's <link linkend="system"><function>system</function></link>, but note
that it may permit signals on the controlling tty to be seen
by children (observed on Linux, Free/NetBSD, but not on Solaris or HP/UX.
This may be a bug (not meeting POSIX.2 specifications).
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm base)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/base.scm"><filename>scheme/base.scm</filename></ulink>
  at line 655 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/base.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="scwm-version">
  <refnamediv>
    <refname>scwm-version</refname>
    <refpurpose>Return the version of scwm running.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(scwm-version)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the version of scwm running.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/miscprocs.c"><filename>scwm/miscprocs.c</filename></ulink>
  at line 456 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/miscprocs.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="scwm-version-date">
  <refnamediv>
    <refname>scwm-version-date</refname>
    <refpurpose>Return the date that the running scwm was last changed as a string.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(scwm-version-date)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the date that the running scwm was last changed as a string.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/miscprocs.c"><filename>scwm/miscprocs.c</filename></ulink>
  at line 466 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/miscprocs.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="sec-to-usec">
  <refnamediv>
    <refname>sec->usec</refname>
    <refpurpose>Convert SEC seconds into an equivalent number of microseconds.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(sec->usec sec)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Convert SEC seconds into an equivalent number of microseconds.
Especially useful for add-hook! and other timing related procedures
that take microseconds.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm time-convert)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/time-convert.scm"><filename>scheme/time-convert.scm</filename></ulink>
  at line 24 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/time-convert.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="select-matching-windows">
  <refnamediv>
    <refname>select-matching-windows</refname>
    <refpurpose>Select windows for which predicate PROC returns <literal>#t</literal>.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(select-matching-windows proc)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Select windows for which predicate PROC returns <literal>#t</literal>.
PROC might be one of <link linkend="resource-match--p"><function>resource-match??</function></link>, <link linkend="class-match--p"><function>class-match??</function></link>, etc.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm window-selection)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/window-selection.scm"><filename>scheme/window-selection.scm</filename></ulink>
  at line 91 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/window-selection.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="select-multiple-windows-interactively">
  <refnamediv>
    <refname>select-multiple-windows-interactively</refname>
    <refpurpose>Return a list of user-selected windows, up to MAX.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(select-multiple-windows-interactively
		 #&amp;optional (max 32000) (proc-when-selected #f))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return a list of user-selected windows, up to MAX.
The list is in the reverse order from the way by which they were selected.
PROC-WHEN-SELECTED will be run on each window as it is selected.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm window-selection)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/window-selection.scm"><filename>scheme/window-selection.scm</filename></ulink>
  at line 127 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/window-selection.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="select-viewport-position">
  <refnamediv>
    <refname>select-viewport-position</refname>
    <refpurpose>Select a viewport position and return the window there.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(select-viewport-position  #&amp;optional cursor release?)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Select a viewport position and return the window there.
Use a special cursor and let the user click to select a viewport
position Returns a list of three items: (selected-window viewport-x
viewport-y).  selected-window is either the window object
corresponding to the selected window, a window id as an integer,
or <literal>#f</literal> if no window was selected.
viewport-x and viewport-y give the position in the viewport that the
cursor was located when the selection was finalized.  <parameter>release?</parameter>
indicates whether to whether to wait for a mouse release or act
immediately on the click.  <parameter>cursor</parameter> is the cursor object to use, or
<literal>#t</literal> for the "skull and cross-bones" kill cursor
(recommended for destructive operations like delete-window and
destroy-window), or <literal>#f</literal> or omitted for the standard circle cursor.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/window.c"><filename>scwm/window.c</filename></ulink>
  at line 901 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="select-window">
  <refnamediv>
    <refname>select-window</refname>
    <refpurpose>Select a window interactively, and return the specified window.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(select-window #&amp;optional (cursor #f) (release? #f))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Select a window interactively, and return the specified window.
Use a special cursor and let the user click to select the window. 
The optional CURSOR argument can be either a cursor object or <literal>#t</literal> to
indicate to use the "skull and cross-bones" kill cursor (recommended for destructive
operations like delete-window and destroy-window).
The optional argument RELEASE? indicates whether to wait
for a mouse release or act immediately on the click. 
Returns <literal>#f</literal> if no window was selected.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm base)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/base.scm"><filename>scheme/base.scm</filename></ulink>
  at line 722 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/base.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="select-window-add">
  <refnamediv>
    <refname>select-window-add</refname>
    <refpurpose>Select a single window, highlight it, and add it to the selected-windows-list.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(select-window-add #&amp;optional (w (get-window-with-nonant)))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Select a single window, highlight it, and add it to the selected-windows-list.
The selected window is returned and will remain highlighted
until <link linkend="unflash-window"><function>unflash-window</function></link> is called on that window.  The selected
window is also added to a selected-windows list that can be
accessed via <link linkend="selected-windows-list"><function>selected-windows-list</function></link>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm window-selection)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/window-selection.scm"><filename>scheme/window-selection.scm</filename></ulink>
  at line 62 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/window-selection.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="select-window-from-window-list">
  <refnamediv>
    <refname>select-window-from-window-list</refname>
    <refpurpose>Permit selecting a window from a window list.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(select-window-from-window-list #&amp;key
						(only '()) (except '())
						(ignore-winlist-skip #f))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Permit selecting a window from a window list.
Return the selected window object, or <literal>#f</literal> if none was selected
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm winlist)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/winlist.scm"><filename>scheme/winlist.scm</filename></ulink>
  at line 244 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/winlist.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="select-window-group">
  <refnamediv>
    <refname>select-window-group</refname>
    <refpurpose>Prompt for multiple windows and return the list of selected windows.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(select-window-group)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Prompt for multiple windows and return the list of selected windows.
Windows are highlighted (see <link linkend="flash-window"><function>flash-window</function></link>) as they are selected.  The
returned list can be used to un-highlight the windows:
 (let ((winlist (select-window-group)))
   (for-each (lambda (w) (unflash-window w)) winlist))
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/flux.scm"><filename>scheme/flux.scm</filename></ulink>
  at line 248 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/flux.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="select-window-interactively">
  <refnamediv>
    <refname>select-window-interactively</refname>
    <refpurpose>Return an interactively-selected window after prompting (optionally) with MSG.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(select-window-interactively #&amp;optional (msg #f) (message-window #f))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return an interactively-selected window after prompting (optionally) with MSG.
If given, use message window MESSAGE-WINDOW to display the message, otherwise create
a new message window.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm base)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/base.scm"><filename>scheme/base.scm</filename></ulink>
  at line 736 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/base.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="select-window-remove">
  <refnamediv>
    <refname>select-window-remove</refname>
    <refpurpose>Unselect a single window, de-highlight it, and remove it from the selected-windows-list.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(select-window-remove #&amp;optional (w (get-window-with-nonant)))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Unselect a single window, de-highlight it, and remove it from the selected-windows-list.
The selected window is removed from the selected-windows list that can be
accessed via <link linkend="selected-windows-list"><function>selected-windows-list</function></link>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm window-selection)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/window-selection.scm"><filename>scheme/window-selection.scm</filename></ulink>
  at line 77 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/window-selection.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="select-window-toggle">
  <refnamediv>
    <refname>select-window-toggle</refname>
    <refpurpose>Toggle the selectedness of W.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(select-window-toggle #&amp;optional (w (get-window-with-nonant)))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Toggle the selectedness of W.
See <link linkend="select-window-add"><function>select-window-add</function></link> and <link linkend="select-window-remove"><function>select-window-remove</function></link>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm window-selection)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/window-selection.scm"><filename>scheme/window-selection.scm</filename></ulink>
  at line 54 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/window-selection.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="selected-windows-list">
  <refnamediv>
    <refname>selected-windows-list</refname>
    <refpurpose>Returns the list of windows selected by <link linkend="select-window-interactively-and-highlight"><function>select-window-interactively-and-highlight</function></link>.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(selected-windows-list)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Returns the list of windows selected by <link linkend="select-window-interactively-and-highlight"><function>select-window-interactively-and-highlight</function></link>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm window-selection)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/window-selection.scm"><filename>scheme/window-selection.scm</filename></ulink>
  at line 46 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/window-selection.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="send-button-press">
  <refnamediv>
    <refname>send-button-press</refname>
    <refpurpose>Send a synthetic mouse press event.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(send-button-press button #&amp;optional win kind propagate?)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Send a synthetic mouse press event.
Create a synthetic event of a press of mouse button <parameter>button</parameter>. The usual
mouse button specification format (with modifiers) is used. Send the
event to window <parameter>win</parameter> if specified; otherwise the window to be used
defaults to the window context in the usual way. By default, both a
press and a release are sent---a click. <parameter>kind</parameter> can be one of 'press, 'release,
'click, 'desk-press, 'desk-release, or 'desk-click,
<parameter>propagate?</parameter> indicates whether the propagate flag is set
on the event; the default is <literal>#f</literal>. You should not have to worry about
this unless you know what it means.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/events.c"><filename>scwm/events.c</filename></ulink>
  at line 2129 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/events.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="send-client-message">
  <refnamediv>
    <refname>send-client-message</refname>
    <refpurpose>Send WIN the message "ATOM DATA".</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(send-client-message win atom . data)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Send <parameter>win</parameter> the message "<parameter>atom</parameter> <parameter>data</parameter>".
<parameter>win</parameter> can be 'root-window or an X window identification number.
Useful for supporting other WMs module communication protocols.
<parameter>atom</parameter> is the X11 atom representing the message type (e.g.,
"XA_WM_PROTOCOLS") and <parameter>data</parameter> is up to 4 32-bit integers of data.
for the message. <parameter>data</parameter> will be the used to create the message data,
and the lastTimestamp will be appended as the last integer in
the data message.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/ICCCM.c"><filename>scwm/ICCCM.c</filename></ulink>
  at line 68 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/ICCCM.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="send-key-press">
  <refnamediv>
    <refname>send-key-press</refname>
    <refpurpose>Send a synthetic press of KEY.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(send-key-press key #&amp;optional win key-press? key-release? propagate?)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Send a synthetic press of <parameter>key</parameter>. The usual key specification
format (with modifiers) is used. The event is sent to window <parameter>win</parameter> if
specified; otherwise the window to be used defaults to the window
context in the usual way. By default, both a press and a release are
sent. However, the boolean parameters <parameter>key-press?</parameter> and <parameter>key-release?</parameter>
allow you to specify which are sent individually. <parameter>propagate?</parameter> indicates
whether the propagate flag is set on the event; the default is <literal>#f</literal>. You
should not have to worry about this unless you know what it means.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/events.c"><filename>scwm/events.c</filename></ulink>
  at line 2079 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/events.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="set-animation-x">
  <refnamediv>
    <refname>set-animation!</refname>
    <refpurpose>Set the animation parameters to VECTOR.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(set-animation! vector)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Set the animation parameters to <parameter>vector</parameter>. <parameter>vector</parameter> is a vector of
floats which give the fractions of the final position that the window
should appear at. For instance, #(0.0 0.25 0.5 0.75 1.0 1.1 1.0) would
make the window appear at the initial position, 1/4 of the way, 1/2 of
the way, 3/4 of the way, overshoot the final position slightly, and
finally slide back into place. This parameter is used for both
animated window shades and animated moves.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Primitive from (app scwm c-animation)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/modules/c-animation/c-animation.c"><filename>modules/c-animation/c-animation.c</filename></ulink>
  at line 287 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/modules/c-animation/c-animation.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="set-auto-raise-x">
  <refnamediv>
    <refname>set-auto-raise!</refname>
    <refpurpose>Turn auto-raise on (<literal>#t</literal>) or off (<literal>#f</literal>) for WIN.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(set-auto-raise! auto-raise? #&amp;optional (win (get-window)))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Turn auto-raise on (<literal>#t</literal>) or off (<literal>#f</literal>) for WIN.
Auto-raise makes a window automatically raise when the mouse pointer
enters the window frame.  See <link linkend="set-auto-raise-delay-x"><function>set-auto-raise-delay!</function></link> for controlling
the delay before the window raises.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm auto-raise)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/auto-raise.scm"><filename>scheme/auto-raise.scm</filename></ulink>
  at line 103 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/auto-raise.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="set-auto-raise-delay-x">
  <refnamediv>
    <refname>set-auto-raise-delay!</refname>
    <refpurpose>Set the auto-raise delay to DELAY (in ms) for WIN.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(set-auto-raise-delay! delay #&amp;optional (win (get-window)))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Set the auto-raise delay to DELAY (in ms) for WIN.
DELAY is the number of milliseconds after the pointer enters
WIN that WIN will be raised.  See <link linkend="set-auto-raise-x"><function>set-auto-raise!</function></link> to turn
auto-raise on or off for a given window.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm auto-raise)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/auto-raise.scm"><filename>scheme/auto-raise.scm</filename></ulink>
  at line 110 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/auto-raise.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="set-auto-raise-focus-proc-x">
  <refnamediv>
    <refname>set-auto-raise-focus-proc!</refname>
    <refpurpose>Set the auto-raise-focus-proc for WIN.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(set-auto-raise-focus-proc! fproc #&amp;optional (win (get-window)))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Set the auto-raise-focus-proc for WIN.
The auto-raise-focus-proc is the procedure which is invoked
after the auto-raise-delay after the pointer enters WIN's frame.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm auto-raise)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/auto-raise.scm"><filename>scheme/auto-raise.scm</filename></ulink>
  at line 124 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/auto-raise.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="set-auto-raise-unfocus-delay-x">
  <refnamediv>
    <refname>set-auto-raise-unfocus-delay!</refname>
    <refpurpose>Set the timeout to DELAY (in ms) for the unfocus-proc of WIN.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(set-auto-raise-unfocus-delay! delay #&amp;optional 
					       (win (get-window)))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Set the timeout to DELAY (in ms) for the unfocus-proc of WIN.
After DELAY milliseconds after the pointer leaves WIN's frame,
the auto-raise-unfocus-proc will be called.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm auto-raise)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/auto-raise.scm"><filename>scheme/auto-raise.scm</filename></ulink>
  at line 117 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/auto-raise.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="set-auto-raise-unfocus-proc-x">
  <refnamediv>
    <refname>set-auto-raise-unfocus-proc!</refname>
    <refpurpose>Set the auto-raise-unfocus-proc for WIN.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(set-auto-raise-unfocus-proc! ufproc 
					     #&amp;optional (win (get-window)))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Set the auto-raise-unfocus-proc for WIN.
The auto-raise-unfocus-proc is the procedure which is invoked
after the auto-raise-unfocus-delay after the pointer leaves WIN's frame.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm auto-raise)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/auto-raise.scm"><filename>scheme/auto-raise.scm</filename></ulink>
  at line 130 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/auto-raise.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="set-background-color-x">
  <refnamediv>
    <refname>set-background-color!</refname>
    <refpurpose>Sets the color of the root window to COLOR.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(set-background-color! color)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Sets the color of the root window to <parameter>color</parameter>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Primitive from (app scwm background)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/modules/background/background.c"><filename>modules/background/background.c</filename></ulink>
  at line 48 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/modules/background/background.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="set-background-image-x">
  <refnamediv>
    <refname>set-background-image!</refname>
    <refpurpose>Sets the background of the root window to be IMAGE.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(set-background-image! image #&amp;optional style)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Sets the background of the root window to be <parameter>image</parameter>.
<parameter>style</parameter> can be either 'centered or 'tiled.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Primitive from (app scwm background)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/modules/background/background.c"><filename>modules/background/background.c</filename></ulink>
  at line 155 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/modules/background/background.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="set-border-face-x">
  <refnamediv>
    <refname>set-border-face!</refname>
    <refpurpose>Set the face for the border In the current decor.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(set-border-face! active #&amp;optional inactive)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Set the face for the border In the current decor.
Use <parameter>active</parameter> as the face for the border when the window is active. Use
<parameter>inactive</parameter> when the window is inactive. <parameter>inactive</parameter> defaults to the same as
<parameter>active</parameter> when not specified.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/face.c"><filename>scwm/face.c</filename></ulink>
  at line 956 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/face.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="set-border-width-x">
  <refnamediv>
    <refname>set-border-width!</refname>
    <refpurpose>Set the border width of WIN's border to WIDTH pixels.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(set-border-width! width #&amp;optional win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Set the border width of <parameter>win</parameter>'s border to <parameter>width</parameter> pixels.
<parameter>win</parameter> defaults to the window context in the usual way if not specified.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/window.c"><filename>scwm/window.c</filename></ulink>
  at line 3254 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="set-button-face-x">
  <refnamediv>
    <refname>set-button-face!</refname>
    <refpurpose>Set the button faces for the various window states.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(set-button-face! button active-up #&amp;optional active-down inactive)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Set the button faces for the various window states.
In the current decor, use <parameter>active-up</parameter> as the face for the
button specified by the integer <parameter>button</parameter> when active and not pressed
in. Use <parameter>active-down</parameter> when <parameter>button</parameter> is active and pressed in, and <parameter>inactive</parameter>
when the window is inactive. Both <parameter>inactive</parameter> and <parameter>active-down</parameter> default to
<parameter>active-up</parameter> when not specified. Note that <parameter>active-down</parameter> will magically
reverse the sense of the relief flag, so if the button is raised in
the <parameter>active-up</parameter> state, it will be sunk in the <parameter>active-down</parameter> state by
default.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/face.c"><filename>scwm/face.c</filename></ulink>
  at line 885 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/face.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="set-button-mwm-flag-x">
  <refnamediv>
    <refname>set-button-mwm-flag!</refname>
    <refpurpose>Specify the Mwm flag for BUTTON.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(set-button-mwm-flag! button flag)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Specify the Mwm flag for <parameter>button</parameter>.
If <parameter>flag</parameter> is <literal>#t</literal>, the button's relief pattern (if any) will appear to
reverse in depth sense (i.e., flip from sunken in to extruding out)
when the window is maximized (has a non-<literal>#f</literal> "maximized" window
property).
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/face.c"><filename>scwm/face.c</filename></ulink>
  at line 929 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/face.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="set-click-delay-x">
  <refnamediv>
    <refname>set-click-delay!</refname>
    <refpurpose>Set the delay used in identifying mouse clicks and drags.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(set-click-delay! msec)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Set the delay used in identifying mouse clicks and drags.
<parameter>msec</parameter> is specified in milliseconds. After <parameter>msec</parameter> milliseconds, a mouse-down
without a mouse-up is considered a drag.  Also, after <parameter>msec</parameter> milliseconds, a
single click is definitively identified as not a double click.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/miscprocs.c"><filename>scwm/miscprocs.c</filename></ulink>
  at line 163 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/miscprocs.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="set-click-to-focus-passes-click-x">
  <refnamediv>
    <refname>set-click-to-focus-passes-click!</refname>
    <refpurpose>Determine whether a click-to-focus window receives the click.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(set-click-to-focus-passes-click! flag)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Determine whether a click-to-focus window receives the click.
If <parameter>flag</parameter> is <literal>#t</literal>, the window will receive the event, if <literal>#f</literal>, scwm
will not pass the event on to the client.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/miscprocs.c"><filename>scwm/miscprocs.c</filename></ulink>
  at line 315 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/miscprocs.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="set-click-to-focus-raises-x">
  <refnamediv>
    <refname>set-click-to-focus-raises!</refname>
    <refpurpose>Determine whether a click to focus raises the clicked-on window.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(set-click-to-focus-raises! flag)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Determine whether a click to focus raises the clicked-on window.
If <parameter>flag</parameter> is <literal>#t</literal>, clicks which transfer focus will also raise the target
window
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/miscprocs.c"><filename>scwm/miscprocs.c</filename></ulink>
  at line 339 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/miscprocs.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="set-colormap-focus-x">
  <refnamediv>
    <refname>set-colormap-focus!</refname>
    <refpurpose>Set the colormap focus policy to FTYPE.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(set-colormap-focus! ftype)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Set the colormap focus policy to <parameter>ftype</parameter>.
<parameter>ftype</parameter> can either be 'mouse, indicating that the window under the mouse
pointer should always have its colormap installed, or 'focus to
indicate that the window with the input focus should also get the
colormap focus. This makes a difference only when using focus policies
other than 'mouse.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/miscprocs.c"><filename>scwm/miscprocs.c</filename></ulink>
  at line 188 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/miscprocs.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="set-current-decor-x">
  <refnamediv>
    <refname>set-current-decor!</refname>
    <refpurpose>Set the current decor to DECOR.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(set-current-decor! decor)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Set the current decor to <parameter>decor</parameter>. Operations described as
setting options "in the current decor" will now operate on this
one.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/decor.c"><filename>scwm/decor.c</filename></ulink>
  at line 241 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/decor.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="set-current-desk-x">
  <refnamediv>
    <refname>set-current-desk!</refname>
    <refpurpose>Change the current desk to DESK.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(set-current-desk! desk)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Change the current desk to <parameter>desk</parameter>. <parameter>desk</parameter> should be an integer
small enough to fit in one machine word.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/deskpage.c"><filename>scwm/deskpage.c</filename></ulink>
  at line 66 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/deskpage.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="set-decorate-transient-x">
  <refnamediv>
    <refname>set-decorate-transient!</refname>
    <refpurpose>Set decoration of transients property on WIN.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(set-decorate-transient! flag #&amp;optional win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Set decoration of transients property on <parameter>win</parameter>.
If <parameter>flag</parameter> is <literal>#t</literal>, then if <parameter>win</parameter> is transient it will be fully
decorated. Transient windows that are not fully decorated will be
given only a border and no titlebar regardless of other settings. <parameter>win</parameter>
defaults to the window context in the usual way if not specified.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/window.c"><filename>scwm/window.c</filename></ulink>
  at line 3922 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="set-default-menu-background-x">
  <refnamediv>
    <refname>set-default-menu-background!</refname>
    <refpurpose>Set the default background for menus to BG.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(set-default-menu-background! bg)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Set the default background for menus to BG.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm base)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/base.scm"><filename>scheme/base.scm</filename></ulink>
  at line 212 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/base.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="set-default-menu-bg-image-x">
  <refnamediv>
    <refname>set-default-menu-bg-image!</refname>
    <refpurpose>Set the default menu background image to IMAGE.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(set-default-menu-bg-image! image)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Set the default menu background image to IMAGE.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm base)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/base.scm"><filename>scheme/base.scm</filename></ulink>
  at line 236 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/base.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="set-default-menu-font-x">
  <refnamediv>
    <refname>set-default-menu-font!</refname>
    <refpurpose>Set the default font for menu text to FONT.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(set-default-menu-font! font)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Set the default font for menu text to FONT.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm base)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/base.scm"><filename>scheme/base.scm</filename></ulink>
  at line 219 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/base.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="set-default-menu-foreground-x">
  <refnamediv>
    <refname>set-default-menu-foreground!</refname>
    <refpurpose>Set the default color for menu text to FG.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(set-default-menu-foreground! fg)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Set the default color for menu text to FG.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm base)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/base.scm"><filename>scheme/base.scm</filename></ulink>
  at line 209 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/base.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="set-default-menu-hl-bg-color-x">
  <refnamediv>
    <refname>set-default-menu-hl-bg-color!</refname>
    <refpurpose>Set the default menu highlight background color to BG.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(set-default-menu-hl-bg-color! bg)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Set the default menu highlight background color to BG.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm base)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/base.scm"><filename>scheme/base.scm</filename></ulink>
  at line 245 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/base.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="set-default-menu-hl-fg-color-x">
  <refnamediv>
    <refname>set-default-menu-hl-fg-color!</refname>
    <refpurpose>Set the default menu highlight foreground color to FG.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(set-default-menu-hl-fg-color! fg)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Set the default menu highlight foreground color to FG.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm base)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/base.scm"><filename>scheme/base.scm</filename></ulink>
  at line 242 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/base.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="set-default-menu-look-x">
  <refnamediv>
    <refname>set-default-menu-look!</refname>
    <refpurpose>Set the default menu look to LOOK.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(set-default-menu-look! look)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Set the default menu look to LOOK.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm base)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/base.scm"><filename>scheme/base.scm</filename></ulink>
  at line 239 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/base.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="set-default-menu-side-background-x">
  <refnamediv>
    <refname>set-default-menu-side-background!</refname>
    <refpurpose>Set the default background for the menu side image to BG.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(set-default-menu-side-background! bg)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Set the default background for the menu side image to BG.
If BG is <literal>#f</literal>, use the default menu background
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm base)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/base.scm"><filename>scheme/base.scm</filename></ulink>
  at line 228 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/base.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="set-default-menu-side-image-x">
  <refnamediv>
    <refname>set-default-menu-side-image!</refname>
    <refpurpose>Set the default menu side image to IMAGE.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(set-default-menu-side-image! image)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Set the default menu side image to IMAGE.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm base)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/base.scm"><filename>scheme/base.scm</filename></ulink>
  at line 225 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/base.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="set-default-menu-stipple-x">
  <refnamediv>
    <refname>set-default-menu-stipple!</refname>
    <refpurpose>Set the default color for stippled (inactive) menu text to STIPPLE.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(set-default-menu-stipple! stipple)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Set the default color for stippled (inactive) menu text to STIPPLE.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm base)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/base.scm"><filename>scheme/base.scm</filename></ulink>
  at line 216 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/base.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="set-default-menu-title-font-x">
  <refnamediv>
    <refname>set-default-menu-title-font!</refname>
    <refpurpose>Set the default font for menu title text to FONT.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(set-default-menu-title-font! font)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Set the default font for menu title text to FONT.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm base)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/base.scm"><filename>scheme/base.scm</filename></ulink>
  at line 222 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/base.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="set-desk-size-x">
  <refnamediv>
    <refname>set-desk-size!</refname>
    <refpurpose>Sets the desk size to WIDTH, HEIGHT.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(set-desk-size! width height)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Sets the desk size to <parameter>width</parameter>, <parameter>height</parameter>.
Both numbers are given in units of the physical screen size.  For
example <informalexample><programlisting>(set-desk-size! 3 3)
</programlisting></informalexample> creates a virtual world 9 times the
size of the physical display.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/deskpage.c"><filename>scwm/deskpage.c</filename></ulink>
  at line 293 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/deskpage.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="set-edge-move-threshold-x">
  <refnamediv>
    <refname>set-edge-move-threshold!</refname>
    <refpurpose>Set the edge move threshold to PIXELS.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(set-edge-move-threshold! pixels)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Set the edge move threshold to <parameter>pixels</parameter>.
Attempts to move a window so that it is off the edge of the screen by
fewer than <parameter>pixels</parameter> pixels will leave the window entirely onscreen.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/deskpage.c"><filename>scwm/deskpage.c</filename></ulink>
  at line 266 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/deskpage.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="set-edge-resistance-x">
  <refnamediv>
    <refname>set-edge-resistance!</refname>
    <refpurpose>Set the edge scroll delay to S, and the edge move threshold to M.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(set-edge-resistance! s m)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Set the edge scroll delay to S, and the edge move threshold to M.
See also <link linkend="set-edge-scroll-delay-x"><function>set-edge-scroll-delay!</function></link> and <link linkend="set-edge-move-threshold-x"><function>set-edge-move-threshold!</function></link>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm base)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/base.scm"><filename>scheme/base.scm</filename></ulink>
  at line 623 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/base.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="set-edge-scroll-x">
  <refnamediv>
    <refname>set-edge-scroll!</refname>
    <refpurpose>Set the edge scroll values to X and Y, respectively.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(set-edge-scroll! x y)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Set the edge scroll values to X and Y, respectively.
These values are the number of pixels that the viewport
moves when the pointer hits the edge of the screen.  Use
<link linkend="pctx"><function>%x</function></link> and <link linkend="pcty"><function>%y</function></link> to convert from a percentage of a screen
dimension to a number of pixels.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm base)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/base.scm"><filename>scheme/base.scm</filename></ulink>
  at line 637 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/base.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="set-edge-scroll-delay-x">
  <refnamediv>
    <refname>set-edge-scroll-delay!</refname>
    <refpurpose>Set the edge scroll delay to MS milliseconds.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(set-edge-scroll-delay! ms)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Set the edge scroll delay to <parameter>ms</parameter> milliseconds.
When the mouse pointer hits the edge of the screen, it must stay there
for at least the edge scroll delay amount before the desktop will be
scrolled. If this parameter is <literal>#f</literal>, the viewport will not scroll at all
at the screen edge.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/deskpage.c"><filename>scwm/deskpage.c</filename></ulink>
  at line 234 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/deskpage.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="set-edge-wrap-x">
  <refnamediv>
    <refname>set-edge-wrap!</refname>
    <refpurpose>Set the edge x and y wrap values to X and Y, respectively.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(set-edge-wrap! x y)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Set the edge x and y wrap values to X and Y, respectively.
These values should be <literal>#t</literal> to mean that the pointer should
wrap in the given direction, or <literal>#f</literal> to not wrap around.
See also <link linkend="set-edge-x-wrap-x"><function>set-edge-x-wrap!</function></link> and <link linkend="set-edge-y-wrap-x"><function>set-edge-y-wrap!</function></link>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm base)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/base.scm"><filename>scheme/base.scm</filename></ulink>
  at line 629 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/base.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="set-edge-x-scroll-x">
  <refnamediv>
    <refname>set-edge-x-scroll!</refname>
    <refpurpose>Set the horizontal edge scroll increment to PIXELS.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(set-edge-x-scroll! pixels)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Set the horizontal edge scroll increment to <parameter>pixels</parameter>.
The horizontal edge scroll setting is the amount by which the viewport
will scroll when the mouse hits the left or right edge. Use <link linkend="pctx"><function>%x</function></link> to
convert from a percent of screen size to pixels.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/deskpage.c"><filename>scwm/deskpage.c</filename></ulink>
  at line 129 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/deskpage.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="set-edge-x-wrap-x">
  <refnamediv>
    <refname>set-edge-x-wrap!</refname>
    <refpurpose>Set whether to wrap pointer around horizontal edges.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(set-edge-x-wrap! flag)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Set whether to wrap pointer around horizontal edges.
If the boolean value <parameter>flag</parameter> is <literal>#t</literal>, the pointer will wrap from the right
edge of the desktop to the left of the display as it moves off the
right edge, and vice-versa. See also <link linkend="set-edge-y-wrap-x"><function>set-edge-y-wrap!</function></link>
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/deskpage.c"><filename>scwm/deskpage.c</filename></ulink>
  at line 185 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/deskpage.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="set-edge-y-scroll-x">
  <refnamediv>
    <refname>set-edge-y-scroll!</refname>
    <refpurpose>Set the vertical edge scroll increment to PIXELS.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(set-edge-y-scroll! pixels)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Set the vertical edge scroll increment to <parameter>pixels</parameter>.
The vertical edge scroll setting is the amount by which the viewport
will scroll when the mouse hits the top or bottom edge. Use <link linkend="pcty"><function>%y</function></link> to
convert from a percent of screen size to pixels.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/deskpage.c"><filename>scwm/deskpage.c</filename></ulink>
  at line 156 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/deskpage.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="set-edge-y-wrap-x">
  <refnamediv>
    <refname>set-edge-y-wrap!</refname>
    <refpurpose>Set whether to wrap pointer around vertical edges.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(set-edge-y-wrap! flag)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Set whether to wrap pointer around vertical edges.
If the boolean value <parameter>flag</parameter> is <literal>#t</literal>, the pointer will wrap from the bottom
edge of the desktop to the top of the display as it moves off the very
bottom edge, and vice-versa. See also <link linkend="set-edge-x-wrap-x"><function>set-edge-x-wrap!</function></link>
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/deskpage.c"><filename>scwm/deskpage.c</filename></ulink>
  at line 209 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/deskpage.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="set-face-flag-x">
  <refnamediv>
    <refname>set-face-flag!</refname>
    <refpurpose>Set the given FLAG to the given FLAGVAL for face FACE.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(set-face-flag! face flag flagval)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Set the given <parameter>flag</parameter> to the given <parameter>flagval</parameter> for face <parameter>face</parameter>.
See the section on the `Face Flags' concept.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/face.c"><filename>scwm/face.c</filename></ulink>
  at line 346 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/face.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="set-force-icon-x">
  <refnamediv>
    <refname>set-force-icon!</refname>
    <refpurpose>Set the window-manager-overriding property for WIN to boolean FLAG.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(set-force-icon! flag #&amp;optional win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Set the window-manager-overriding property for <parameter>win</parameter> to boolean <parameter>flag</parameter>.
If <literal>#t</literal>, the icon specified for <parameter>win</parameter> by the user through scwm will override an
application-provided icon.  <parameter>win</parameter> defaults to the window context in the usual
way if not specified.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/window.c"><filename>scwm/window.c</filename></ulink>
  at line 3743 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="set-handle-segv-x">
  <refnamediv>
    <refname>set-handle-segv!</refname>
    <refpurpose>If FLAG, tell Scwm to catch segv signals.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(set-handle-segv! flag)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  If <parameter>flag</parameter>, tell Scwm to catch segv signals.
This is the default, but if you catch a segv and really need it to
dump right away to figure out what is wrong then use this.  No
cleanup is done if handling segv is <literal>#f</literal>.  Be sure to have an extra
terminal handy on a console or separate X server.
For developers and hackers only.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/miscprocs.c"><filename>scwm/miscprocs.c</filename></ulink>
  at line 671 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/miscprocs.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="set-highlight-background-x">
  <refnamediv>
    <refname>set-highlight-background!</refname>
    <refpurpose>Use BG as the background color for a window with the input focus.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(set-highlight-background! bg)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Use <parameter>bg</parameter> as the background color for a window with the input focus.
Applies to the current decor. This is used only for windows that don't
have their own background color.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/color.c"><filename>scwm/color.c</filename></ulink>
  at line 728 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/color.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="set-highlight-factor-x">
  <refnamediv>
    <refname>set-highlight-factor!</refname>
    <refpurpose>Use FACTOR to generate highlight colors for the current decor.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(set-highlight-factor! factor)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Use <parameter>factor</parameter> to generate highlight colors for the current decor.
<parameter>factor</parameter> is a positive floating point number.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/color.c"><filename>scwm/color.c</filename></ulink>
  at line 554 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/color.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="set-highlight-foreground-x">
  <refnamediv>
    <refname>set-highlight-foreground!</refname>
    <refpurpose>Use FG for the foreground color of a window with the input focus.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(set-highlight-foreground! fg)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Use <parameter>fg</parameter> for the foreground color of a window with the input focus.
Applies to the current decor. This is used only for windows that don't
have their own foreground color.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/color.c"><filename>scwm/color.c</filename></ulink>
  at line 683 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/color.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="set-hint-override-x">
  <refnamediv>
    <refname>set-hint-override!</refname>
    <refpurpose>Set whether or not Mwm and Open Look function hints are used.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(set-hint-override! flag #&amp;optional win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Set whether or not Mwm and Open Look function hints are used.
If <parameter>flag</parameter> is <literal>#t</literal>, the hints, which indicate what operations should be
allowed on a window, will be ignored for <parameter>win</parameter>.  If <parameter>flag</parameter> is <literal>#f</literal>, the hints will
be honoured. <parameter>win</parameter> defaults to the window context in the usual way if
not specified.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/window.c"><filename>scwm/window.c</filename></ulink>
  at line 3905 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="set-hover-focus-x">
  <refnamediv>
    <refname>set-hover-focus!</refname>
    <refpurpose>Turn hover-focus on (<literal>#t</literal>) or off (<literal>#f</literal>) for WIN.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(set-hover-focus! hover-focus? #&amp;optional (win (get-window)))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Turn hover-focus on (<literal>#t</literal>) or off (<literal>#f</literal>) for WIN.
hover-focus makes a window automatically get focus when the mouse pointer
remains in a window frame.  See <link linkend="set-hover-focus-delay-x"><function>set-hover-focus-delay!</function></link> for controlling
the delay before the window gets focus.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm hover-focus)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/hover-focus.scm"><filename>scheme/hover-focus.scm</filename></ulink>
  at line 78 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/hover-focus.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="set-hover-focus-delay-x">
  <refnamediv>
    <refname>set-hover-focus-delay!</refname>
    <refpurpose>Set the hover-focus delay to DELAY (in ms) for WIN.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(set-hover-focus-delay! delay #&amp;optional (win (get-window)))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Set the hover-focus delay to DELAY (in ms) for WIN.
DELAY is the number of milliseconds after the pointer enters
WIN that WIN will be focused.  See <link linkend="set-hover-focus-x"><function>set-hover-focus!</function></link> to turn
hover-focus on or off for a given window.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm hover-focus)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/hover-focus.scm"><filename>scheme/hover-focus.scm</filename></ulink>
  at line 67 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/hover-focus.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="set-icon-x">
  <refnamediv>
    <refname>set-icon!</refname>
    <refpurpose>Set the image to use for the icon of WIN to IMAGE.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(set-icon! image #&amp;optional win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Set the image to use for the icon of <parameter>win</parameter> to <parameter>image</parameter>.
As usual, an image object or a filename string may be given. <literal>#f</literal> May
also be specified, indicating no icon image. <parameter>win</parameter> defaults to the window
context in the usual way if not specified.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/window.c"><filename>scwm/window.c</filename></ulink>
  at line 3780 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="set-icon-box-x">
  <refnamediv>
    <refname>set-icon-box!</refname>
    <refpurpose>Set the icon box in which WIN's icon will be placed.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(set-icon-box! x y w h #&amp;optional win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Set the icon box in which <parameter>win</parameter>'s icon will be placed.
This set the box to the rectangle at coordinates <parameter>x</parameter>, <parameter>y</parameter> with width <parameter>w</parameter> and
height <parameter>h</parameter>. <parameter>win</parameter> defaults to the window context in the usual way if not
specified.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/window.c"><filename>scwm/window.c</filename></ulink>
  at line 3344 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="set-icon-font-x">
  <refnamediv>
    <refname>set-icon-font!</refname>
    <refpurpose>Set the font used for drawing icon titles to FONT.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(set-icon-font! font)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Set the font used for drawing icon titles to <parameter>font</parameter>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/font.c"><filename>scwm/font.c</filename></ulink>
  at line 246 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/font.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="set-icon-title-x">
  <refnamediv>
    <refname>set-icon-title!</refname>
    <refpurpose>Set the visibility of WIN's icon title according to FLAG.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(set-icon-title! flag #&amp;optional win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Set the visibility of <parameter>win</parameter>'s icon title according to <parameter>flag</parameter>. <parameter>win</parameter>
defaults to the window context in the usual way if not specified.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/window.c"><filename>scwm/window.c</filename></ulink>
  at line 3726 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="set-ignore-dubious-modifiers-x">
  <refnamediv>
    <refname>set-ignore-dubious-modifiers!</refname>
    <refpurpose>If FLAG is <literal>#t</literal>, ignore scoll/num/lock modifiers on all bindings made.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(set-ignore-dubious-modifiers! flag)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  If <parameter>flag</parameter> is <literal>#t</literal>, ignore scoll/num/lock modifiers on all bindings made.
Otherwise do not.  If dubious locks are being ignored, multiple XGrabKey invocations
must occur for each binding made;  this can result in a noticeable delay when, e.g.,
a new window is created.  If this bothers you, call this procedure with <parameter>flag</parameter> set
to <literal>#f</literal>. The default is <literal>#t</literal>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/binding.c"><filename>scwm/binding.c</filename></ulink>
  at line 1493 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/binding.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="set-left-button-face-x">
  <refnamediv>
    <refname>set-left-button-face!</refname>
    <refpurpose>Set the button face for the left-button numbered BUTTON.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(set-left-button-face! button active-up #&amp;optional
				      (active-down #f) (inactive #f))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Set the button face for the left-button numbered BUTTON.
E.g., if BUTTON is 1, this will set the leftmost button of your
titlebar.  See <link linkend="set-button-face-x"><function>set-button-face!</function></link> for a description of ACTIVE-UP,
ACTIVE-DOWN, and INACTIVE.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm face)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/face.scm"><filename>scheme/face.scm</filename></ulink>
  at line 85 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/face.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="set-lenience-x">
  <refnamediv>
    <refname>set-lenience!</refname>
    <refpurpose>Set or reset the input focus lenience flag.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(set-lenience! flag #&amp;optional win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Set or reset the input focus lenience flag.
Determine whether or not to try to give <parameter>win</parameter> the input focus
when asked, even if the window claims according to hints that it
cannot receive the input focus, according to the boolean value
<parameter>flag</parameter>. <parameter>win</parameter> defaults to the window context in the usual way if not
specified.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/window.c"><filename>scwm/window.c</filename></ulink>
  at line 4035 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="set-load-processing-frequency-x">
  <refnamediv>
    <refname>set-load-processing-frequency!</refname>
    <refpurpose>Invoke hooks on <link linkend="load-processing-hook"><function>load-processing-hook</function></link> every NUM-LINES lines.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(set-load-processing-frequency! num-lines)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Invoke hooks on <link linkend="load-processing-hook"><function>load-processing-hook</function></link> every <parameter>num-lines</parameter> lines.
Returns the old value.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/callbacks.c"><filename>scwm/callbacks.c</filename></ulink>
  at line 667 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/callbacks.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="set-markwin-offset-x">
  <refnamediv>
    <refname>set-markwin-offset!</refname>
    <refpurpose>No documentation supplied.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(set-markwin-offset! win nonant markwin)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  No documentation supplied.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm window-selection)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/window-selection.scm"><filename>scheme/window-selection.scm</filename></ulink>
  at line 156 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/window-selection.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="set-menu-background-picture-x">
  <refnamediv>
    <refname>set-menu-background-picture!</refname>
    <refpurpose>Use PICTURE as the background image for MENU.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(set-menu-background-picture! menu picture)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Use <parameter>picture</parameter> as the background image for <parameter>menu</parameter>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/menu.c"><filename>scwm/menu.c</filename></ulink>
  at line 557 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/menu.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="set-menu-colors-x">
  <refnamediv>
    <refname>set-menu-colors!</refname>
    <refpurpose>Use TEXT-COLOR and BG-COLOR as the colors for MENU.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(set-menu-colors! menu text-color bg-color #&amp;optional stipple-color)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Use <parameter>text-color</parameter> and <parameter>bg-color</parameter> as the colors for <parameter>menu</parameter>.
<parameter>stipple-color</parameter> is optional, and if given will be used for the
stipple color for the <parameter>menu</parameter>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/menu.c"><filename>scwm/menu.c</filename></ulink>
  at line 423 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/menu.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="set-menu-extra-options-x">
  <refnamediv>
    <refname>set-menu-extra-options!</refname>
    <refpurpose>Set MENU's extra options to OPTIONS.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(set-menu-extra-options! menu options)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Set <parameter>menu</parameter>'s extra options to <parameter>options</parameter>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/menu.c"><filename>scwm/menu.c</filename></ulink>
  at line 573 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/menu.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="set-menu-font-x">
  <refnamediv>
    <refname>set-menu-font!</refname>
    <refpurpose>Use FONT as the font for MENU.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(set-menu-font! menu font)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Use <parameter>font</parameter> as the font for <parameter>menu</parameter>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/menu.c"><filename>scwm/menu.c</filename></ulink>
  at line 507 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/menu.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="set-menu-highlight-colors-x">
  <refnamediv>
    <refname>set-menu-highlight-colors!</refname>
    <refpurpose>Use TEXT-COLOR and BG-COLOR as the highlight colors for MENU.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(set-menu-highlight-colors! menu text-color bg-color)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Use <parameter>text-color</parameter> and <parameter>bg-color</parameter> as the highlight colors for <parameter>menu</parameter>.
These colors will be used for the selected item.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/menu.c"><filename>scwm/menu.c</filename></ulink>
  at line 449 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/menu.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="set-menu-highlight-factor-x">
  <refnamediv>
    <refname>set-menu-highlight-factor!</refname>
    <refpurpose>Use FACTOR to generate highlight colors for menus.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(set-menu-highlight-factor! factor)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Use <parameter>factor</parameter> to generate highlight colors for menus.
<parameter>factor</parameter> is a positive floating point number
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/color.c"><filename>scwm/color.c</filename></ulink>
  at line 626 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/color.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="set-menu-highlight-relief-x">
  <refnamediv>
    <refname>set-menu-highlight-relief!</refname>
    <refpurpose>If HIGHLIGHT-RELIEF? is <literal>#t</literal>, then draw a relief on selected items in MENU.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(set-menu-highlight-relief! menu highlight-relief?)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  If <parameter>highlight-relief?</parameter> is <literal>#t</literal>, then draw a relief on selected items in <parameter>menu</parameter>.
Otherwise, do not.  See also <link linkend="set-menu-highlight-colors-x"><function>set-menu-highlight-colors!</function></link>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/menu.c"><filename>scwm/menu.c</filename></ulink>
  at line 470 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/menu.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="set-menu-hotkeys-activate-item-x">
  <refnamediv>
    <refname>set-menu-hotkeys-activate-item!</refname>
    <refpurpose>If ACTIVATE? is <literal>#t</literal>, let menu hotkeys invoke the item.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(set-menu-hotkeys-activate-item! activate?)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  If <parameter>activate?</parameter> is <literal>#t</literal>, let menu hotkeys invoke the item.
If <literal>#f</literal>, a menuitem hotkey just makes that item selected and still requires
a Return or Space keypress to activate the item.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/menu.c"><filename>scwm/menu.c</filename></ulink>
  at line 1616 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/menu.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="set-menu-hover-delay-x">
  <refnamediv>
    <refname>set-menu-hover-delay!</refname>
    <refpurpose>Set MENU's hover delay to HOVER-DELAY.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(set-menu-hover-delay! menu hover-delay)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Set <parameter>menu</parameter>'s hover delay to <parameter>hover-delay</parameter>.
<parameter>hover-delay</parameter> is the number of ms to wait before invoking the hover action.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/menu.c"><filename>scwm/menu.c</filename></ulink>
  at line 371 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/menu.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="set-menu-look-x">
  <refnamediv>
    <refname>set-menu-look!</refname>
    <refpurpose>Use MENU-LOOK as the menu-look for MENU.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(set-menu-look! menu menu-look)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Use <parameter>menu-look</parameter> as the menu-look for <parameter>menu</parameter>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/menu.c"><filename>scwm/menu.c</filename></ulink>
  at line 395 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/menu.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="set-menu-popup-delay-x">
  <refnamediv>
    <refname>set-menu-popup-delay!</refname>
    <refpurpose>Set MENU's submenu popup delay to POPUP-DELAY.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(set-menu-popup-delay! menu popup-delay)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Set <parameter>menu</parameter>'s submenu popup delay to <parameter>popup-delay</parameter>.
<parameter>popup-delay</parameter> is the number of ms to wait before popping up submenus.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/menu.c"><filename>scwm/menu.c</filename></ulink>
  at line 345 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/menu.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="set-menu-shadow-factor-x">
  <refnamediv>
    <refname>set-menu-shadow-factor!</refname>
    <refpurpose>Use FACTOR to generate shadow colors for menus.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(set-menu-shadow-factor! factor)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Use <parameter>factor</parameter> to generate shadow colors for menus.
<parameter>factor</parameter> is a positive floating point number
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/color.c"><filename>scwm/color.c</filename></ulink>
  at line 649 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/color.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="set-menu-side-picture-x">
  <refnamediv>
    <refname>set-menu-side-picture!</refname>
    <refpurpose>Use PICTURE as the side picture for MENU.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(set-menu-side-picture! menu picture #&amp;optional align bg-color)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Use <parameter>picture</parameter> as the side picture for <parameter>menu</parameter>.
Set its alignment to <parameter>align</parameter>, and its background
color to <parameter>bg-color</parameter>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/menu.c"><filename>scwm/menu.c</filename></ulink>
  at line 523 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/menu.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="set-menu-title-x">
  <refnamediv>
    <refname>set-menu-title!</refname>
    <refpurpose>Use MENU-TITLE as the title for MENU.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(set-menu-title! menu menu-title)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Use <parameter>menu-title</parameter> as the title for <parameter>menu</parameter>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/menu.c"><filename>scwm/menu.c</filename></ulink>
  at line 409 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/menu.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="set-menuitem-colors-x">
  <refnamediv>
    <refname>set-menuitem-colors!</refname>
    <refpurpose>Sets the fg and bg colors of MENUITEM to FG and BG respectively.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(set-menuitem-colors! menuitem fg bg)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Sets the fg and bg colors of <parameter>menuitem</parameter> to <parameter>fg</parameter> and <parameter>bg</parameter> respectively.
Use <literal>#f</literal> for either/both component to have <parameter>menuitem</parameter> inherit that color
from the menu in which it is embedded.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/menuitem.c"><filename>scwm/menuitem.c</filename></ulink>
  at line 204 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/menuitem.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="set-menuitem-font-x">
  <refnamediv>
    <refname>set-menuitem-font!</refname>
    <refpurpose>Sets the font of MENUITEM to FONT.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(set-menuitem-font! menuitem font)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Sets the font of <parameter>menuitem</parameter> to <parameter>font</parameter>.
Use <literal>#f</literal> to have <parameter>menuitem</parameter> inherit its font
from the menu in which it is embedded.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/menuitem.c"><filename>scwm/menuitem.c</filename></ulink>
  at line 238 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/menuitem.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="set-mini-icon-x">
  <refnamediv>
    <refname>set-mini-icon!</refname>
    <refpurpose>Set the image to use for the mini-icon of WIN to IMAGE.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(set-mini-icon! image #&amp;optional win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Set the image to use for the mini-icon of <parameter>win</parameter> to <parameter>image</parameter>. As
usual, an image object or a filename string may be given. <parameter>win</parameter> defaults
to the window context in the usual way if not specified.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/window.c"><filename>scwm/window.c</filename></ulink>
  at line 3827 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="set-mod-mask-numlock-x">
  <refnamediv>
    <refname>set-mod-mask-numlock!</refname>
    <refpurpose>Set the bit-mask for the NumLock modifier key.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(set-mod-mask-numlock! mask)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Set the bit-mask for the NumLock modifier key.
<parameter>mask</parameter> must be a power of 2. The NumLock modifier mask is
set automatically, but you can use this procedure if you
need to override the built-in algorithm.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/binding.c"><filename>scwm/binding.c</filename></ulink>
  at line 1466 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/binding.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="set-mod-mask-scrolllock-x">
  <refnamediv>
    <refname>set-mod-mask-scrolllock!</refname>
    <refpurpose>Set the bit-mask for the ScrollLock modifier key.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(set-mod-mask-scrolllock! mask)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Set the bit-mask for the ScrollLock modifier key.
<parameter>mask</parameter> must be a power of 2. The ScrollLock modifier mask is
set automatically, but you can use this procedure if you
need to override the built-in algorithm.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/binding.c"><filename>scwm/binding.c</filename></ulink>
  at line 1479 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/binding.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="set-mouse-focus-click-raises-x">
  <refnamediv>
    <refname>set-mouse-focus-click-raises!</refname>
    <refpurpose>Determine whether a mouse-focus-click will raise the window.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(set-mouse-focus-click-raises! flag)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Determine whether a mouse-focus-click will raise the window.
If <parameter>flag</parameter> is <literal>#t</literal> it will raise the window. Not sure if this function
makes sense any more.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/miscprocs.c"><filename>scwm/miscprocs.c</filename></ulink>
  at line 371 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/miscprocs.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="set-mwm-border-x">
  <refnamediv>
    <refname>set-mwm-border!</refname>
    <refpurpose>Set the mwm-border style flag of WIN to boolean FLAG.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(set-mwm-border! flag #&amp;optional win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Set the mwm-border style flag of <parameter>win</parameter> to boolean <parameter>flag</parameter>.
The Mwm style has shallower bevels than the default scwm/fvwm2 style.
<parameter>win</parameter> defaults to the window context in the usual way if not
specified.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/window.c"><filename>scwm/window.c</filename></ulink>
  at line 3681 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="set-mwm-buttons-x">
  <refnamediv>
    <refname>set-mwm-buttons!</refname>
    <refpurpose>Set the mwm-buttons flag of WIN to boolean FLAG.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(set-mwm-buttons! flag #&amp;optional win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Set the mwm-buttons flag of <parameter>win</parameter> to boolean <parameter>flag</parameter>.
The mwm-buttons flag controls whether any of this window's
flags obey their mwm-flags. See <link linkend="set-button-mwm-flag-x"><function>set-button-mwm-flag!</function></link>. <parameter>win</parameter> defaults
to the window context in the usual way if not specified.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/window.c"><filename>scwm/window.c</filename></ulink>
  at line 3665 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="set-mwm-decor-hint-x">
  <refnamediv>
    <refname>set-mwm-decor-hint!</refname>
    <refpurpose>Set whether or not Motif decoration hints are used for WIN.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(set-mwm-decor-hint! flag #&amp;optional win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Set whether or not Motif decoration hints are used for <parameter>win</parameter>.
If <parameter>flag</parameter> is <literal>#t</literal>, the Mwm decor hint will be given for <parameter>win</parameter>.  <parameter>win</parameter> defaults
to the window context in the usual way if not specified.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/window.c"><filename>scwm/window.c</filename></ulink>
  at line 3938 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="set-mwm-func-hint-x">
  <refnamediv>
    <refname>set-mwm-func-hint!</refname>
    <refpurpose>Set whether or not Motif function hints are used for WIN.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(set-mwm-func-hint! flag #&amp;optional win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Set whether or not Motif function hints are used for <parameter>win</parameter>.
If <parameter>flag</parameter> is <literal>#t</literal>, the Motif function hints are respected for <parameter>win</parameter>.
<parameter>win</parameter> defaults to the window context in the usual way if not
specified.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/window.c"><filename>scwm/window.c</filename></ulink>
  at line 3952 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="set-not-menu-background-x">
  <refnamediv>
    <refname>set-not-menu-background!</refname>
    <refpurpose>Use BG as the default background color for icons, window frames, etc.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(set-not-menu-background! bg)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Use <parameter>bg</parameter> as the default background color for icons, window frames, etc.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/color.c"><filename>scwm/color.c</filename></ulink>
  at line 826 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/color.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="set-not-menu-foreground-x">
  <refnamediv>
    <refname>set-not-menu-foreground!</refname>
    <refpurpose>Use FG as the default foreground color for icons, titlebars, etc.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(set-not-menu-foreground! fg)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Use <parameter>fg</parameter> as the default foreground color for icons, titlebars, etc.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/color.c"><filename>scwm/color.c</filename></ulink>
  at line 798 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/color.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="set-OL-decor-hint-x">
  <refnamediv>
    <refname>set-OL-decor-hint!</refname>
    <refpurpose>Determine whether or not to respect Open Look decoration hints.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(set-OL-decor-hint! flag #&amp;optional win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Determine whether or not to respect Open Look decoration hints.
If <parameter>flag</parameter> is <literal>#t</literal>, the decoration hints will be respected for <parameter>win</parameter>. <parameter>win</parameter>
defaults to the window context in the usual way if not specified.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/window.c"><filename>scwm/window.c</filename></ulink>
  at line 3984 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="set-PPosition-hint-x">
  <refnamediv>
    <refname>set-PPosition-hint!</refname>
    <refpurpose>Set or reset the program-specified position hint for WIN.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(set-PPosition-hint! flag #&amp;optional win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Set or reset the program-specified position hint for <parameter>win</parameter>.
If <parameter>flag</parameter> is <literal>#t</literal>, the hint will be set, otherwise reset.  This only
matters when using the default placement procedure. Some programs
allegedly set this hint to a useless value like (0,0) always, so
ignoring it is recommended. <parameter>win</parameter> defaults to the window context in the
usual way if not specified.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/window.c"><filename>scwm/window.c</filename></ulink>
  at line 3967 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="set-quote-key-events-x">
  <refnamediv>
    <refname>set-quote-key-events!</refname>
    <refpurpose>Set key event quoting to QUOTING-ON?.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(set-quote-key-events! quoting-on?)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Set key event quoting to <parameter>quoting-on?</parameter>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/binding.c"><filename>scwm/binding.c</filename></ulink>
  at line 845 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/binding.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="set-random-placement-x">
  <refnamediv>
    <refname>set-random-placement!</refname>
    <refpurpose>Set the random-placement flag of WIN to boolean FLAG.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(set-random-placement! flag #&amp;optional win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Set the random-placement flag of <parameter>win</parameter> to boolean <parameter>flag</parameter>.
This flag only matters if the default placement procedure is
being used. <parameter>win</parameter> defaults to the window context in the usual way if not
specified.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/window.c"><filename>scwm/window.c</filename></ulink>
  at line 3598 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="set-register">
  <refnamediv>
    <refname>set-register</refname>
    <refpurpose>Set contents of Scwm register named REGISTER to VALUE.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(set-register register value)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Set contents of Scwm register named REGISTER to VALUE.  Returns VALUE.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm register)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/register.scm"><filename>scheme/register.scm</filename></ulink>
  at line 26 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/register.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="set-reset-on-segv-x">
  <refnamediv>
    <refname>set-reset-on-segv!</refname>
    <refpurpose>Reset Scwm to the main event loop on the next NUMBER-TO-RESET segv signals.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(set-reset-on-segv! number-to-reset)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Reset Scwm to the main event loop on the next <parameter>number-to-reset</parameter> segv signals.
The default is 100, but if you catch a segv and and are willing to
track it or send in a bug report, use this to permit a C-level backtrace
by setting it to 0.  See also <link linkend="set-handle-segv-x"><function>set-handle-segv!</function></link>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/miscprocs.c"><filename>scwm/miscprocs.c</filename></ulink>
  at line 642 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/miscprocs.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="set-right-button-face-x">
  <refnamediv>
    <refname>set-right-button-face!</refname>
    <refpurpose>Set the button face for the right-button numbered BUTTON.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(set-right-button-face! button active-up #&amp;optional
				       (active-down #f) (inactive #f))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Set the button face for the right-button numbered BUTTON.
E.g., if BUTTON is 1, this will set the rightmost button of your
titlebar.  See <link linkend="set-button-face-x"><function>set-button-face!</function></link> for a description of ACTIVE-UP,
ACTIVE-DOWN, and INACTIVE.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm face)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/face.scm"><filename>scheme/face.scm</filename></ulink>
  at line 94 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/face.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="set-rubber-band-mask-x">
  <refnamediv>
    <refname>set-rubber-band-mask!</refname>
    <refpurpose>Set the rubber band mask used when dragging or resizing.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(set-rubber-band-mask! value)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Set the rubber band mask used when dragging or resizing.
<parameter>value</parameter> is XORed with the background when dragging non-opaque move or
resize frames. <parameter>value</parameter> should be an integer.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/resize.c"><filename>scwm/resize.c</filename></ulink>
  at line 312 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/resize.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="set-shadow-factor-x">
  <refnamediv>
    <refname>set-shadow-factor!</refname>
    <refpurpose>Use FACTOR to generate shadow colors in the current decor.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(set-shadow-factor! factor)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Use <parameter>factor</parameter> to generate shadow colors in the current decor.
<parameter>factor</parameter> is a positive floating point number
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/color.c"><filename>scwm/color.c</filename></ulink>
  at line 590 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/color.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="set-show-icon-x">
  <refnamediv>
    <refname>set-show-icon!</refname>
    <refpurpose>Set whether or not the icon of WIN will be visible.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(set-show-icon! flag #&amp;optional win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Set whether or not the icon of <parameter>win</parameter> will be visible.  If <parameter>flag</parameter>
is <literal>#t</literal>, the icon will be displayed, if <literal>#f</literal>, it will not appear when the
window is iconified (it will still be in the window list, of course).
<parameter>win</parameter> defaults to the window context in the usual way if not
specified.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/window.c"><filename>scwm/window.c</filename></ulink>
  at line 3761 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="set-skip-mapping-x">
  <refnamediv>
    <refname>set-skip-mapping!</refname>
    <refpurpose>Set or reset whether scwm should not change desktops on a map.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(set-skip-mapping! flag #&amp;optional win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Set or reset whether scwm should not change desktops on a map.
This only affect the behaviour upon initial mapping of <parameter>win</parameter>. If <parameter>flag</parameter> is
<literal>#t</literal>, the virtual desktop will not be changed when <parameter>win</parameter> is mapped.  <parameter>win</parameter>
defaults to the window context in the usual way if not specified.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/window.c"><filename>scwm/window.c</filename></ulink>
  at line 4020 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="set-smart-placement-x">
  <refnamediv>
    <refname>set-smart-placement!</refname>
    <refpurpose>Set the smart-placement flag of WIN to boolean FLAG.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(set-smart-placement! flag #&amp;optional win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Set the smart-placement flag of <parameter>win</parameter> to boolean <parameter>flag</parameter>.
This flag only matters if the default placement procedure is
being used. <parameter>win</parameter> defaults to the window context in the usual way if not
specified.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/window.c"><filename>scwm/window.c</filename></ulink>
  at line 3613 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="set-smart-placement-is-really-smart-x">
  <refnamediv>
    <refname>set-smart-placement-is-really-smart!</refname>
    <refpurpose>Determine whether or not <link linkend="clever-place-window"><function>clever-place-window</function></link> will be used when smart-placing.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(set-smart-placement-is-really-smart! flag)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Determine whether or not <link linkend="clever-place-window"><function>clever-place-window</function></link> will be used when smart-placing.
If <parameter>flag</parameter> is <literal>#t</literal>, then <link linkend="clever-place-window"><function>clever-place-window</function></link> will be used instead of
<link linkend="smart-place-window"><function>smart-place-window</function></link> when the default placement procedure is used, and
the window's smart-placement flag is on.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/miscprocs.c"><filename>scwm/miscprocs.c</filename></ulink>
  at line 283 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/miscprocs.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="set-start-on-desk-x">
  <refnamediv>
    <refname>set-start-on-desk!</refname>
    <refpurpose>Make WIN start on DESK when first mapped.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(set-start-on-desk! desk #&amp;optional win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Make <parameter>win</parameter> start on <parameter>desk</parameter> when first mapped. <parameter>win</parameter> defaults to the
window context in the usual way if not specified.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/window.c"><filename>scwm/window.c</filename></ulink>
  at line 3998 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="set-title-face-x">
  <refnamediv>
    <refname>set-title-face!</refname>
    <refpurpose>Set the titlebar faces for the various window states.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(set-title-face! active-up #&amp;optional active-down inactive)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Set the titlebar faces for the various window states.
In the current decor, use <parameter>active-up</parameter> as the face for the title
bar when active and not pressed in. Use <parameter>active-down</parameter> when the title bar
is active and pressed in, and <parameter>inactive</parameter> when the window is
inactive. Both <parameter>inactive</parameter> and <parameter>active-down</parameter> default to <parameter>active-up</parameter> when not
specified. Note that <parameter>active-down</parameter> will magically reverse the sense of
the relief flag, so if your titlebar bar is raised in the <parameter>active-up</parameter>
state, it will be sunk in the <parameter>active-down</parameter> state by default.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/face.c"><filename>scwm/face.c</filename></ulink>
  at line 857 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/face.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="set-title-font-x">
  <refnamediv>
    <refname>set-title-font!</refname>
    <refpurpose>Set the font for window titles In the current decor to FONT.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(set-title-font! font)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Set the font for window titles In the current decor to <parameter>font</parameter>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/font.c"><filename>scwm/font.c</filename></ulink>
  at line 271 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/font.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="set-title-height-x">
  <refnamediv>
    <refname>set-title-height!</refname>
    <refpurpose>Set the height of the titlebar in pixels to HEIGHT.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(set-title-height! height)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Set the height of the titlebar in pixels to <parameter>height</parameter>.
Applies to the current decor.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/miscprocs.c"><filename>scwm/miscprocs.c</filename></ulink>
  at line 86 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/miscprocs.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="set-title-justify-x">
  <refnamediv>
    <refname>set-title-justify!</refname>
    <refpurpose>Set the justification for the title to JUST.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(set-title-justify! just)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Set the justification for the title to <parameter>just</parameter>.
<parameter>just</parameter> should be one of 'right, 'left, or 'center. Applies to the
current decor.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/miscprocs.c"><filename>scwm/miscprocs.c</filename></ulink>
  at line 37 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/miscprocs.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="set-viewport-position-x">
  <refnamediv>
    <refname>set-viewport-position!</refname>
    <refpurpose>Position the upper left corner of the viewport at coordinates X, Y.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(set-viewport-position! x y)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Position the upper left corner of the viewport at coordinates <parameter>x</parameter>, <parameter>y</parameter>.
<parameter>x</parameter> and <parameter>y</parameter> are given in pixels.  Does not affect the current desk.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/deskpage.c"><filename>scwm/deskpage.c</filename></ulink>
  at line 101 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/deskpage.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="set-window-background-x">
  <refnamediv>
    <refname>set-window-background!</refname>
    <refpurpose>Set the background color of WIN to BG.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(set-window-background! bg #&amp;optional win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Set the background color of <parameter>win</parameter> to <parameter>bg</parameter>.
This color is used to draw most of the window decorations, along with
the relief colors generated from it, which are used to draw the
window's 3-D bevels.  <parameter>win</parameter> defaults to the window context in the usual
way if not specified.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/window.c"><filename>scwm/window.c</filename></ulink>
  at line 3502 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="set-window-button-x">
  <refnamediv>
    <refname>set-window-button!</refname>
    <refpurpose>Set the visibility of button number N on window WIN.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(set-window-button! n flag #&amp;optional win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Set the visibility of button number <parameter>n</parameter> on window <parameter>win</parameter>.
If <parameter>flag</parameter> is <literal>#t</literal>, the button will be visible, otherwise it won't be
drawn.  <parameter>win</parameter> defaults to the window context in the usual way if not
specified. (<parameter>n</parameter>ote: the titlebar will not expand if you disable
a button via this procedure -- the decoration code is still
far from perfect.)
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/window.c"><filename>scwm/window.c</filename></ulink>
  at line 3628 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="set-window-colors-x">
  <refnamediv>
    <refname>set-window-colors!</refname>
    <refpurpose>Set WIN's background color to BG, foreground color to FG.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(set-window-colors! #&amp;optional (bg #f) (fg #f) (win (get-window)))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Set WIN's background color to BG, foreground color to FG.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm base)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/base.scm"><filename>scheme/base.scm</filename></ulink>
  at line 255 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/base.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="set-window-context-x">
  <refnamediv>
    <refname>set-window-context!</refname>
    <refpurpose>Set the current window context to WIN and return the old context.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(set-window-context! win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Set the current window context to <parameter>win</parameter> and return the old context.
<parameter>win</parameter> can be either a window, or <literal>#f</literal>, to reset the current window-context.
See also <link linkend="with-window"><function>with-window</function></link> and <link linkend="get-window"><function>get-window</function></link>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/window.c"><filename>scwm/window.c</filename></ulink>
  at line 1021 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="set-window-cursor-x">
  <refnamediv>
    <refname>set-window-cursor!</refname>
    <refpurpose>Set the default cursor for WIN to CURSOR.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(set-window-cursor! win cursor)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Set the default cursor for <parameter>win</parameter> to <parameter>cursor</parameter>.
If <parameter>cursor</parameter> is <literal>#f</literal>, this undefines the cursor for <parameter>win</parameter> and
makes that window use its parent window's cursor.
See <link linkend="get-x-cursor"><function>get-x-cursor</function></link>, and <link linkend="create-pixmap-cursor"><function>create-pixmap-cursor</function></link> for ways
to create cursor objects.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/cursor.c"><filename>scwm/cursor.c</filename></ulink>
  at line 225 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/cursor.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="set-window-decor-x">
  <refnamediv>
    <refname>set-window-decor!</refname>
    <refpurpose>Set WIN's decor to DECOR, updating its decorations appropriately.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(set-window-decor! win decor)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Set <parameter>win</parameter>'s decor to <parameter>decor</parameter>, updating its decorations appropriately.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/decor.c"><filename>scwm/decor.c</filename></ulink>
  at line 274 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/decor.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="set-window-focus-x">
  <refnamediv>
    <refname>set-window-focus!</refname>
    <refpurpose>Set the focus style of WIN to SYM.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(set-window-focus! sym #&amp;optional win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Set the focus style of <parameter>win</parameter> to <parameter>sym</parameter>. <parameter>sym</parameter> may be 'click, 'mouse,
'sloppy or 'none. <parameter>win</parameter> defaults to the window context in the usual way
if not specified.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/window.c"><filename>scwm/window.c</filename></ulink>
  at line 3392 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="set-window-foreground-x">
  <refnamediv>
    <refname>set-window-foreground!</refname>
    <refpurpose>Set the foreground color of WIN to FG.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(set-window-foreground! fg #&amp;optional win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Set the foreground color of <parameter>win</parameter> to <parameter>fg</parameter>.
This color is used to draw the title text currently. In the future, it
may have other uses as well. <parameter>win</parameter> defaults to the window context in the
usual way if not specified.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/window.c"><filename>scwm/window.c</filename></ulink>
  at line 3478 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="set-window-gravity-x">
  <refnamediv>
    <refname>set-window-gravity!</refname>
    <refpurpose>Sets the gravity for WIN to GRAVITY.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(set-window-gravity! gravity #&amp;optional win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Sets the gravity for <parameter>win</parameter> to <parameter>gravity</parameter>.
<parameter>gravity</parameter> must be one of the following:
'forget, 'northwest, 'north, 'northeast,
'west, 'center, 'east, 'southwest 'south, 'southeast,
'static.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/window.c"><filename>scwm/window.c</filename></ulink>
  at line 2553 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="set-window-highlight-background-x">
  <refnamediv>
    <refname>set-window-highlight-background!</refname>
    <refpurpose>Set the highlighted background color of WIN to BG.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(set-window-highlight-background! bg #&amp;optional win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Set the highlighted background color of <parameter>win</parameter> to <parameter>bg</parameter>.
This color is used when <parameter>win</parameter> has the focus to draw most of the window
decorations, along with the relief colors generated from it, which are
used to draw the window's 3-D bevels.  <parameter>win</parameter> defaults to the window context
in the usual way if not specified. If <parameter>bg</parameter> is <literal>#f</literal>, then lets the decor
highlight background color be used (turns off a special highlight color
for <parameter>win</parameter>).
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/window.c"><filename>scwm/window.c</filename></ulink>
  at line 3562 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="set-window-highlight-foreground-x">
  <refnamediv>
    <refname>set-window-highlight-foreground!</refname>
    <refpurpose>Set the highlighted foreground color of WIN to FG.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(set-window-highlight-foreground! fg #&amp;optional win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Set the highlighted foreground color of <parameter>win</parameter> to <parameter>fg</parameter>.
This color is used to draw the title text when <parameter>win</parameter> has the focus.
In the future, it may have other uses
as well. <parameter>win</parameter> defaults to the window context in the usual way
if not specified. If <parameter>fg</parameter> is <literal>#f</literal>, then lets the decor highlight
foreground color be used (turns off a special highlight
color for <parameter>win</parameter>).
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/window.c"><filename>scwm/window.c</filename></ulink>
  at line 3533 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="set-window-placement-proc-x">
  <refnamediv>
    <refname>set-window-placement-proc!</refname>
    <refpurpose>Set the 'placement-proc property of WIN to PROC.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(set-window-placement-proc! proc win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Set the 'placement-proc property of WIN to PROC.
When the window manager tries to place WIN, it will call PROC to
actually set its position.  This function must be called before the 
window is placed (i.e., from before-new-window-hook); see <link linkend="window-style"><function>window-style</function></link>
for a way to make sure this function is called at the correct time.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm style)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/style.scm"><filename>scheme/style.scm</filename></ulink>
  at line 258 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/style.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="set-window-property-x">
  <refnamediv>
    <refname>set-window-property!</refname>
    <refpurpose>Set window property PROP of WIN to VAL.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(set-window-property! win prop val)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Set window property <parameter>prop</parameter> of <parameter>win</parameter> to <parameter>val</parameter>.
<parameter>prop</parameter> should be a symbol. <parameter>val</parameter> may be any Scheme object. This name/value
pair will be associated with the window, and may be retrieved with
<link linkend="window-property"><function>window-property</function></link>. Passing <literal>#f</literal> as the value will delete the property
instead. Soon, some properties will have magical meanings, altering
particular fields in the window structure. Also, a
window-property-change-hook mechanism will soon be implemented for
notification of all window property changes. This is not yet done. The
window property primitives should be considered in flux.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/winprop.c"><filename>scwm/winprop.c</filename></ulink>
  at line 88 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/winprop.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="set-window-title-x">
  <refnamediv>
    <refname>set-window-title!</refname>
    <refpurpose>Change the window title X-Property of WIN to TITLE.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(set-window-title! win title)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Change the window title X-Property of WIN to TITLE.
WIN is a Scwm window object, TITLE is a string.  This procedure alters the
window title by changing the WM_NAME X-Property.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm xprop-extras)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/xprop-extras.scm"><filename>scheme/xprop-extras.scm</filename></ulink>
  at line 13 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/xprop-extras.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="set-window-transient-placement-proc-x">
  <refnamediv>
    <refname>set-window-transient-placement-proc!</refname>
    <refpurpose>Like <link linkend="set-window-placement-proc-x"><function>set-window-placement-proc!</function></link> (which see), but for transient</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(set-window-transient-placement-proc! proc win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Like <link linkend="set-window-placement-proc-x"><function>set-window-placement-proc!</function></link> (which see), but for transient
windows.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm style)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/style.scm"><filename>scheme/style.scm</filename></ulink>
  at line 266 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/style.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="set-X-server-synchronize-x">
  <refnamediv>
    <refname>set-X-server-synchronize!</refname>
    <refpurpose>Set X server sychronization flag to FLAG.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(set-X-server-synchronize! flag)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Set X server sychronization flag to <parameter>flag</parameter>.
If <parameter>flag</parameter> is <literal>#t</literal>, then Scwm will turn on synchronous X behaviour; if <parameter>flag</parameter>
is <literal>#f</literal>, Scwm will turn off synchronous behaviour.  Scwm is slower in
synchronous mode, but can be easier to debug.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/miscprocs.c"><filename>scwm/miscprocs.c</filename></ulink>
  at line 497 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/miscprocs.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="shadow-factor">
  <refnamediv>
    <refname>shadow-factor</refname>
    <refpurpose>Return the current shadow factor.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(shadow-factor)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the current shadow factor.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/color.c"><filename>scwm/color.c</filename></ulink>
  at line 612 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/color.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="should-circulate-skip-p">
  <refnamediv>
    <refname>should-circulate-skip?</refname>
    <refpurpose>Return <literal>#t</literal> if WIN should now be skipped when circulating, <literal>#f</literal> otherwise.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(should-circulate-skip? #&amp;optional (win (get-window)))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return <literal>#t</literal> if WIN should now be skipped when circulating, <literal>#f</literal> otherwise.
Uses the current state of WIN (whether it is iconified or not) in
determining the result.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm winlist)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/winlist.scm"><filename>scheme/winlist.scm</filename></ulink>
  at line 298 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/winlist.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="show-com">
  <refnamediv>
    <refname>show-com</refname>
    <refpurpose>Return a lambda to show the stdout generated by the COM shell pipeline.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(show-com com)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return a lambda to show the stdout generated by the COM shell pipeline.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/flux.scm"><filename>scheme/flux.scm</filename></ulink>
  at line 176 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/flux.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="show-file">
  <refnamediv>
    <refname>show-file</refname>
    <refpurpose>Return a lambda to display the contents of filename in a window.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(show-file filename)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return a lambda to display the contents of filename in a window.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/flux.scm"><filename>scheme/flux.scm</filename></ulink>
  at line 172 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/flux.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="show-mesg">
  <refnamediv>
    <refname>show-mesg</refname>
    <refpurpose>Return a lambda to display the string arguments STR in a message window.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(show-mesg . str)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return a lambda to display the string arguments STR in a message window.
See also <link linkend="message"><function>message</function></link>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/flux.scm"><filename>scheme/flux.scm</filename></ulink>
  at line 167 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/flux.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="show-selected-nonants">
  <refnamediv>
    <refname>show-selected-nonants</refname>
    <refpurpose>Show nonant markers on window when they are selected.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(show-selected-nonants)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Show nonant markers on window when they are selected.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm window-selection)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/window-selection.scm"><filename>scheme/window-selection.scm</filename></ulink>
  at line 231 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/window-selection.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="show-side-decorations">
  <refnamediv>
    <refname>show-side-decorations</refname>
    <refpurpose>No documentation supplied.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(show-side-decorations win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  No documentation supplied.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm style)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/style.scm"><filename>scheme/style.scm</filename></ulink>
  at line 192 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/style.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="show-system-info">
  <refnamediv>
    <refname>show-system-info</refname>
    <refpurpose>Display the <link linkend="system-info-string"><function>system-info-string</function></link> system details in a window.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(show-system-info)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Display the <link linkend="system-info-string"><function>system-info-string</function></link> system details in a window.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/flux.scm"><filename>scheme/flux.scm</filename></ulink>
  at line 205 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/flux.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="show-titlebar">
  <refnamediv>
    <refname>show-titlebar</refname>
    <refpurpose>Cause WIN to be decorated with a titlebar.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(show-titlebar  #&amp;optional win in-place?)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Cause <parameter>win</parameter> to be decorated with a titlebar.
Keeps the client window at its current location if <parameter>in-place?</parameter> is <literal>#t</literal>.
See also <link linkend="hide-titlebar"><function>hide-titlebar</function></link>.
<parameter>win</parameter> defaults to the window context in the usual way if not
specified.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/window.c"><filename>scwm/window.c</filename></ulink>
  at line 3111 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="show-titlebar-in-place">
  <refnamediv>
    <refname>show-titlebar-in-place</refname>
    <refpurpose>Turn on display of the titlebar for WIN without moving the client window.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(show-titlebar-in-place #&amp;optional (win (get-window)))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Turn on display of the titlebar for WIN without moving the client window.
This may move the frame to keep the application client window area in
the same position as before the call.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm winops)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/winops.scm"><filename>scheme/winops.scm</filename></ulink>
  at line 76 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/winops.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="show-window-list-matching-interactively">
  <refnamediv>
    <refname>show-window-list-matching-interactively</refname>
    <refpurpose>Prompt for a wildcard, and popup a list of matching windows (by title).</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(show-window-list-matching-interactively)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Prompt for a wildcard, and popup a list of matching windows (by title).
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/flux-gtk.scm"><filename>scheme/flux-gtk.scm</filename></ulink>
  at line 33 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/flux-gtk.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="show-window-list-menu">
  <refnamediv>
    <refname>show-window-list-menu</refname>
    <refpurpose>Popup a window list menu.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(show-window-list-menu warp-to-first #&rest rest)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Popup a window list menu.
Warps the pointer to the first menu item iff WARP-TO-FIRST is <literal>#t</literal>.
Accepts all keyword arguments that <link linkend="make-window-list-menu"><function>make-window-list-menu</function></link> takes.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm winlist)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/winlist.scm"><filename>scheme/winlist.scm</filename></ulink>
  at line 228 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/winlist.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="show-X-properties">
  <refnamediv>
    <refname>show-X-properties</refname>
    <refpurpose>Displays the X properties of WIN in a message window.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(show-X-properties #&amp;optional (win (get-window)))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Displays the X properties of WIN in a message window.
WIN is a window object, an X window id, or 'root-window.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/flux.scm"><filename>scheme/flux.scm</filename></ulink>
  at line 432 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/flux.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="shutdown-options">
  <refnamediv>
    <refname>shutdown-options</refname>
    <refpurpose>Configure shutdown preferences.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(shutdown-options #&amp;key switch-to-home-viewport
				  move-windows-to-current-viewport)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Configure shutdown preferences.

Both SWITCH-TO-HOME-VIEWPORT and MOVE-WINDOWS-TO-CURRENT-VIEWPORT may
be be any of <literal>#f</literal>, <literal>#t</literal>, 'shutdown-only or 'restart-only. These options
indicate when scwm should switch to the (0 0) viewport on shutdown,
and whether all windows are moved to to the current viewport on
shutdown, respectively.

The possible settings mean never, always, only when shutting down or
only when restarting, respectively.

Any window movement is done after any viewport switching.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm shutdown-opts)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/shutdown-opts.scm"><filename>scheme/shutdown-opts.scm</filename></ulink>
  at line 32 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/shutdown-opts.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="simple-prompt-proc-hbox">
  <refnamediv>
    <refname>simple-prompt-proc-hbox</refname>
    <refpurpose>Create and return a procedure-prompting hbox and entry.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(simple-prompt-proc-hbox prompt initval)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Create and return a procedure-prompting hbox and entry.
PROMPT is the prompt, and INITVAL is the initial path (a procedure).
The returned value is a list: (hbox getter entry).
See also <link linkend="prompt-string"><function>prompt-string</function></link>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/prompt-string.scm"><filename>scheme/prompt-string.scm</filename></ulink>
  at line 89 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/prompt-string.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="simple-title-style">
  <refnamediv>
    <refname>simple-title-style</refname>
    <refpurpose>Set the style for titlebars.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(simple-title-style #&amp;key font height justify)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Set the style for titlebars.
FONT is a font object or a string, HEIGHT is a number of points,
JUSTIFY is a legal argument to <link linkend="set-title-justify-x"><function>set-title-justify!</function></link> such as 'left,
'right, or 'center.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm base)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/base.scm"><filename>scheme/base.scm</filename></ulink>
  at line 380 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/base.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="size-to-string">
  <refnamediv>
    <refname>size->string</refname>
    <refpurpose>Convert a two-element list to a string.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(size->string sz #&amp;optional (sep "x"))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Convert a two-element list to a string.
Use the optional second argument as the separator.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm stringops)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/stringops.scm"><filename>scheme/stringops.scm</filename></ulink>
  at line 34 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/stringops.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="sleep-ms">
  <refnamediv>
    <refname>sleep-ms</refname>
    <refpurpose>Delay for MS milliseconds.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(sleep-ms ms)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Delay for MS milliseconds.
Note that timer-hooks are much more useful in nearly all
cases.  See <link linkend="add-timer-hook-x"><function>add-timer-hook!</function></link>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/flux.scm"><filename>scheme/flux.scm</filename></ulink>
  at line 241 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/flux.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="SM-error-message">
  <refnamediv>
    <refname>SM-error-message</refname>
    <refpurpose>Return a string, describing why session management is not available.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(SM-error-message)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return a string, describing why session management is not available.
Only valid, if <link linkend="SM-register"><function>SM-register</function></link> returned <literal>#f</literal>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/session-manager.c"><filename>scwm/session-manager.c</filename></ulink>
  at line 477 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/session-manager.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="SM-register">
  <refnamediv>
    <refname>SM-register</refname>
    <refpurpose>Register Scwm with the session manager, and return the client id.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(SM-register)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Register Scwm with the session manager, and return the client id.
The return value is either an id string, or <literal>#f</literal> if the session manager could not be
initialized - <link linkend="SM-error-message"><function>SM-error-message</function></link> can be used to get more information in this
case.
If Scwm is already registered, this function just returns the client id.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/session-manager.c"><filename>scwm/session-manager.c</filename></ulink>
  at line 487 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/session-manager.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="smart-place-window">
  <refnamediv>
    <refname>smart-place-window</refname>
    <refpurpose>Places WIN using fvwm2's SmartPlacement algorithm.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(smart-place-window win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Places <parameter>win</parameter> using fvwm2's SmartPlacement algorithm.
The placement is just as if SmartPlacementIsReallySmart were not in
effect. That is, it tries to place the window so that it does not
overlap any other. If it fails to do so, it returns <literal>#f</literal>; otherwise it
returns <literal>#t</literal>.
This is called as part of <link linkend="default-placement-proc"><function>default-placement-proc</function></link>.  It could also be
used in user-defined placement procedures (see
<link linkend="set-window-placement-proc-x"><function>set-window-placement-proc!</function></link>).
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/placement.c"><filename>scwm/placement.c</filename></ulink>
  at line 446 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/placement.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="smart-placement-is-really-smart-p">
  <refnamediv>
    <refname>smart-placement-is-really-smart?</refname>
    <refpurpose>Return whether or not <link linkend="clever-place-window"><function>clever-place-window</function></link> will be used when smart-placing.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(smart-placement-is-really-smart?)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return whether or not <link linkend="clever-place-window"><function>clever-place-window</function></link> will be used when smart-placing.
If the value is <literal>#t</literal>, then <link linkend="clever-place-window"><function>clever-place-window</function></link> will be used instead of
smart-place-window when the default placement procedure is used, and
the window's smart-placement flag is on.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/miscprocs.c"><filename>scwm/miscprocs.c</filename></ulink>
  at line 298 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/miscprocs.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="snap-initialize">
  <refnamediv>
    <refname>snap-initialize</refname>
    <refpurpose>No documentation supplied.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(snap-initialize #&amp;optional (sw 25))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  No documentation supplied.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/snap.scm"><filename>scheme/snap.scm</filename></ulink>
  at line 175 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/snap.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="snap-reset">
  <refnamediv>
    <refname>snap-reset</refname>
    <refpurpose>No documentation supplied.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(snap-reset)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  No documentation supplied.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm snap)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/snap.scm"><filename>scheme/snap.scm</filename></ulink>
  at line 169 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/snap.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="sort">
  <refnamediv>
    <refname>sort</refname>
    <refpurpose>Returned LS sorted according to COMPARE (defaults to ascending numerical order).</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(sort ls #&amp;optional (compare <))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Returned LS sorted according to COMPARE (defaults to ascending numerical order).
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/sort.scm"><filename>scheme/sort.scm</filename></ulink>
  at line 41 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/sort.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="sort-options-by-type">
  <refnamediv>
    <refname>sort-options-by-type</refname>
    <refpurpose>No documentation supplied.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(sort-options-by-type symlist)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  No documentation supplied.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm preferences)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/preferences.scm"><filename>scheme/preferences.scm</filename></ulink>
  at line 301 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/preferences.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="sort-windows-by-middle-pos">
  <refnamediv>
    <refname>sort-windows-by-middle-pos</refname>
    <refpurpose>No documentation supplied.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(sort-windows-by-middle-pos winlist #&amp;key (horiz #t) (ascending #t))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  No documentation supplied.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/winops.scm"><filename>scheme/winops.scm</filename></ulink>
  at line 298 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/winops.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="sorted-by-car-string">
  <refnamediv>
    <refname>sorted-by-car-string</refname>
    <refpurpose>Sort the elements of list L based on the string value of their <link linkend="car"><function>car</function></link>.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(sorted-by-car-string l)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Sort the elements of list L based on the string value of their <link linkend="car"><function>car</function></link>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm menus-extras)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/menus-extras.scm"><filename>scheme/menus-extras.scm</filename></ulink>
  at line 38 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/menus-extras.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="sound-load">
  <refnamediv>
    <refname>sound-load</refname>
    <refpurpose>Load sound from FILE, tagging it with NAME.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(sound-load file #&amp;optional name)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Load sound from <parameter>file</parameter>, tagging it with <parameter>name</parameter>.
If <parameter>name</parameter> is not given, "scwm" is used.
Returns a sound object usable with the other sound functions.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Primitive from (app scwm esdsound)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/modules/esdsound/sound.c"><filename>modules/esdsound/sound.c</filename></ulink>
  at line 33 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/modules/esdsound/sound.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="sound-play">
  <refnamediv>
    <refname>sound-play</refname>
    <refpurpose>Play SOUND.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(sound-play sound)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Play <parameter>sound</parameter>.
<parameter>sound</parameter> must be an object returned by <link linkend="sound-load"><function>sound-load</function></link>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Primitive from (app scwm esdsound)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/modules/esdsound/sound.c"><filename>modules/esdsound/sound.c</filename></ulink>
  at line 90 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/modules/esdsound/sound.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="sound-unload">
  <refnamediv>
    <refname>sound-unload</refname>
    <refpurpose>Unload SOUND, freeing any resources it occupies.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(sound-unload sound)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Unload <parameter>sound</parameter>, freeing any resources it occupies.
<parameter>sound</parameter> must be an object returned by <link linkend="sound-load"><function>sound-load</function></link>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Primitive from (app scwm esdsound)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/modules/esdsound/sound.c"><filename>modules/esdsound/sound.c</filename></ulink>
  at line 69 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/modules/esdsound/sound.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="split-list-by-group">
  <refnamediv>
    <refname>split-list-by-group</refname>
    <refpurpose>No documentation supplied.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(split-list-by-group ls #&amp;optional (rest #f))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  No documentation supplied.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm menus-extras)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/menus-extras.scm"><filename>scheme/menus-extras.scm</filename></ulink>
  at line 68 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/menus-extras.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="start-constraints">
  <refnamediv>
    <refname>start-constraints</refname>
    <refpurpose>Start using the constraint solver.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(start-constraints)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Start using the constraint solver.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm constraints)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/constraints.scm"><filename>scheme/constraints.scm</filename></ulink>
  at line 30 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/constraints.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="start-highlighting-current-window">
  <refnamediv>
    <refname>start-highlighting-current-window</refname>
    <refpurpose>Add appropriate hook procedures to make the window with the mouse be highlighted.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(start-highlighting-current-window #&amp;optional (win (window-context)))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Add appropriate hook procedures to make the window with the mouse be highlighted.
See also <link linkend="end-highlighting-current-window"><function>end-highlighting-current-window</function></link>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm highlight-current-window)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/highlight-current-window.scm"><filename>scheme/highlight-current-window.scm</filename></ulink>
  at line 51 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/highlight-current-window.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="start-highlighting-selected-window">
  <refnamediv>
    <refname>start-highlighting-selected-window</refname>
    <refpurpose>Highlight the current window during window selections.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(start-highlighting-selected-window)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Highlight the current window during window selections.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm highlight-current-window)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/highlight-current-window.scm"><filename>scheme/highlight-current-window.scm</filename></ulink>
  at line 39 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/highlight-current-window.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="start-property-respond">
  <refnamediv>
    <refname>start-property-respond</refname>
    <refpurpose>Turn on property-change responses.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(start-property-respond)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Turn on property-change responses.
See <link linkend="property-changed-respond"><function>property-changed-respond</function></link> and <link linkend="X-PropertyNotify-hook"><function>X-PropertyNotify-hook</function></link>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm property-respond)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/property-respond.scm"><filename>scheme/property-respond.scm</filename></ulink>
  at line 99 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/property-respond.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="start-ui-constraints-buttons">
  <refnamediv>
    <refname>start-ui-constraints-buttons</refname>
    <refpurpose>No documentation supplied.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(start-ui-constraints-buttons)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  No documentation supplied.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm ui-constraints-buttons)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/ui-constraints-buttons.scm"><filename>scheme/ui-constraints-buttons.scm</filename></ulink>
  at line 129 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/ui-constraints-buttons.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="stick">
  <refnamediv>
    <refname>stick</refname>
    <refpurpose>Make WIN "sticky" so that it stays stationary in the viewport.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(stick  #&amp;optional win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Make <parameter>win</parameter> "sticky" so that it stays stationary in the viewport.
<parameter>win</parameter> defaults to the window context in the usual way if not
specified.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/window.c"><filename>scwm/window.c</filename></ulink>
  at line 2077 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="stick-icon">
  <refnamediv>
    <refname>stick-icon</refname>
    <refpurpose>Cause WIN's icon to become "sticky".</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(stick-icon  #&amp;optional win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Cause <parameter>win</parameter>'s icon to become "sticky". See <link linkend="stick"><function>stick</function></link>. <parameter>win</parameter>
defaults to the window context in the usual way if not specified.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/window.c"><filename>scwm/window.c</filename></ulink>
  at line 3294 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="sticky-p">
  <refnamediv>
    <refname>sticky?</refname>
    <refpurpose>Return <literal>#t</literal> if WIN is "sticky", <literal>#f</literal> otherwise.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(sticky?  #&amp;optional win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return <literal>#t</literal> if <parameter>win</parameter> is "sticky", <literal>#f</literal> otherwise.
See <link linkend="stick"><function>stick</function></link> for an explanation. <parameter>win</parameter> defaults to the
window context in the usual way if not specified.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/window.c"><filename>scwm/window.c</filename></ulink>
  at line 2147 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="stop-flashing-window">
  <refnamediv>
    <refname>stop-flashing-window</refname>
    <refpurpose>Turn off window flashing of WIN.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(stop-flashing-window #&amp;optional (win (get-window)))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Turn off window flashing of WIN.
Has no effect if WIN is not flashing.
N.B. flashing and highlight-selection of windows currently use the
same mechanism, so turning off flashing will also visually un-select
WIN.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/flash-window.scm"><filename>scheme/flash-window.scm</filename></ulink>
  at line 68 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/flash-window.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="stop-property-respond">
  <refnamediv>
    <refname>stop-property-respond</refname>
    <refpurpose>Turn off property-change responses.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(stop-property-respond)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Turn off property-change responses.
See <link linkend="property-changed-respond"><function>property-changed-respond</function></link> and <link linkend="X-PropertyNotify-hook"><function>X-PropertyNotify-hook</function></link>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/property-respond.scm"><filename>scheme/property-respond.scm</filename></ulink>
  at line 104 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/property-respond.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="stop-simplebiff">
  <refnamediv>
    <refname>stop-simplebiff</refname>
    <refpurpose>No documentation supplied.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(stop-simplebiff sb)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  No documentation supplied.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/simplebiff.scm"><filename>scheme/simplebiff.scm</filename></ulink>
  at line 76 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/simplebiff.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="string-to-proplist">
  <refnamediv>
    <refname>string->proplist</refname>
    <refpurpose>Return a proplist object containing STRING.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(string->proplist string)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return a proplist object containing <parameter>string</parameter>.
This is often unnecessary as the proplist procedures will
permit Guile strings to be used anywhere a string proplist object is expected.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Primitive from (app scwm proplist)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/modules/proplist/scwmproplist.c"><filename>modules/proplist/scwmproplist.c</filename></ulink>
  at line 422 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/modules/proplist/scwmproplist.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="string-to-X-atom">
  <refnamediv>
    <refname>string->X-atom</refname>
    <refpurpose>Returns an X atom representing STRING.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(string->X-atom string)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Returns an X atom representing <parameter>string</parameter>.
If <parameter>string</parameter> contains NULL-characters, the behaviour is undefined.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/xproperty.c"><filename>scwm/xproperty.c</filename></ulink>
  at line 374 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/xproperty.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="string-join">
  <refnamediv>
    <refname>string-join</refname>
    <refpurpose>Concatenates the list STRINGS into a single string.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(string-join delimit strings)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Concatenates the list STRINGS into a single string.
DELIMIT is put between every two elements of STRINGS.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/stringops.scm"><filename>scheme/stringops.scm</filename></ulink>
  at line 78 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/stringops.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="string-with-colons-to-path-list">
  <refnamediv>
    <refname>string-with-colons->path-list</refname>
    <refpurpose>Convert S, a colon-separated directory pathlist, into a list of directory strings.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(string-with-colons->path-list s)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Convert S, a colon-separated directory pathlist, into a list of directory strings.
Returns that list.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/file.scm"><filename>scheme/file.scm</filename></ulink>
  at line 87 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/file.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="style-one-window">
  <refnamediv>
    <refname>style-one-window</refname>
    <refpurpose>No documentation supplied.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(style-one-window win . args)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  No documentation supplied.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm style)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/style.scm"><filename>scheme/style.scm</filename></ulink>
  at line 37 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/style.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="style-option--cumulative-p">
  <refnamediv>
    <refname>style-option:cumulative?</refname>
    <refpurpose>No documentation supplied.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(style-option:cumulative? window-style-options key)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  No documentation supplied.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/style-options.scm"><filename>scheme/style-options.scm</filename></ulink>
  at line 68 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/style-options.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="style-option--handler">
  <refnamediv>
    <refname>style-option:handler</refname>
    <refpurpose>No documentation supplied.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(style-option:handler key)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  No documentation supplied.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm style-options)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/style-options.scm"><filename>scheme/style-options.scm</filename></ulink>
  at line 64 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/style-options.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="style-option--type">
  <refnamediv>
    <refname>style-option:type</refname>
    <refpurpose>No documentation supplied.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(style-option:type key)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  No documentation supplied.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm style-options)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/style-options.scm"><filename>scheme/style-options.scm</filename></ulink>
  at line 66 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/style-options.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="support-image-conversion">
  <refnamediv>
    <refname>support-image-conversion</refname>
    <refpurpose>Set things up to try to load arbitrary images.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(support-image-conversion)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Set things up to try to load arbitrary images.
Works by setting <link linkend="try-everything-loader"><function>try-everything-loader</function></link> as the image loader for
unknown extensions.  Generally not needed with ImLib.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/image-loaders.scm"><filename>scheme/image-loaders.scm</filename></ulink>
  at line 55 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/image-loaders.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="system-info-string">
  <refnamediv>
    <refname>system-info-string</refname>
    <refpurpose>Return a string with various system information.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(system-info-string)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return a string with various system information.
Use <link linkend="show-system-info"><function>show-system-info</function></link> to display it in a window.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/flux.scm"><filename>scheme/flux.scm</filename></ulink>
  at line 118 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/flux.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="take-screenshot">
  <refnamediv>
    <refname>take-screenshot</refname>
    <refpurpose>Take a snapshot of the whole screen.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(take-screenshot
		 #&amp;optional (template (string-append
				       (user-home)
				       "/screenshot%y%m%d%H%M%S.xwd")))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Take a snapshot of the whole screen.
The screenshot will be saved in xwd format in the filename constructed from
TEMPLATE. %-escapes in TEMPLATE will be replaced by time-elements, according
to strftime rules. TEMPLATE defaults to the file "screenshot%y%m%d%H%M%S.xwd"
in the user's home directory.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/flux.scm"><filename>scheme/flux.scm</filename></ulink>
  at line 369 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/flux.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="theme-names">
  <refnamediv>
    <refname>theme-names</refname>
    <refpurpose>No documentation supplied.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(theme-names)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  No documentation supplied.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/themes.scm"><filename>scheme/themes.scm</filename></ulink>
  at line 189 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/themes.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="theme--background-style">
  <refnamediv>
    <refname>theme:background-style</refname>
    <refpurpose>No documentation supplied.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(theme:background-style theme)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  No documentation supplied.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/theme-impl.scm"><filename>scheme/theme-impl.scm</filename></ulink>
  at line 73 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/theme-impl.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="theme--name">
  <refnamediv>
    <refname>theme:name</refname>
    <refpurpose>No documentation supplied.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(theme:name theme)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  No documentation supplied.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm theme-impl)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/theme-impl.scm"><filename>scheme/theme-impl.scm</filename></ulink>
  at line 67 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/theme-impl.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="theme--window-style">
  <refnamediv>
    <refname>theme:window-style</refname>
    <refpurpose>No documentation supplied.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(theme:window-style theme)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  No documentation supplied.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm theme-impl)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/theme-impl.scm"><filename>scheme/theme-impl.scm</filename></ulink>
  at line 70 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/theme-impl.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="there-exists-p">
  <refnamediv>
    <refname>there-exists?</refname>
    <refpurpose>Return true if PRED is true for at least one elements of L, otherwise false.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(there-exists? l pred)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return true if PRED is true for at least one elements of L, otherwise false.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm listops)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/listops.scm"><filename>scheme/listops.scm</filename></ulink>
  at line 95 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/listops.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="tile">
  <refnamediv>
    <refname>tile</refname>
    <refpurpose>Tile the windows on the specified desk.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(tile #&amp;key (only ()) (except ()) 
			 (by-stacking #f) (by-focus #f)
			 (reverse #f)
			 (all-viewports #f) (desk (current-desk))
			 (ignore-default-exceptions #f)
			 (start-pos '(0 0)) 
			 (end-pos (display-size)) (resize 'always)
			 (raise 'restack-only)
			 (max-windows #f)
			 (order 'horizontal))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Tile the windows on the specified desk.
The DESK option, defaulting to the current desk, specifies which desk;
ALL-VIEWPORTS, when true indicates that the windows in all viewports
of this desk should be tiled, otherwise only the current viewport
is tiled. 

The options ONLY, EXCEPT, BY-STACKING, BY-FOCUS and REVERSE indicate
the windows to use and the order to use them in, as with
<link linkend="list-windows"><function>list-windows</function></link>. However, unless IGNORE-DEFAULT-EXCEPTIONS is <literal>#t</literal>,
transient, maximized, sticky and iconified windows will be always be
excluded.

START-POS, END-POS, RESIZE, RAISE, MAX-WINDOWS and ORDER
control the tiling options as for <link linkend="tile-windows"><function>tile-windows</function></link>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/tile.scm"><filename>scheme/tile.scm</filename></ulink>
  at line 124 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/tile.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="tile-windows">
  <refnamediv>
    <refname>tile-windows</refname>
    <refpurpose>Tile WINDOWS according to several parameters.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(tile-windows
		 windows #&amp;key (start-pos '(0 0)) 
		 (end-pos (display-size)) (resize 'always)
		 (raise 'restack-only)
		 (max-windows #f)
		 (order 'horizontal))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Tile WINDOWS according to several parameters.  

Tiling places the windows according to a grid from START-POS, (0 0) by
default, to END-POS, the size of the display by default. 

If MAX-WINDOWS is specified and not <literal>#f</literal>, at most MAX-WINDOWS elements
of WINDOWS will be operated on.

If ORDER is 'horizontal, the windows will be tiled in row-major order;
if it is 'vertical they will be tiled in column-major oder.

RESIZE may be <literal>#f</literal>, 'shrink-only or 'always, indicating that the windows
should never be resized, that they should be resized to the max-size
only if they are bigger, or that they should always be resized to the
max size. The default is 'shrink-only.

RAISE may be <literal>#f</literal>, <literal>#t</literal>, or 'restack-only, indicating that the windows
should not be moved in the stacking order; that they should be raised
on top of other windows and placed in the tile order with the upper
left window lowest in the stacking order; or that they should be
restacked as for <literal>#t</literal> but not raised above other windows,
respectively. The default is 'restack-only.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm tile)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/tile.scm"><filename>scheme/tile.scm</filename></ulink>
  at line 34 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/tile.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="tile-windows-interactively">
  <refnamediv>
    <refname>tile-windows-interactively</refname>
    <refpurpose>Tile a set of selected windows either vertically or horizontally based on ORDER.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(tile-windows-interactively #&amp;optional (order 'vertical))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Tile a set of selected windows either vertically or horizontally based on ORDER.
The windows used are selected either by <link linkend="selected-windows-list"><function>selected-windows-list</function></link> or <link linkend="select-window-group"><function>select-window-group</function></link>.
If <link linkend="selected-windows-list"><function>selected-windows-list</function></link> is empty, then <link linkend="select-window-group"><function>select-window-group</function></link> is used.
See also the undo module and <link linkend="insert-undo-global"><function>insert-undo-global</function></link> to save the window 
configuration before executing this in case the effect is not what you
expected.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/flux.scm"><filename>scheme/flux.scm</filename></ulink>
  at line 476 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/flux.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="time-t-to-seconds-ago">
  <refnamediv>
    <refname>time-t->seconds-ago</refname>
    <refpurpose>Return the number of seconds that have passed since TIMET was the current time.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(time-t->seconds-ago timet)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the number of seconds that have passed since TIMET was the current time.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm wininfo)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/wininfo.scm"><filename>scheme/wininfo.scm</filename></ulink>
  at line 149 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/wininfo.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="title-font">
  <refnamediv>
    <refname>title-font</refname>
    <refpurpose>Return the font used for drawing window titles in the current decor.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(title-font)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the font used for drawing window titles in the current decor.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/font.c"><filename>scwm/font.c</filename></ulink>
  at line 293 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/font.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="title-height">
  <refnamediv>
    <refname>title-height</refname>
    <refpurpose>Return the height of the titlebar in pixels, as set by <link linkend="set-title-height-x"><function>set-title-height!</function></link>.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(title-height)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the height of the titlebar in pixels, as set by <link linkend="set-title-height-x"><function>set-title-height!</function></link>.
Applies to the current decor.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/miscprocs.c"><filename>scwm/miscprocs.c</filename></ulink>
  at line 113 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/miscprocs.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="title-justify">
  <refnamediv>
    <refname>title-justify</refname>
    <refpurpose>Return the current justification for the title, as set by <link linkend="set-title-justify-x"><function>set-title-justify!</function></link>.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(title-justify)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the current justification for the title, as set by <link linkend="set-title-justify-x"><function>set-title-justify!</function></link>.
The return value will be one of 'right, 'left, or 'center. Applies to the
current decor.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/miscprocs.c"><filename>scwm/miscprocs.c</filename></ulink>
  at line 64 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/miscprocs.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="title-match--p">
  <refnamediv>
    <refname>title-match??</refname>
    <refpurpose>Return a predicate that tests a window's title.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(title-match?? STRING TYPE CASE-SENSITIVE?)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return a predicate that tests a window's title.  
When applied to a window, this predicate will return true if the title
matches STRING in the manner specified by the optional argument TYPE,
which may be 'exact, 'regexp, or 'wildcard. The optional
CASE-SENSITIVE argument determines whether the matching is
case-sensitive or not.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm wininfo)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/wininfo.scm"><filename>scheme/wininfo.scm</filename></ulink>
  at line 286 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/wininfo.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="title-style">
  <refnamediv>
    <refname>title-style</refname>
    <refpurpose>Set the title style in the current decor.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(title-style #&amp;key font height justify
			     (active-up '()) 
			     (active-down '()) 
			     (inactive '()) #&amp;allow-other-keys #&rest rest)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Set the title style in the current decor.
FONT is the window title font, a font object or a string.
HEIGHT is the height of the title bar, in points.
JUSTIFY is one of 'left, 'right, or 'center.
This function also takes the keyword arguments #:relief, #:solid,
#:gradient, #:h-gradient, #:v-gradient, and #:pixmap, with effects
as described under the `Face Flags' and `Face Specification Flags'
concepts (except that #:pixmap is always tiled, and #:h-gradient
and #:v-gradient are horizontal and vertical gradients).  These
extra keyword arguments can either be included in the main argument
list, or lists of these arguments can be used as the ACTIVE-UP,
ACTIVE-DOWN, or INACTIVE arguments.  For instance:
  (title-style #:solid "red" #:inactive (list #:solid "green"))
would set the title to be red in either active state, and green
in the inactive state, leaving FONT, HEIGHT, and JUSTIFY in their
current state, and returning everything else about the title
to their default state.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm face)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/face.scm"><filename>scheme/face.scm</filename></ulink>
  at line 37 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/face.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="titlebar-shown-p">
  <refnamediv>
    <refname>titlebar-shown?</refname>
    <refpurpose>Return <literal>#t</literal> if WIN is decorated with a titlebar, <literal>#f</literal> otherwise.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(titlebar-shown?  #&amp;optional win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return <literal>#t</literal> if <parameter>win</parameter> is decorated with a titlebar, <literal>#f</literal> otherwise.
<parameter>win</parameter> defaults to the window context in the usual way if not
specified.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/window.c"><filename>scwm/window.c</filename></ulink>
  at line 3165 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="to-string">
  <refnamediv>
    <refname>to-string</refname>
    <refpurpose>Dump all arguments into a string.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(to-string . rest)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Dump all arguments into a string.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm stringops)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/stringops.scm"><filename>scheme/stringops.scm</filename></ulink>
  at line 74 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/stringops.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="toggle-docs-for">
  <refnamediv>
    <refname>toggle-docs-for</refname>
    <refpurpose>No documentation supplied.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(toggle-docs-for var)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  No documentation supplied.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm preferences)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/preferences.scm"><filename>scheme/preferences.scm</filename></ulink>
  at line 84 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/preferences.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="toggle-max-both">
  <refnamediv>
    <refname>toggle-max-both</refname>
    <refpurpose>Toggle the WIN's maximization (both vertically and horizontally).</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(toggle-max-both #&amp;optional (win (get-window)))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Toggle the WIN's maximization (both vertically and horizontally).
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/flux.scm"><filename>scheme/flux.scm</filename></ulink>
  at line 105 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/flux.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="toggle-max-horz">
  <refnamediv>
    <refname>toggle-max-horz</refname>
    <refpurpose>Toggle the WIN's maximized-horizontally state.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(toggle-max-horz #&amp;optional (win (get-window)))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Toggle the WIN's maximized-horizontally state.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/flux.scm"><filename>scheme/flux.scm</filename></ulink>
  at line 101 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/flux.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="toggle-max-vert">
  <refnamediv>
    <refname>toggle-max-vert</refname>
    <refpurpose>Toggle the current window's maximized-vertically state.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(toggle-max-vert #&amp;optional (win (get-window)))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Toggle the current window's maximized-vertically state.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/flux.scm"><filename>scheme/flux.scm</filename></ulink>
  at line 97 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/flux.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="toggle-max-vert-part">
  <refnamediv>
    <refname>toggle-max-vert-part</refname>
    <refpurpose>Toggle the WIN's maximization-vertically to 95% of the screen height.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(toggle-max-vert-part #&amp;optional (win (get-window)))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Toggle the WIN's maximization-vertically to 95% of the screen height.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/flux.scm"><filename>scheme/flux.scm</filename></ulink>
  at line 109 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/flux.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="toggle-maximize">
  <refnamediv>
    <refname>toggle-maximize</refname>
    <refpurpose>Maximize to width NW, height NH if not maximized, or unmaximize.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(toggle-maximize nw nh #&amp;optional (win (get-window)))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Maximize to width NW, height NH if not maximized, or unmaximize.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm winops)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/winops.scm"><filename>scheme/winops.scm</filename></ulink>
  at line 181 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/winops.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="transient-p">
  <refnamediv>
    <refname>transient?</refname>
    <refpurpose>Return <literal>#t</literal> if WIN is transient, <literal>#f</literal> if not.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(transient?  #&amp;optional win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return <literal>#t</literal> if <parameter>win</parameter> is transient, <literal>#f</literal> if not.
<parameter>win</parameter> defaults to the window context in the usual way if not
specified.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/window.c"><filename>scwm/window.c</filename></ulink>
  at line 1956 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="try-everything-loader">
  <refnamediv>
    <refname>try-everything-loader</refname>
    <refpurpose>Tries to load an arbitrary image, using any available loader.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(try-everything-loader fname)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Tries to load an arbitrary image, using any available loader.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm image-loaders)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/image-loaders.scm"><filename>scheme/image-loaders.scm</filename></ulink>
  at line 49 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/image-loaders.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="turn-off-only-focus-window-has-titlebar">
  <refnamediv>
    <refname>turn-off-only-focus-window-has-titlebar</refname>
    <refpurpose>Do not display titlebars on only the focuessed window.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(turn-off-only-focus-window-has-titlebar)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Do not display titlebars on only the focuessed window.
This forces titlebars on all other windows (ignoring window-style
commands).
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm focus-titlebar)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/focus-titlebar.scm"><filename>scheme/focus-titlebar.scm</filename></ulink>
  at line 38 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/focus-titlebar.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="turn-on-only-focus-window-has-titlebar">
  <refnamediv>
    <refname>turn-on-only-focus-window-has-titlebar</refname>
    <refpurpose>Start displaying a titlebar only on the focussed window.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(turn-on-only-focus-window-has-titlebar)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Start displaying a titlebar only on the focussed window.
This forces titlebars off all other windows (ignoring window-style
commands).
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm focus-titlebar)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/focus-titlebar.scm"><filename>scheme/focus-titlebar.scm</filename></ulink>
  at line 30 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/focus-titlebar.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="two-window-or-more-prompter">
  <refnamediv>
    <refname>two-window-or-more-prompter</refname>
    <refpurpose>No documentation supplied.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(two-window-or-more-prompter name p1 p2)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  No documentation supplied.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm ui-constraints-classes)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/ui-constraints-classes.scm"><filename>scheme/ui-constraints-classes.scm</filename></ulink>
  at line 84 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/ui-constraints-classes.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="two-window-prompter">
  <refnamediv>
    <refname>two-window-prompter</refname>
    <refpurpose>No documentation supplied.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(two-window-prompter name p1 p2)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  No documentation supplied.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm ui-constraints-classes)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/ui-constraints-classes.scm"><filename>scheme/ui-constraints-classes.scm</filename></ulink>
  at line 66 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/ui-constraints-classes.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="ui-constraint-add-enable-hook">
  <refnamediv>
    <refname>ui-constraint-add-enable-hook</refname>
    <refpurpose>Adds a HOOK proc which will be called when UI-CONSTRAINT enable state changes.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(ui-constraint-add-enable-hook ui-constraint hook)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Adds a HOOK proc which will be called when UI-CONSTRAINT enable state changes.
HOOK should take one argument which is the new state of the UI-CONSTRAINT.
Errors if UI-CONSTRAINT is not a ui-constraint object.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm ui-constraints)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/ui-constraints.scm"><filename>scheme/ui-constraints.scm</filename></ulink>
  at line 636 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/ui-constraints.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="ui-constraint-button">
  <refnamediv>
    <refname>ui-constraint-button</refname>
    <refpurpose>Returns the a reference to panel representing the UI-CONSTRAINT in the toggle menu.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(ui-constraint-button ui-constraint)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Returns the a reference to panel representing the UI-CONSTRAINT in the toggle menu.
Returns <literal>#f</literal> if the gtk toggle menu feature is not in use.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm ui-constraints)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/ui-constraints.scm"><filename>scheme/ui-constraints.scm</filename></ulink>
  at line 418 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/ui-constraints.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="ui-constraint-class">
  <refnamediv>
    <refname>ui-constraint-class</refname>
    <refpurpose>Returns the UI-CONSTRAINT-CLASS from the ui-constraint object UI-CONSTRAINT.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(ui-constraint-class ui-constraint)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Returns the UI-CONSTRAINT-CLASS from the ui-constraint object UI-CONSTRAINT.
errors if UI-CONSTRAINT is not an ui-constraint.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm ui-constraints)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/ui-constraints.scm"><filename>scheme/ui-constraints.scm</filename></ulink>
  at line 383 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/ui-constraints.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="ui-constraint-class-ctr">
  <refnamediv>
    <refname>ui-constraint-class-ctr</refname>
    <refpurpose>Returns the constructor for instance of the constraint class.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(ui-constraint-class-ctr ui-constraint-class)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Returns the constructor for instance of the constraint class.  errors
if UI-CONSTRAINT-CLASS is not a ui-constraint-class.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm ui-constraints)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/ui-constraints.scm"><filename>scheme/ui-constraints.scm</filename></ulink>
  at line 192 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/ui-constraints.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="ui-constraint-class-description">
  <refnamediv>
    <refname>ui-constraint-class-description</refname>
    <refpurpose>Returns the description for the constraint class.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(ui-constraint-class-description ui-constraint-class)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Returns the description for the constraint class.  
Erors if UI-CONSTRAINT-CLASS is not a ui-constraint-class.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm ui-constraints)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/ui-constraints.scm"><filename>scheme/ui-constraints.scm</filename></ulink>
  at line 166 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/ui-constraints.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="ui-constraint-class-draw-proc">
  <refnamediv>
    <refname>ui-constraint-class-draw-proc</refname>
    <refpurpose>returns the drawing procedure for instances of the constraint class.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(ui-constraint-class-draw-proc ui-constraint-class)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  returns the drawing procedure for instances of the constraint class.
errors if UI-CONSTRAINT-CLASS is not a ui-constraint-class
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm ui-constraints)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/ui-constraints.scm"><filename>scheme/ui-constraints.scm</filename></ulink>
  at line 218 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/ui-constraints.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="ui-constraint-class-menuname-proc">
  <refnamediv>
    <refname>ui-constraint-class-menuname-proc</refname>
    <refpurpose>Return the proc for determining the name for the constraint in</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(ui-constraint-class-menuname-proc ui-constraint-class)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the proc for determining the name for the constraint in
the toggle menu.  Errors if object is not a ui-constraint-class object.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm ui-constraints)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/ui-constraints.scm"><filename>scheme/ui-constraints.scm</filename></ulink>
  at line 249 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/ui-constraints.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="ui-constraint-class-name">
  <refnamediv>
    <refname>ui-constraint-class-name</refname>
    <refpurpose>Returns the name of the constraint class.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(ui-constraint-class-name ui-constraint-class)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Returns the name of the constraint class.
Errors if UI-CONSTRAINT-CLASS is not a ui-constraint-class.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm ui-constraints)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/ui-constraints.scm"><filename>scheme/ui-constraints.scm</filename></ulink>
  at line 158 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/ui-constraints.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="ui-constraint-class-num-windows">
  <refnamediv>
    <refname>ui-constraint-class-num-windows</refname>
    <refpurpose>Returns the number of windows constrainable by instances of the constraint </refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(ui-constraint-class-num-windows ui-constraint-class)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Returns the number of windows constrainable by instances of the constraint 
class.  errors if UI-CONSTRAINT-CLASS is not a ui-constraint-class.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm ui-constraints)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/ui-constraints.scm"><filename>scheme/ui-constraints.scm</filename></ulink>
  at line 179 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/ui-constraints.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="ui-constraint-class-pixmap-name">
  <refnamediv>
    <refname>ui-constraint-class-pixmap-name</refname>
    <refpurpose>Return the pixmap-name of UI-CONSTRAINT-CLASS.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(ui-constraint-class-pixmap-name ui-constraint-class)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the pixmap-name of UI-CONSTRAINT-CLASS.
Errors if object is not a ui-constraint-class object.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm ui-constraints)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/ui-constraints.scm"><filename>scheme/ui-constraints.scm</filename></ulink>
  at line 240 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/ui-constraints.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="ui-constraint-class-satisfied-proc">
  <refnamediv>
    <refname>ui-constraint-class-satisfied-proc</refname>
    <refpurpose>Returns the satisfaction checking procedure for instances of the</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(ui-constraint-class-satisfied-proc ui-constraint-class)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Returns the satisfaction checking procedure for instances of the
constraint class.  errors if UI-CONSTRAINT-CLASS is not a ui-constraint-class
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm ui-constraints)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/ui-constraints.scm"><filename>scheme/ui-constraints.scm</filename></ulink>
  at line 231 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/ui-constraints.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="ui-constraint-class-ui-ctr">
  <refnamediv>
    <refname>ui-constraint-class-ui-ctr</refname>
    <refpurpose>Returns the UI constructor for instances of the constraint class.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(ui-constraint-class-ui-ctr ui-constraint-class)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Returns the UI constructor for instances of the constraint class.
errors if UI-CONSTRAINT-CLASS is not a ui-constraint-class
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm ui-constraints)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/ui-constraints.scm"><filename>scheme/ui-constraints.scm</filename></ulink>
  at line 205 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/ui-constraints.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="ui-constraint-class-p">
  <refnamediv>
    <refname>ui-constraint-class?</refname>
    <refpurpose>Returns a boolean: true if UI-CONSTRAINT-CLASS is a vector and starts with the</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(ui-constraint-class? ui-constraint-class)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Returns a boolean: true if UI-CONSTRAINT-CLASS is a vector and starts with the
correct obid.  False otherwise.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm ui-constraints)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/ui-constraints.scm"><filename>scheme/ui-constraints.scm</filename></ulink>
  at line 130 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/ui-constraints.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="ui-constraint-cn">
  <refnamediv>
    <refname>ui-constraint-cn</refname>
    <refpurpose>Returns the CN list from the ui-constraint object UI-CONSTRAINT.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(ui-constraint-cn ui-constraint)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Returns the CN list from the ui-constraint object UI-CONSTRAINT.
errors if UI-CONSTRAINT is not a ui-constraint.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm ui-constraints)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/ui-constraints.scm"><filename>scheme/ui-constraints.scm</filename></ulink>
  at line 358 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/ui-constraints.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="ui-constraint-enable-hooks">
  <refnamediv>
    <refname>ui-constraint-enable-hooks</refname>
    <refpurpose>Returns a list of the enable-hook functions added to the UI-CONSTRAINT.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(ui-constraint-enable-hooks ui-constraint)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Returns a list of the enable-hook functions added to the UI-CONSTRAINT.
Errors if UI-CONSTRAINT is not a ui-constraint object.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm ui-constraints)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/ui-constraints.scm"><filename>scheme/ui-constraints.scm</filename></ulink>
  at line 653 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/ui-constraints.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="ui-constraint-enabled-p">
  <refnamediv>
    <refname>ui-constraint-enabled?</refname>
    <refpurpose>Returns the ENABLE from the ui-constraint object UI-CONSTRAINT.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(ui-constraint-enabled? ui-constraint)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Returns the ENABLE from the ui-constraint object UI-CONSTRAINT.
errors if UI-CONSTRAINT is not an ui-constraint.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm ui-constraints)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/ui-constraints.scm"><filename>scheme/ui-constraints.scm</filename></ulink>
  at line 371 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/ui-constraints.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="ui-constraint-opts">
  <refnamediv>
    <refname>ui-constraint-opts</refname>
    <refpurpose>Returns the list of optional data that may be added by the constraint class.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(ui-constraint-opts ui-constraint)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Returns the list of optional data that may be added by the constraint class.
Returns <literal>#f</literal> if no such data exists.  errors if UI-CONSTRAINT is not a ui-constraint.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm ui-constraints)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/ui-constraints.scm"><filename>scheme/ui-constraints.scm</filename></ulink>
  at line 408 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/ui-constraints.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="ui-constraint-remove-enable-hook">
  <refnamediv>
    <refname>ui-constraint-remove-enable-hook</refname>
    <refpurpose>Removes a HOOK proc from the list in UI-CONSTRAINT.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(ui-constraint-remove-enable-hook ui-constraint hook)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Removes a HOOK proc from the list in UI-CONSTRAINT.
Errors if UI-CONSTRAINT is not a ui-constraint object.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm ui-constraints)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/ui-constraints.scm"><filename>scheme/ui-constraints.scm</filename></ulink>
  at line 645 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/ui-constraints.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="ui-constraint-set-button-x">
  <refnamediv>
    <refname>ui-constraint-set-button!</refname>
    <refpurpose>Sets the reference to the gtk button for this instance in the toggle menu.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(ui-constraint-set-button! ui-constraint button)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Sets the reference to the gtk button for this instance in the toggle menu.
Errors if UI-CONSTRAINT is not a ui-constraint.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm ui-constraints)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/ui-constraints.scm"><filename>scheme/ui-constraints.scm</filename></ulink>
  at line 428 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/ui-constraints.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="ui-constraint-windows">
  <refnamediv>
    <refname>ui-constraint-windows</refname>
    <refpurpose>Returns the LIST-OF-WINDOWS from the ui-constraint object UI-CONSTRAINT.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(ui-constraint-windows ui-constraint)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Returns the LIST-OF-WINDOWS from the ui-constraint object UI-CONSTRAINT.
errors if UI-CONSTRAINT is not an ui-constraint.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm ui-constraints)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/ui-constraints.scm"><filename>scheme/ui-constraints.scm</filename></ulink>
  at line 396 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/ui-constraints.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="ui-constraint-p">
  <refnamediv>
    <refname>ui-constraint?</refname>
    <refpurpose>Returns <literal>#t</literal> if UI-CONSTRAINT is a ui-constraint.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(ui-constraint? ui-constraint)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Returns <literal>#t</literal> if UI-CONSTRAINT is a ui-constraint.
returns <literal>#f</literal> otherwise.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm ui-constraints)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/ui-constraints.scm"><filename>scheme/ui-constraints.scm</filename></ulink>
  at line 347 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/ui-constraints.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="ui-constraints-composition-begin">
  <refnamediv>
    <refname>ui-constraints-composition-begin</refname>
    <refpurpose>Begin recording the constraints used for the creation of a composition.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(ui-constraints-composition-begin)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Begin recording the constraints used for the creation of a composition.
End this recording by calling 'ui-constraints-composition-end'.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm ui-constraints-composition)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/ui-constraints-composition.scm"><filename>scheme/ui-constraints-composition.scm</filename></ulink>
  at line 46 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/ui-constraints-composition.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="ui-constraints-composition-end">
  <refnamediv>
    <refname>ui-constraints-composition-end</refname>
    <refpurpose>End the recording of a constraint composition.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(ui-constraints-composition-end #&amp;optional (cancel? #f))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  End the recording of a constraint composition.  NAME is the name to be 
given to the new composition.  Optionally, CANCEL may be specified to cancel
the construction of a composition.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm ui-constraints-composition)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/ui-constraints-composition.scm"><filename>scheme/ui-constraints-composition.scm</filename></ulink>
  at line 86 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/ui-constraints-composition.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="ui-constraints-gtk-toggle-menu">
  <refnamediv>
    <refname>ui-constraints-gtk-toggle-menu</refname>
    <refpurpose>Displays the GTK version of the constraints toggle menu.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(ui-constraints-gtk-toggle-menu)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Displays the GTK version of the constraints toggle menu.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm ui-constraints-gtk-toggle-menu)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/ui-constraints-gtk-toggle-menu.scm"><filename>scheme/ui-constraints-gtk-toggle-menu.scm</filename></ulink>
  at line 227 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/ui-constraints-gtk-toggle-menu.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="ui-constraints-involving-window">
  <refnamediv>
    <refname>ui-constraints-involving-window</refname>
    <refpurpose>Returns the list of ui-constraint objects that involve WIN.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(ui-constraints-involving-window win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Returns the list of ui-constraint objects that involve WIN.
The entire global-constraint-instance-list is checked.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm ui-constraints)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/ui-constraints.scm"><filename>scheme/ui-constraints.scm</filename></ulink>
  at line 522 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/ui-constraints.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="ui-constraints-toggle-menu">
  <refnamediv>
    <refname>ui-constraints-toggle-menu</refname>
    <refpurpose>Return a menu of constraints that permits toggling their enabled? state.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(ui-constraints-toggle-menu)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return a menu of constraints that permits toggling their enabled? state.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm ui-constraints-toggle-menu)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/ui-constraints-toggle-menu.scm"><filename>scheme/ui-constraints-toggle-menu.scm</filename></ulink>
  at line 30 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/ui-constraints-toggle-menu.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="un-keep-on-top">
  <refnamediv>
    <refname>un-keep-on-top</refname>
    <refpurpose>Remove the on-top property from WIN, if it has it.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(un-keep-on-top  #&amp;optional win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Remove the on-top property from <parameter>win</parameter>, if it has it.
See <link linkend="keep-on-top"><function>keep-on-top</function></link>. <parameter>win</parameter> defaults to the window context in the usual
way if not specified.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/window.c"><filename>scwm/window.c</filename></ulink>
  at line 3027 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="unbind-four-modifier-key-events">
  <refnamediv>
    <refname>unbind-four-modifier-key-events</refname>
    <refpurpose>Unbind events attached to a multi-modifier key event.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(unbind-four-modifier-key-events
		modkey1 modkey2 modkey3 modkey4)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Unbind events attached to a multi-modifier key event.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm modifier-key-bindings)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/modifier-key-bindings.scm"><filename>scheme/modifier-key-bindings.scm</filename></ulink>
  at line 116 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/modifier-key-bindings.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="unbind-key">
  <refnamediv>
    <refname>unbind-key</refname>
    <refpurpose>Remove any bindings attached to KEY in given CONTEXTS.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(unbind-key contexts key)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Remove any bindings attached to <parameter>key</parameter> in given <parameter>contexts</parameter>.
<parameter>contexts</parameter> is a list of event-contexts (e.g., '(left-button-1 frame-sides))
<parameter>key</parameter> is a string giving the key-specifier (e.g., M-Delete for Meta+Delete).
The return value is <literal>#t</literal> if the binding was removed successfully, <literal>#f</literal>
otherwise.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/binding.c"><filename>scwm/binding.c</filename></ulink>
  at line 916 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/binding.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="unbind-keycode">
  <refnamediv>
    <refname>unbind-keycode</refname>
    <refpurpose>Unbind the given KEYCODE within the CONTEXTS.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(unbind-keycode contexts keycode #&amp;optional modifier-mask)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Unbind the given <parameter>keycode</parameter> within the <parameter>contexts</parameter>.
<parameter>keycode</parameter> is an X/11 key code, <parameter>modifier-mask</parameter> is the bitmask of modifiers.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/binding.c"><filename>scwm/binding.c</filename></ulink>
  at line 1117 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/binding.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="unbind-mouse">
  <refnamediv>
    <refname>unbind-mouse</refname>
    <refpurpose>Remove any bindings attached to mouse BUTTON in given CONTEXTS.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(unbind-mouse contexts button)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Remove any bindings attached to mouse <parameter>button</parameter> in given <parameter>contexts</parameter>.
<parameter>contexts</parameter> is a list of event-contexts (e.g., '(left-button-1 frame-sides))
<parameter>button</parameter> is a string or integer giving the mouse button number
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/binding.c"><filename>scwm/binding.c</filename></ulink>
  at line 986 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/binding.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="unbind-three-modifier-key-events">
  <refnamediv>
    <refname>unbind-three-modifier-key-events</refname>
    <refpurpose>Unbind events attached to a multi-modifier key event.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(unbind-three-modifier-key-events
		modkey1 modkey2 modkey3)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Unbind events attached to a multi-modifier key event.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm modifier-key-bindings)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/modifier-key-bindings.scm"><filename>scheme/modifier-key-bindings.scm</filename></ulink>
  at line 74 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/modifier-key-bindings.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="unbind-two-modifier-key-events">
  <refnamediv>
    <refname>unbind-two-modifier-key-events</refname>
    <refpurpose>Unbind events attached to a multi-modifier key event.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(unbind-two-modifier-key-events
		modkey1 modkey2)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Unbind events attached to a multi-modifier key event.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm modifier-key-bindings)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/modifier-key-bindings.scm"><filename>scheme/modifier-key-bindings.scm</filename></ulink>
  at line 36 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/modifier-key-bindings.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="undo">
  <refnamediv>
    <refname>undo</refname>
    <refpurpose>Undo the last operation that was undoable.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(undo)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Undo the last operation that was undoable.
Undoable operations save changed state using <link linkend="insert-undo-global"><function>insert-undo-global</function></link>
before they perform their action.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm undo)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/undo.scm"><filename>scheme/undo.scm</filename></ulink>
  at line 93 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/undo.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="undo-all-passive-grabs">
  <refnamediv>
    <refname>undo-all-passive-grabs</refname>
    <refpurpose>Remove all passive grabs of keys and buttons of bindings.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(undo-all-passive-grabs)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Remove all passive grabs of keys and buttons of bindings.
See <link linkend="redo-all-passive-grabs"><function>redo-all-passive-grabs</function></link> for re-establishing those bindings.
This procedure can be useful for quoting numerous keystrokes or
mouse events. Beware that it can take several seconds to execute.
This procedure considers the state of <link linkend="ignore-dubious-modifiers-p"><function>ignore-dubious-modifiers?</function></link>
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/binding.c"><filename>scwm/binding.c</filename></ulink>
  at line 1519 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/binding.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="undo-passive-grab">
  <refnamediv>
    <refname>undo-passive-grab</refname>
    <refpurpose>Remove the passive grabs of KEYCODE-OR-BUTNUM with MODMASK on all windows.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(undo-passive-grab modmask keycode-or-butnum #&amp;optional mouse?)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Remove the passive grabs of <parameter>keycode-or-butnum</parameter> with <parameter>modmask</parameter> on all windows.
If <parameter>mouse?</parameter> is <literal>#t</literal>, then treat <parameter>keycode-or-butnum</parameter> as a button number and remove
a grabe of a mouse binding.  Otherwise remove a keyboard passive grab.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/binding.c"><filename>scwm/binding.c</filename></ulink>
  at line 1550 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/binding.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="undo-state-at-index">
  <refnamediv>
    <refname>undo-state-at-index</refname>
    <refpurpose>Return the state from undo-list at INDEX, or <literal>#f</literal> if bad index.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(undo-state-at-index index)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the state from undo-list at INDEX, or <literal>#f</literal> if bad index.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm undo)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/undo.scm"><filename>scheme/undo.scm</filename></ulink>
  at line 85 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/undo.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="undo-use">
  <refnamediv>
    <refname>undo-use</refname>
    <refpurpose>Apply the state from the undo-list contained at INDEX.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(undo-use index)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Apply the state from the undo-list contained at INDEX.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm undo)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/undo.scm"><filename>scheme/undo.scm</filename></ulink>
  at line 119 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/undo.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="undraw-all-constraints">
  <refnamediv>
    <refname>undraw-all-constraints</refname>
    <refpurpose>Undraw all constraints in the global instance list.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(undraw-all-constraints)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Undraw all constraints in the global instance list.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm ui-constraints)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/ui-constraints.scm"><filename>scheme/ui-constraints.scm</filename></ulink>
  at line 580 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/ui-constraints.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="undraw-constraint">
  <refnamediv>
    <refname>undraw-constraint</refname>
    <refpurpose>Undraw the UI-CONSTRAINT.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(undraw-constraint ui-constraint)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Undraw the UI-CONSTRAINT.  error if UI-CONSTRAINT is not
an ui-constraint.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm ui-constraints)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/ui-constraints.scm"><filename>scheme/ui-constraints.scm</filename></ulink>
  at line 565 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/ui-constraints.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="unflash-window">
  <refnamediv>
    <refname>unflash-window</refname>
    <refpurpose>Revert WIN's titlebar and boundary color to state before a <link linkend="flash-window"><function>flash-window</function></link>.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(unflash-window #&amp;optional (win (get-window)))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Revert WIN's titlebar and boundary color to state before a <link linkend="flash-window"><function>flash-window</function></link>.
Return the window changed.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm flash-window)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/flash-window.scm"><filename>scheme/flash-window.scm</filename></ulink>
  at line 54 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/flash-window.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="unfocus">
  <refnamediv>
    <refname>unfocus</refname>
    <refpurpose>Remove the input focus from any window that may have it.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(unfocus)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Remove the input focus from any window that may have it.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/window.c"><filename>scwm/window.c</filename></ulink>
  at line 1770 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="uninstall-hover-focus">
  <refnamediv>
    <refname>uninstall-hover-focus</refname>
    <refpurpose>Remove the hover-focus procedures from the Scwm hooks.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(uninstall-hover-focus)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Remove the hover-focus procedures from the Scwm hooks.
This will turn off hover focus for any windows that it was
on for.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/hover-focus.scm"><filename>scheme/hover-focus.scm</filename></ulink>
  at line 141 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/hover-focus.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="unmaximize">
  <refnamediv>
    <refname>unmaximize</refname>
    <refpurpose>Unmaximize WIN so it returns to its size/position before maximization.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(unmaximize #&amp;optional (win (get-window)))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Unmaximize WIN so it returns to its size/position before maximization.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm winops)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/winops.scm"><filename>scheme/winops.scm</filename></ulink>
  at line 146 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/winops.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="unregister-image-loader">
  <refnamediv>
    <refname>unregister-image-loader</refname>
    <refpurpose>Unregister the loader, if any, for images ending in EXTENSION.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(unregister-image-loader extension)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Unregister the loader, if any, for images ending in <parameter>extension</parameter>.
<parameter>extension</parameter> must be a string beginning with a period, the
empty string (for files with no extension), or the string "default"
(for files that no other image loader succeeds in loading).
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/image.c"><filename>scwm/image.c</filename></ulink>
  at line 430 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/image.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="unselect-all-windows">
  <refnamediv>
    <refname>unselect-all-windows</refname>
    <refpurpose>Unselect all windows selected via <link linkend="select-window-add"><function>select-window-add</function></link>.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(unselect-all-windows)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Unselect all windows selected via <link linkend="select-window-add"><function>select-window-add</function></link>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm window-selection)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/window-selection.scm"><filename>scheme/window-selection.scm</filename></ulink>
  at line 108 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/window-selection.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="unselect-matching-windows">
  <refnamediv>
    <refname>unselect-matching-windows</refname>
    <refpurpose>Unselect windows for which predicate PROC returns <literal>#t</literal>.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(unselect-matching-windows proc)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Unselect windows for which predicate PROC returns <literal>#t</literal>.
PROC might be one of <link linkend="resource-match--p"><function>resource-match??</function></link>, <link linkend="class-match--p"><function>class-match??</function></link>, etc.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm window-selection)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/window-selection.scm"><filename>scheme/window-selection.scm</filename></ulink>
  at line 97 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/window-selection.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="unset-message-window-position-x">
  <refnamediv>
    <refname>unset-message-window-position!</refname>
    <refpurpose>Move the message window back to the default screen-center position.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(unset-message-window-position!)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Move the message window back to the default screen-center position.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm base)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/base.scm"><filename>scheme/base.scm</filename></ulink>
  at line 646 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/base.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="unstick">
  <refnamediv>
    <refname>unstick</refname>
    <refpurpose>Cause a window to no longer be "sticky", if it is.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(unstick  #&amp;optional win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Cause a window to no longer be "sticky", if it is.
See <link linkend="stick"><function>stick</function></link> for an explanation. <parameter>win</parameter> defaults to the window context in
the usual way if not specified.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/window.c"><filename>scwm/window.c</filename></ulink>
  at line 2112 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="unstick-icon">
  <refnamediv>
    <refname>unstick-icon</refname>
    <refpurpose>Cause WIN's icon to no longer by "sticky".</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(unstick-icon  #&amp;optional win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Cause <parameter>win</parameter>'s icon to no longer by "sticky". See <link linkend="stick-icon"><function>stick-icon</function></link>
and <link linkend="stick"><function>stick</function></link>. <parameter>win</parameter> defaults to the window context in the usual way if
not specified.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/window.c"><filename>scwm/window.c</filename></ulink>
  at line 3311 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="uri-escapify-comma">
  <refnamediv>
    <refname>uri-escapify-comma</refname>
    <refpurpose>Replace commas in URI with the %2C escape code.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(uri-escapify-comma uri)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Replace commas in URI with the %2C escape code.
This is useful since netscape's remote command invocation does a stupid
syntactic scan of the passed url and treats commas as argument command
separators, so the url gets chopped off at the first literal comma.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm netscape)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/netscape.scm"><filename>scheme/netscape.scm</filename></ulink>
  at line 72 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/netscape.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="use-change-desk-commands">
  <refnamediv>
    <refname>use-change-desk-commands</refname>
    <refpurpose>Execute one of the VECTOR-OF-COMMANDS shell commands when the desk changes.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(use-change-desk-commands vector-of-commands)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Execute one of the VECTOR-OF-COMMANDS shell commands when the desk changes.
The 0th element of the vector is used for changes to desk 0,
the first element for changes to desk 1, etc.  Changes to desks which are
"off the end" of the vector do nothing.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/flux.scm"><filename>scheme/flux.scm</filename></ulink>
  at line 341 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/flux.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="use-placement-hint">
  <refnamediv>
    <refname>use-placement-hint</refname>
    <refpurpose>Do nothing when placing WIN, just let it be where hinted to be.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(use-placement-hint win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Do nothing when placing WIN, just let it be where hinted to be.
This is useful for, e.g., external programs such as the GNOME desktop
gmc which expect their windows to go where asked (like the desktop
icons in gmc).
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm base)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/base.scm"><filename>scheme/base.scm</filename></ulink>
  at line 343 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/base.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="use-theme">
  <refnamediv>
    <refname>use-theme</refname>
    <refpurpose>Use settings from THEME to set up the window manager.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(use-theme theme #&amp;key (for-windows #t) 
			    (for-menus #t) (for-icons #t)
			    (for-background #t) 
			    (for-global-settings #t))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Use settings from THEME to set up the window manager.
THEME can be either a theme object (as returned by <link linkend="load-theme"><function>load-theme</function></link>) or a
string naming a theme, in which case that theme will be loaded and
used.  By default, window styles, menus, icons, backgrounds, and
global settings are all affected; if the FOR-WINDOWS, FOR-MENUS,
FOR-ICONS, FOR-BACKGROUND, or FOR-GLOBAL-SETTINGS arguments are <literal>#f</literal>,
the corresponding areas are not affected.  (Note: at this time,
only windows and backgrounds are affected; the other components
of themes have yet to be implemented.)
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm themes)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/themes.scm"><filename>scheme/themes.scm</filename></ulink>
  at line 56 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/themes.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="usec-to-ms">
  <refnamediv>
    <refname>usec->ms</refname>
    <refpurpose>Convert USEC microseconds into an equivalent number of milliseconds.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(usec->ms usec)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Convert USEC microseconds into an equivalent number of milliseconds.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm time-convert)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/time-convert.scm"><filename>scheme/time-convert.scm</filename></ulink>
  at line 36 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/time-convert.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="usec-to-sec">
  <refnamediv>
    <refname>usec->sec</refname>
    <refpurpose>Convert USEC microseconds into an equivalent number of seconds.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(usec->sec usec)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Convert USEC microseconds into an equivalent number of seconds.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/time-convert.scm"><filename>scheme/time-convert.scm</filename></ulink>
  at line 40 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/time-convert.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="user-home">
  <refnamediv>
    <refname>user-home</refname>
    <refpurpose>Return the current user's home directory.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(user-home)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the current user's home directory.
This is set to one of the following (in order of relevance):
<envar>$HOME</envar>,
the directory field of the current uid's entry in the password file,
the constant string "/tmp".
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/miscprocs.c"><filename>scwm/miscprocs.c</filename></ulink>
  at line 617 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/miscprocs.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="user-name">
  <refnamediv>
    <refname>user-name</refname>
    <refpurpose>Return the current user's name.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(user-name)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the current user's name.
This is set to one of the following (in order of relevance):
<envar>$USER</envar>, <envar>$LOGNAME</envar>,
the name field of the current uid's entry in the password file,
the constant string "nobody".
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/miscprocs.c"><filename>scwm/miscprocs.c</filename></ulink>
  at line 604 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/miscprocs.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="viewport-to-virtual">
  <refnamediv>
    <refname>viewport->virtual</refname>
    <refpurpose>Return the virtual coordinates for viewport X,Y.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(viewport->virtual x y)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the virtual coordinates for viewport X,Y.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm base)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/base.scm"><filename>scheme/base.scm</filename></ulink>
  at line 167 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/base.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="viewport-position">
  <refnamediv>
    <refname>viewport-position</refname>
    <refpurpose>Returns the current position of the viewport in pixels.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(viewport-position)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Returns the current position of the viewport in pixels.
The returned value is a list of the x and y positions.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/deskpage.c"><filename>scwm/deskpage.c</filename></ulink>
  at line 116 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/deskpage.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="viewport-x-position">
  <refnamediv>
    <refname>viewport-x-position</refname>
    <refpurpose>Return the x coordinate of the current viewport.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(viewport-x-position)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the x coordinate of the current viewport.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm base)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/base.scm"><filename>scheme/base.scm</filename></ulink>
  at line 159 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/base.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="viewport-y-position">
  <refnamediv>
    <refname>viewport-y-position</refname>
    <refpurpose>Return the y coordinate of the current viewport.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(viewport-y-position)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the y coordinate of the current viewport.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm base)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/base.scm"><filename>scheme/base.scm</filename></ulink>
  at line 163 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/base.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="virtual-to-viewport">
  <refnamediv>
    <refname>virtual->viewport</refname>
    <refpurpose>Return the viewport coordinates for virtual X,Y.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(virtual->viewport x y)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the viewport coordinates for virtual X,Y.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm base)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/base.scm"><filename>scheme/base.scm</filename></ulink>
  at line 171 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/base.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="virtual-size">
  <refnamediv>
    <refname>virtual-size</refname>
    <refpurpose>Return the size of the virtual screen in pixels.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(virtual-size)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the size of the virtual screen in pixels.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm base)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/base.scm"><filename>scheme/base.scm</filename></ulink>
  at line 175 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/base.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="virtual-switch-placement">
  <refnamediv>
    <refname>virtual-switch-placement</refname>
    <refpurpose>Wrap placement procedure PROC with virtual switching code.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(virtual-switch-placement proc #&amp;key (switch #t) (return #f))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Wrap placement procedure PROC with virtual switching code.
PROC is a procedure that takes a single window argument. The return
value is also a procedure of one one window argument which has the
same effect, except that it may switch to the desk and viewport of the
passed window before executing PROC, and may return to the previous
desk and viewport, depending on the values of SWITCH and RETURN
respectively.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm placement)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/placement.scm"><filename>scheme/placement.scm</filename></ulink>
  at line 144 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/placement.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="visible-p">
  <refnamediv>
    <refname>visible?</refname>
    <refpurpose>Return <literal>#t</literal> if any of WIN is currently potentially visible, else <literal>#f</literal>.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(visible? #&amp;optional (win (get-window)))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return <literal>#t</literal> if any of WIN is currently potentially visible, else <literal>#f</literal>.
Note that this just checks if WIN is in the current viewport
and on the current desk.  It may still return <literal>#t</literal> if WIN is completely
obscured by other windows.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm wininfo)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/wininfo.scm"><filename>scheme/wininfo.scm</filename></ulink>
  at line 102 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/wininfo.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="vx-">
  <refnamediv>
    <refname>vx-</refname>
    <refpurpose>Return the virtual coordinate X pixels left of the right virtual edge.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(vx- x)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the virtual coordinate X pixels left of the right virtual edge.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm base)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/base.scm"><filename>scheme/base.scm</filename></ulink>
  at line 179 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/base.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="vy-">
  <refnamediv>
    <refname>vy-</refname>
    <refpurpose>Return the virtual coordinate Y pixels up from the bottom virtual edge.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(vy- y)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the virtual coordinate Y pixels up from the bottom virtual edge.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm base)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/base.scm"><filename>scheme/base.scm</filename></ulink>
  at line 183 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/base.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="wpctx">
  <refnamediv>
    <refname>w%x</refname>
    <refpurpose>Return a pixel width X percent of the width of window W.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(w%x x #&amp;optional (w (get-window)))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return a pixel width X percent of the width of window W.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm base)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/base.scm"><filename>scheme/base.scm</filename></ulink>
  at line 195 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/base.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="wpcty">
  <refnamediv>
    <refname>w%y</refname>
    <refpurpose>Return a pixel height Y percent of the height of window W.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(w%y y #&amp;optional (w (get-window)))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return a pixel height Y percent of the height of window W.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm base)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/base.scm"><filename>scheme/base.scm</filename></ulink>
  at line 199 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/base.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="warp-placement">
  <refnamediv>
    <refname>warp-placement</refname>
    <refpurpose>Return a list, (%x %y), for the desired pointer placement for WIN.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(warp-placement win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return a list, (%x %y), for the desired pointer placement for WIN.
The percentages are of the window size, and are gotten by using
the 'warp-placement object-property of WIN;  they default to (20 20)
if no such property is set. To change the default for all your windows
you can do something like:
  (add-hook! after-new-window-hook 
    (lambda (win) 
      (set-object-property! win 'warp-placement '(80 20))))
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm winlist)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/winlist.scm"><filename>scheme/winlist.scm</filename></ulink>
  at line 35 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/winlist.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="warp-to-window">
  <refnamediv>
    <refname>warp-to-window</refname>
    <refpurpose>Move the mouse pointer to the upper left corner of WIN.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(warp-to-window  #&amp;optional win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Move the mouse pointer to the upper left corner of <parameter>win</parameter>.
If <parameter>win</parameter> is on a different desk or in a different viewport, these will
be changed appropriately so that the window is visible. <parameter>win</parameter> defaults
to the window context in the usual way if not specified.  Note that
the target window is not raised, so if the target window's upper
left corner is under another window, that other window may end up
with the keyboard focus.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/window.c"><filename>scwm/window.c</filename></ulink>
  at line 1783 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="warp-to-window-viewport">
  <refnamediv>
    <refname>warp-to-window-viewport</refname>
    <refpurpose>Change to the desk and viewport of WIN.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(warp-to-window-viewport win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Change to the desk and viewport of WIN.
The viewport selected is an integral multiple of the viewport size
which contains the center of the window, or the closest possible if
none does.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm virtual)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/virtual.scm"><filename>scheme/virtual.scm</filename></ulink>
  at line 158 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/virtual.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="wiggle-window">
  <refnamediv>
    <refname>wiggle-window</refname>
    <refpurpose>Animatedly window shade and then unshade WIN.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(wiggle-window #&amp;optional (win (get-window)))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Animatedly window shade and then unshade WIN.
Just a toy--- perhaps could be useful to call attention to a window.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/flux.scm"><filename>scheme/flux.scm</filename></ulink>
  at line 113 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/flux.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="wildcard-to-regexp">
  <refnamediv>
    <refname>wildcard->regexp</refname>
    <refpurpose>Return the regular expresision string corresponding to WILDCARD.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(wildcard->regexp wildcard)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the regular expresision string corresponding to WILDCARD.
This involves quoting meta characters and replacing the wildcard
meta-characters "*" with ".*" and "?" with ".".
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm wininfo)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/wininfo.scm"><filename>scheme/wininfo.scm</filename></ulink>
  at line 162 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/wininfo.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="wildcard-match-p">
  <refnamediv>
    <refname>wildcard-match?</refname>
    <refpurpose>Returns <literal>#t</literal> if WILDCARD matches WIN (in the sense of <link linkend="wildcard-matcher"><function>wildcard-matcher</function></link>).</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(wildcard-match? wildcard #&amp;optional (win (get-window))
				 #&amp;key (full-regexp #f)
				 (regexp-options `(,regexp/icase)))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Returns <literal>#t</literal> if WILDCARD matches WIN (in the sense of <link linkend="wildcard-matcher"><function>wildcard-matcher</function></link>).
See <link linkend="wildcard-matcher"><function>wildcard-matcher</function></link> for the meanings of FULL-REGEXP and REGEXP-OPTIONS.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm wininfo)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/wininfo.scm"><filename>scheme/wininfo.scm</filename></ulink>
  at line 212 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/wininfo.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="wildcard-matcher">
  <refnamediv>
    <refname>wildcard-matcher</refname>
    <refpurpose>Return a procedure that matches WILDCARD against a window.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(wildcard-matcher wildcard #&amp;key (full-regexp #f)
				  (regexp-options `(,regexp/icase)))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return a procedure that matches WILDCARD against a window.
REGEXP-OPTIONS is passed to <link linkend="make-regexp"><function>make-regexp</function></link>.  If FULL-REGEXP is <literal>#t</literal>, 
the WILDCARD is considered to be a regular-expression instead of 
a shell-like wildcard.  The returned procedure takes a window
and returns <literal>#t</literal> if WILDCARD matches the title, class, or resource
of the window.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm wininfo)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/wininfo.scm"><filename>scheme/wininfo.scm</filename></ulink>
  at line 185 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/wininfo.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="window-to-image">
  <refnamediv>
    <refname>window->image</refname>
    <refpurpose>Return an image with the contents of window WIN.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(window->image win #&amp;optional x-offset y-offset width height)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return an image with the contents of window <parameter>win</parameter>.
<parameter>win</parameter> can be a window id (as a long), a window object, or
the symbol 'root-window. Captures the rectangle of the window
at <parameter>x-offset</parameter>, <parameter>y-offset</parameter> with width <parameter>width</parameter> and height <parameter>height</parameter>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/image.c"><filename>scwm/image.c</filename></ulink>
  at line 653 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/image.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="window-aligned-viewport">
  <refnamediv>
    <refname>window-aligned-viewport</refname>
    <refpurpose>Return the viewport that contains the center of WIN.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(window-aligned-viewport win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the viewport that contains the center of WIN.
The return value is an integral multiple of the viewport size which
contains the center of the window, or the closest possible if none
does.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm virtual)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/virtual.scm"><filename>scheme/virtual.scm</filename></ulink>
  at line 60 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/virtual.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="window-and-offsets-to-nonant">
  <refnamediv>
    <refname>window-and-offsets->nonant</refname>
    <refpurpose>Return a nonant number in [0,8] from a window position and an offset.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(window-and-offsets->nonant win dx dy)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return a nonant number in [0,8] from a window position and an offset.
WIN is the window, DX and DY are positions relative to the top-left of WIN.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm nonants)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/nonants.scm"><filename>scheme/nonants.scm</filename></ulink>
  at line 101 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/nonants.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="window-center-bottom">
  <refnamediv>
    <refname>window-center-bottom</refname>
    <refpurpose>Return a pair (X .</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(window-center-bottom win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return a pair (X . Y) that is the pixel position of the center, bottom of WIN
relative to the current viewport.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm window-locations)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/window-locations.scm"><filename>scheme/window-locations.scm</filename></ulink>
  at line 38 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/window-locations.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="window-center-middle">
  <refnamediv>
    <refname>window-center-middle</refname>
    <refpurpose>Return pair (viewport-x .</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(window-center-middle win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return pair (viewport-x . viewport-y) that is the middle of WIN.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm window-locations)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/window-locations.scm"><filename>scheme/window-locations.scm</filename></ulink>
  at line 18 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/window-locations.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="window-center-position">
  <refnamediv>
    <refname>window-center-position</refname>
    <refpurpose>Return the coordinates of the center of WIN as a list of the X and Y coordinate.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(window-center-position win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the coordinates of the center of WIN as a list of the X and Y coordinate.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm wininfo)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/wininfo.scm"><filename>scheme/wininfo.scm</filename></ulink>
  at line 127 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/wininfo.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="window-center-top">
  <refnamediv>
    <refname>window-center-top</refname>
    <refpurpose>Return a pair (X .</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(window-center-top win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return a pair (X . Y) that is the pixel position of the center, top of WIN
relative to current viewport.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm window-locations)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/window-locations.scm"><filename>scheme/window-locations.scm</filename></ulink>
  at line 28 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/window-locations.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="window-class">
  <refnamediv>
    <refname>window-class</refname>
    <refpurpose>Return the window resources class of WIN.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(window-class #&amp;optional (win (get-window)))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the window resources class of WIN. 
WIN defaults to the window context in the usual way if not specified. 
Returns "NoClass" if the window has not set its class.
See also <link linkend="window-class-hint"><function>window-class-hint</function></link>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm base)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/base.scm"><filename>scheme/base.scm</filename></ulink>
  at line 765 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/base.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="window-class-hint">
  <refnamediv>
    <refname>window-class-hint</refname>
    <refpurpose>DEPRECATED.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(window-class-hint  #&amp;optional win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  DEPRECATED. Return the window resource class of <parameter>win</parameter>.
<parameter>win</parameter> defaults to the window context in the usual way if not
specified. You should prefer <link linkend="window-class"><function>window-class</function></link>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/window.c"><filename>scwm/window.c</filename></ulink>
  at line 2860 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="window-client-machine-name">
  <refnamediv>
    <refname>window-client-machine-name</refname>
    <refpurpose>Return the name of the client machine on which WIN is running.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(window-client-machine-name #&amp;optional (win (get-window)))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the name of the client machine on which WIN is running.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm wininfo)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/wininfo.scm"><filename>scheme/wininfo.scm</filename></ulink>
  at line 178 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/wininfo.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="window-configuration">
  <refnamediv>
    <refname>window-configuration</refname>
    <refpurpose>Return a list containing the state of WIN.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(window-configuration #&amp;optional (win (get-window)))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return a list containing the state of WIN.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm window-configuration)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/window-configuration.scm"><filename>scheme/window-configuration.scm</filename></ulink>
  at line 31 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/window-configuration.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="window-configuration-to-register">
  <refnamediv>
    <refname>window-configuration-to-register</refname>
    <refpurpose>No documentation supplied.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(window-configuration-to-register 
		 #&amp;optional (win (or (current-window-with-focus) (get-window)))
		 (register (get-register-name)))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  No documentation supplied.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm register)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/register.scm"><filename>scheme/register.scm</filename></ulink>
  at line 60 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/register.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="window-configuration-p">
  <refnamediv>
    <refname>window-configuration?</refname>
    <refpurpose>Return <literal>#t</literal> if WCFG is a window configuration.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(window-configuration? wcfg)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return <literal>#t</literal> if WCFG is a window configuration.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm window-configuration)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/window-configuration.scm"><filename>scheme/window-configuration.scm</filename></ulink>
  at line 42 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/window-configuration.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="window-context">
  <refnamediv>
    <refname>window-context</refname>
    <refpurpose>Returns the current window context, or <literal>#f</literal> if there is none.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(window-context)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Returns the current window context, or <literal>#f</literal> if there is none.
See also <link linkend="with-window"><function>with-window</function></link> and <link linkend="set-window-context-x"><function>set-window-context!</function></link>
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/window.c"><filename>scwm/window.c</filename></ulink>
  at line 1037 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="window-corners">
  <refnamediv>
    <refname>window-corners</refname>
    <refpurpose>Return the four coordinates of the corners of the location of WIN.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(window-corners win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the four coordinates of the corners of the location of WIN.
Return value's car is the top left, cdr is the bottom right.
That is, the returned list is: ((nw-x nw-y) se-x se-y).  Use
<link linkend="rect-nw-x"><function>rect-nw-x</function></link>, <link linkend="rect-nw-y"><function>rect-nw-y</function></link>, <link linkend="rect-se-x"><function>rect-se-x</function></link>, <link linkend="rect-se-y"><function>rect-se-y</function></link> to take apart
the returned list.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/flux.scm"><filename>scheme/flux.scm</filename></ulink>
  at line 443 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/flux.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="window-creation-time">
  <refnamediv>
    <refname>window-creation-time</refname>
    <refpurpose>Return the time that WIN was created in seconds since 1/1/70.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(window-creation-time  #&amp;optional win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the time that <parameter>win</parameter> was created in seconds since 1/1/70.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/window.c"><filename>scwm/window.c</filename></ulink>
  at line 2900 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="window-decor">
  <refnamediv>
    <refname>window-decor</refname>
    <refpurpose>Return WIN's decor.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(window-decor win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return <parameter>win</parameter>'s decor.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/decor.c"><filename>scwm/decor.c</filename></ulink>
  at line 300 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/decor.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="window-deletable-p">
  <refnamediv>
    <refname>window-deletable?</refname>
    <refpurpose>Return <literal>#t</literal> if WIN is able to be deleted, <literal>#f</literal> otherwise.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(window-deletable?  #&amp;optional win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return <literal>#t</literal> if <parameter>win</parameter> is able to be deleted, <literal>#f</literal> otherwise.
If this procedure returns <literal>#f</literal>, then a call to <link linkend="delete-window"><function>delete-window</function></link> on <parameter>win</parameter>
will do nothing.  <parameter>win</parameter> defaults to the window context in the usual way if not
specified.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/window.c"><filename>scwm/window.c</filename></ulink>
  at line 1734 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="window-desk">
  <refnamediv>
    <refname>window-desk</refname>
    <refpurpose>Return the desk that WIN is currently on.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(window-desk  #&amp;optional win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the desk that <parameter>win</parameter> is currently on.
<parameter>win</parameter> defaults to the window context in the usual way if not specified.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/window.c"><filename>scwm/window.c</filename></ulink>
  at line 2825 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="window-flashing-p">
  <refnamediv>
    <refname>window-flashing?</refname>
    <refpurpose>Return <literal>#t</literal> iff WIN is currently flashing, <literal>#f</literal> otherwise.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(window-flashing? #&amp;optional (win (get-window)))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return <literal>#t</literal> iff WIN is currently flashing, <literal>#f</literal> otherwise.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm flash-window)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/flash-window.scm"><filename>scheme/flash-window.scm</filename></ulink>
  at line 50 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/flash-window.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="window-frame-area">
  <refnamediv>
    <refname>window-frame-area</refname>
    <refpurpose>Return the area of WIN's frame in square pixels.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(window-frame-area win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the area of WIN's frame in square pixels.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm winops)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/winops.scm"><filename>scheme/winops.scm</filename></ulink>
  at line 209 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/winops.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="window-frame-border-width">
  <refnamediv>
    <refname>window-frame-border-width</refname>
    <refpurpose>Return the width of WIN's frame's border.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(window-frame-border-width  #&amp;optional win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the width of <parameter>win</parameter>'s frame's border.
<parameter>win</parameter> defaults to the window context in the usual way if not specified.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/window.c"><filename>scwm/window.c</filename></ulink>
  at line 2728 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="window-frame-id">
  <refnamediv>
    <refname>window-frame-id</refname>
    <refpurpose>Return the X window id for the outermost frame window of WIN.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(window-frame-id  #&amp;optional win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the X window id for the outermost frame window of <parameter>win</parameter>.
<parameter>win</parameter> defaults to the window context in the usual way if not
specified.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/window.c"><filename>scwm/window.c</filename></ulink>
  at line 2758 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="window-frame-size">
  <refnamediv>
    <refname>window-frame-size</refname>
    <refpurpose>Return the size of the frame of WIN.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(window-frame-size  #&amp;optional win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the size of the frame of <parameter>win</parameter>.
The position is returned as a list of the width and the height in
pixels. <parameter>win</parameter> defaults to the window context in the usual way if not
specified. See <link linkend="window-size"><function>window-size</function></link> if you want the size of the application
(client) window.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/window.c"><filename>scwm/window.c</filename></ulink>
  at line 2640 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="window-fully-constructed-p">
  <refnamediv>
    <refname>window-fully-constructed?</refname>
    <refpurpose>Returns <literal>#t</literal> if WIN is a fully-constructed window, otherwise <literal>#f</literal>.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(window-fully-constructed? win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Returns <literal>#t</literal> if <parameter>win</parameter> is a fully-constructed window, otherwise <literal>#f</literal>.
In the <link linkend="before-new-window-hook"><function>before-new-window-hook</function></link> windows are not yet fully constructed, and only
a subset of procedures can be successfully called on them.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/window.c"><filename>scwm/window.c</filename></ulink>
  at line 862 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="window-geometry-string">
  <refnamediv>
    <refname>window-geometry-string</refname>
    <refpurpose>Return a string corresponding to the geometry specifications for WIN.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(window-geometry-string #&amp;optional (win (get-window)))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return a string corresponding to the geometry specifications for WIN.
The virtual position and the frame size are used.  The resulting string
looks like "157x133+200+306".  If WIN is iconified, the string
returned is in parentheses.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm wininfo)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/wininfo.scm"><filename>scheme/wininfo.scm</filename></ulink>
  at line 134 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/wininfo.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="window-gravity">
  <refnamediv>
    <refname>window-gravity</refname>
    <refpurpose>Return the gravity for WIN as a symbol.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(window-gravity  #&amp;optional win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the gravity for <parameter>win</parameter> as a symbol.
Return value is one of the following:
'forget, 'northwest, 'north, 'northeast,
'west, 'center, 'east, 'southwest 'south, 'southeast,
'static.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/window.c"><filename>scwm/window.c</filename></ulink>
  at line 2534 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="window-icon">
  <refnamediv>
    <refname>window-icon</refname>
    <refpurpose>Get the icon image being used for WIN.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(window-icon  #&amp;optional win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Get the icon image being used for <parameter>win</parameter>.
Returns <literal>#f</literal> if none is being used. <parameter>win</parameter> defaults to the window context
in the usual way if not specified.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/window.c"><filename>scwm/window.c</filename></ulink>
  at line 3810 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="window-icon-shaped-p">
  <refnamediv>
    <refname>window-icon-shaped?</refname>
    <refpurpose>Return <literal>#t</literal> if WIN has shaped icon, <literal>#f</literal> otherwise.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(window-icon-shaped? win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return <literal>#t</literal> if <parameter>win</parameter> has shaped icon, <literal>#f</literal> otherwise.
<parameter>win</parameter> defaults to the window context in the usual way if not specified.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/window.c"><filename>scwm/window.c</filename></ulink>
  at line 3888 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="window-icon-title">
  <refnamediv>
    <refname>window-icon-title</refname>
    <refpurpose>Return the icon window title of WIN.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(window-icon-title  #&amp;optional win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the icon window title of <parameter>win</parameter>.
This is the title as requested by the application. <parameter>win</parameter> defaults to
the window context in the usual way if not specified.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/window.c"><filename>scwm/window.c</filename></ulink>
  at line 2848 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="window-id">
  <refnamediv>
    <refname>window-id</refname>
    <refpurpose>Return the X window id for WIN.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(window-id  #&amp;optional win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the X window id for <parameter>win</parameter>.
This is the X id for the actual application window. <parameter>win</parameter> defaults to
the window context in the usual way if not specified.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/window.c"><filename>scwm/window.c</filename></ulink>
  at line 2742 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="window-info">
  <refnamediv>
    <refname>window-info</refname>
    <refpurpose>Display information about WIN in a message window.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(window-info #&amp;optional (win (get-window)))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Display information about WIN in a message window.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/flux.scm"><filename>scheme/flux.scm</filename></ulink>
  at line 180 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/flux.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="window-is-selected-p">
  <refnamediv>
    <refname>window-is-selected?</refname>
    <refpurpose>Return <literal>#t</literal> if W is in the selected window list, else <literal>#f</literal>.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(window-is-selected? #&amp;optional (w (get-window)))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return <literal>#t</literal> if W is in the selected window list, else <literal>#f</literal>.
See also <link linkend="select-window-add"><function>select-window-add</function></link>, <link linkend="select-window-remove"><function>select-window-remove</function></link>, and <link linkend="selected-windows-list"><function>selected-windows-list</function></link>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm window-selection)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/window-selection.scm"><filename>scheme/window-selection.scm</filename></ulink>
  at line 41 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/window-selection.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="window-last-focus-time">
  <refnamediv>
    <refname>window-last-focus-time</refname>
    <refpurpose>Return the time that WIN was last focussed in seconds since 1/1/70.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(window-last-focus-time  #&amp;optional win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the time that <parameter>win</parameter> was last focussed in seconds since 1/1/70.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/window.c"><filename>scwm/window.c</filename></ulink>
  at line 2889 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="window-last-focus-time-string">
  <refnamediv>
    <refname>window-last-focus-time-string</refname>
    <refpurpose>Return a string corresponding to the last focus time for WIN.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(window-last-focus-time-string #&amp;optional (win (get-window)))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return a string corresponding to the last focus time for WIN.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm wininfo)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/wininfo.scm"><filename>scheme/wininfo.scm</filename></ulink>
  at line 153 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/wininfo.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="window-left-bottom">
  <refnamediv>
    <refname>window-left-bottom</refname>
    <refpurpose>Return a pair (X .</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(window-left-bottom win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return a pair (X . Y) that is the pixel position of the left, bottom of WIN
relative to the current viewport.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm window-locations)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/window-locations.scm"><filename>scheme/window-locations.scm</filename></ulink>
  at line 75 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/window-locations.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="window-left-middle">
  <refnamediv>
    <refname>window-left-middle</refname>
    <refpurpose>Return a pair (X .</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(window-left-middle win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return a pair (X . Y) that is the pixel position of the left, middle of WIN
relative to the current viewport.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm window-locations)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/window-locations.scm"><filename>scheme/window-locations.scm</filename></ulink>
  at line 49 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/window-locations.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="window-left-top">
  <refnamediv>
    <refname>window-left-top</refname>
    <refpurpose>Return a pair (X .</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(window-left-top win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return a pair (X . Y) that is the pixel position of the left, top of WIN
relative to the current viewport.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm window-locations)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/window-locations.scm"><filename>scheme/window-locations.scm</filename></ulink>
  at line 70 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/window-locations.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="window-map-pending-p">
  <refnamediv>
    <refname>window-map-pending?</refname>
    <refpurpose>Returns <literal>#t</literal> if the mapping of WIN is pending, otherwise returns <literal>#f</literal>.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(window-map-pending? win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Returns <literal>#t</literal> if the mapping of <parameter>win</parameter> is pending, otherwise returns <literal>#f</literal>.
The map is pending from the moment the MapRequest is entered until the
map is actually performed.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/window.c"><filename>scwm/window.c</filename></ulink>
  at line 886 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="window-mapped-p">
  <refnamediv>
    <refname>window-mapped?</refname>
    <refpurpose>Returns <literal>#t</literal> if WIN is mapped, otherwise returns <literal>#f</literal>.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(window-mapped? win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Returns <literal>#t</literal> if <parameter>win</parameter> is mapped, otherwise returns <literal>#f</literal>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/window.c"><filename>scwm/window.c</filename></ulink>
  at line 875 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="window-mini-icon">
  <refnamediv>
    <refname>window-mini-icon</refname>
    <refpurpose>Get the mini-icon image being used for WIN.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(window-mini-icon  #&amp;optional win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Get the mini-icon image being used for <parameter>win</parameter>.
Returns <literal>#f</literal> if none is being used. <parameter>win</parameter> defaults to the window context
in the usual way if not specified.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/window.c"><filename>scwm/window.c</filename></ulink>
  at line 3855 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="window-other-id">
  <refnamediv>
    <refname>window-other-id</refname>
    <refpurpose>Returns the other id string given to the process that created WIN.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(window-other-id win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Returns the other id string given to the process that created WIN.
Requires using the LD_PRELOAD environment variable for the
started process:

SCWM_OTHER_ID="answer" LD_PRELOAD=/path/to/scwm_set_pid_property.so

Returns <literal>#f</literal> if the property does not exist on WIN (most
likely because you did not use the LD_PRELOAD variable and
the SCWM_OTHER_ID environment variable).
See also <link linkend="window-client-machine-name"><function>window-client-machine-name</function></link> to get the machine
name, and <link linkend="window-pid"><function>window-pid</function></link> to get the process id.

  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm xprop-extras)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/xprop-extras.scm"><filename>scheme/xprop-extras.scm</filename></ulink>
  at line 84 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/xprop-extras.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="window-overlaps-window-p">
  <refnamediv>
    <refname>window-overlaps-window?</refname>
    <refpurpose>Return a function which takes WIN2 and returns <literal>#t</literal> if it overlaps WIN.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>((window-overlaps-window? #&amp;optional (win (get-window))) 
		 #&amp;optional (win2 (get-window)))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return a function which takes WIN2 and returns <literal>#t</literal> if it overlaps WIN.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm wininfo)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/wininfo.scm"><filename>scheme/wininfo.scm</filename></ulink>
  at line 97 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/wininfo.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="window-pid">
  <refnamediv>
    <refname>window-pid</refname>
    <refpurpose>Returns the process id of the process that created WIN.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(window-pid win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Returns the process id of the process that created WIN.
Requires using the LD_PRELOAD environment variable for the
started process:

LD_PRELOAD=/path/to/scwm_set_pid_property.so

Returns <literal>#f</literal> if the property does not exist on WIN (most
likely because you did not use the LD_PRELOAD variable).
See also <link linkend="window-client-machine-name"><function>window-client-machine-name</function></link> to get the machine
name on which the returned process id is valid, and
<link linkend="window-other-id"><function>window-other-id</function></link> to get the string in environment variable
SCWM_OTHER_ID.

  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm xprop-extras)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/xprop-extras.scm"><filename>scheme/xprop-extras.scm</filename></ulink>
  at line 66 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/xprop-extras.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="window-position">
  <refnamediv>
    <refname>window-position</refname>
    <refpurpose>Return the position of WIN in pixels.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(window-position  #&amp;optional win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the position of <parameter>win</parameter> in pixels.
The position is returned as a list of the x coordinate and the y
coordinate in pixels. If the window is sticky, the position will
always be in the 0,0 viewport. <parameter>win</parameter> defaults to the window context in the usual
way if not specified.  See also <link linkend="window-viewport-position"><function>window-viewport-position</function></link>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/window.c"><filename>scwm/window.c</filename></ulink>
  at line 2577 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="window-position-in-viewport">
  <refnamediv>
    <refname>window-position-in-viewport</refname>
    <refpurpose>Return a virtual position for WIN that is in viewport (XX,YY).</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(window-position-in-viewport xx yy #&amp;optional win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return a virtual position for WIN that is in viewport (XX,YY).
The (0,0) viewport is the starting viewport.  XX and YY are
full display-size increments (e.g., (1,0) is the viewport
just to the right of the home (0,0) viewport).  This returns
the position that <link linkend="move-window-to-viewport"><function>move-window-to-viewport</function></link> moves the window to.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm virtual)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/virtual.scm"><filename>scheme/virtual.scm</filename></ulink>
  at line 82 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/virtual.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="window-property">
  <refnamediv>
    <refname>window-property</refname>
    <refpurpose>Retrieve window property PROP of WIN.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(window-property win prop)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Retrieve window property <parameter>prop</parameter> of <parameter>win</parameter>.
<parameter>prop</parameter> should be a symbol. <literal>#f</literal> will be returned if the property does not
exist (whether set by <link linkend="set-window-property-x"><function>set-window-property!</function></link> or otherwise). Soon, some
properties will have magical meanings, accessing particular fields in
the window structure. Also, a window-property-change-hook mechanism
will soon be implemented for notification of all window property
changes. This is not yet done. The window property primitives should
be considered in flux.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/winprop.c"><filename>scwm/winprop.c</filename></ulink>
  at line 131 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/winprop.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="window-resource">
  <refnamediv>
    <refname>window-resource</refname>
    <refpurpose>Return the window resource instance of WIN.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(window-resource #&amp;optional (win (get-window)))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the window resource instance of WIN. 
WIN defaults to the window context in the usual way if not specified. 
Returns "NoResource" if the window has not set its resource name.
See also <link linkend="window-resource-hint"><function>window-resource-hint</function></link>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/base.scm"><filename>scheme/base.scm</filename></ulink>
  at line 773 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/base.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="window-resource-hint">
  <refnamediv>
    <refname>window-resource-hint</refname>
    <refpurpose>DEPRECATED.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(window-resource-hint  #&amp;optional win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  DEPRECATED. Return the window resource instance of <parameter>win</parameter>.
<parameter>win</parameter> defaults to the window context in the usual way if not specified.
You should prefer <link linkend="window-resource"><function>window-resource</function></link>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/window.c"><filename>scwm/window.c</filename></ulink>
  at line 2873 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="window-right-bottom">
  <refnamediv>
    <refname>window-right-bottom</refname>
    <refpurpose>Return a pair (X .</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(window-right-bottom win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return a pair (X . Y) that is the pixel position of the right, bottom of WIN
relative to the current viewport.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/window-locations.scm"><filename>scheme/window-locations.scm</filename></ulink>
  at line 95 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/window-locations.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="window-right-middle">
  <refnamediv>
    <refname>window-right-middle</refname>
    <refpurpose>Return a pair (X .</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(window-right-middle win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return a pair (X . Y) that is the pixel position of the right, middle of WIN
relative to the current viewport.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm window-locations)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/window-locations.scm"><filename>scheme/window-locations.scm</filename></ulink>
  at line 59 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/window-locations.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="window-right-top">
  <refnamediv>
    <refname>window-right-top</refname>
    <refpurpose>Return a pair (X .</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(window-right-top win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return a pair (X . Y) that is the pixel position of the right, top of WIN
relative to the current viewport.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm window-locations)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/window-locations.scm"><filename>scheme/window-locations.scm</filename></ulink>
  at line 85 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/window-locations.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="window-shade">
  <refnamediv>
    <refname>window-shade</refname>
    <refpurpose>Cause WIN to become "window-shaded".</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(window-shade  #&amp;optional win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Cause <parameter>win</parameter> to become "window-shaded".
That is, to roll up into just a titlebar. By default, the change takes
place instantaneously. <parameter>win</parameter> defaults to the window context in the usual
way if not specified. See also <link linkend="window-unshade"><function>window-unshade</function></link>.
A shaded window has the "WM_STATE" hint set to WithdrawnState, since
the client application window is not visible.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/window.c"><filename>scwm/window.c</filename></ulink>
  at line 2182 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="window-shaded-p">
  <refnamediv>
    <refname>window-shaded?</refname>
    <refpurpose>Return <literal>#t</literal> if WIN is shaded.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(window-shaded?  #&amp;optional win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return <literal>#t</literal> if <parameter>win</parameter> is shaded.
<parameter>win</parameter> defaults to the window context in the usual way if not
specified.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/window.c"><filename>scwm/window.c</filename></ulink>
  at line 2261 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="window-shaped-p">
  <refnamediv>
    <refname>window-shaped?</refname>
    <refpurpose>Return <literal>#t</literal> if WIN is a shaped window, <literal>#f</literal> otherwise.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(window-shaped?  #&amp;optional win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return <literal>#t</literal> if <parameter>win</parameter> is a shaped window, <literal>#f</literal> otherwise.
<parameter>win</parameter> defaults to the window context in the usual way if not specified.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/window.c"><filename>scwm/window.c</filename></ulink>
  at line 3872 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="window-size">
  <refnamediv>
    <refname>window-size</refname>
    <refpurpose>Return the size of the application window of WIN.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(window-size  #&amp;optional win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the size of the application window of <parameter>win</parameter>.
<parameter>win</parameter> defaults to the window context in the usual way if not specified.
The position is returned as a list of four numbers. The first two are
the width and the height in pixels, the third and fourth are the width
and height in resize units (e.g., characters for an xterm).  See
<link linkend="window-frame-size"><function>window-frame-size</function></link> if you want the size of the frame window.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/window.c"><filename>scwm/window.c</filename></ulink>
  at line 2682 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="window-size-hints">
  <refnamediv>
    <refname>window-size-hints</refname>
    <refpurpose>Return a list of the window size hints associated with WIN.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(window-size-hints win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return a list of the window size hints associated with <parameter>win</parameter>.
The list returned contains 4 cons pairs containing:
'((min-width . max-width) (min-height . max-height)
(width-inc . height-inc) (base-width . base-height))
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/window.c"><filename>scwm/window.c</filename></ulink>
  at line 2429 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="window-state-to-string">
  <refnamediv>
    <refname>window-state->string</refname>
    <refpurpose>Returns a string representation of the numerical WIN-STATE</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(window-state->string win-state)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Returns a string representation of the numerical WIN-STATE
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm stringops)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/stringops.scm"><filename>scheme/stringops.scm</filename></ulink>
  at line 45 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/stringops.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="window-style">
  <refnamediv>
    <refname>window-style</refname>
    <refpurpose>Specify various properties for windows matching CONDITION.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(window-style condition . args)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Specify various properties for windows matching CONDITION.
See the `Face Specification Flags' and `Window Style' sections
for details.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm style)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/style.scm"><filename>scheme/style.scm</filename></ulink>
  at line 41 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/style.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="window-title">
  <refnamediv>
    <refname>window-title</refname>
    <refpurpose>Return the window title of WIN, as requested by the application.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(window-title  #&amp;optional win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the window title of <parameter>win</parameter>, as requested by the application.
<parameter>win</parameter> defaults to the window context in the usual way if not specified.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/window.c"><filename>scwm/window.c</filename></ulink>
  at line 2837 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="window-title-height">
  <refnamediv>
    <refname>window-title-height</refname>
    <refpurpose>Return WIN's titlebar's height.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(window-title-height #&amp;optional (win (get-window)))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return WIN's titlebar's height.
See also <link linkend="window-title-size"><function>window-title-size</function></link>, <link linkend="window-title-width"><function>window-title-width</function></link>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm base)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/base.scm"><filename>scheme/base.scm</filename></ulink>
  at line 300 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/base.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="window-title-size">
  <refnamediv>
    <refname>window-title-size</refname>
    <refpurpose>Return a list with the width and height of WIN's titlebar.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(window-title-size  #&amp;optional win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return a list with the width and height of <parameter>win</parameter>'s titlebar.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/window.c"><filename>scwm/window.c</filename></ulink>
  at line 2713 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="window-title-width">
  <refnamediv>
    <refname>window-title-width</refname>
    <refpurpose>Return WIN's titlebar's width.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(window-title-width #&amp;optional (win (get-window)))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return WIN's titlebar's width.
See also <link linkend="window-title-size"><function>window-title-size</function></link>, <link linkend="window-title-height"><function>window-title-height</function></link>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm base)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/base.scm"><filename>scheme/base.scm</filename></ulink>
  at line 305 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/base.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="window-transient-for">
  <refnamediv>
    <refname>window-transient-for</refname>
    <refpurpose>Return the window for which WIN is transient.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(window-transient-for  #&amp;optional win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the window for which <parameter>win</parameter> is transient.
If <parameter>win</parameter> is transient, and the window it is transient for is
not the root window and is being managed by scwm, this returns the window
object of the window that <parameter>win</parameter> is transient for, otherwise return
<literal>#f</literal>. <parameter>win</parameter> defaults to the window context in the usual way if not
specified.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/window.c"><filename>scwm/window.c</filename></ulink>
  at line 1971 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="window-unshade">
  <refnamediv>
    <refname>window-unshade</refname>
    <refpurpose>Reverse the effect of <link linkend="window-shade"><function>window-shade</function></link> on WIN.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(window-unshade  #&amp;optional win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Reverse the effect of <link linkend="window-shade"><function>window-shade</function></link> on <parameter>win</parameter>.
The change takes place instantaneously. <parameter>win</parameter> defaults to the window
context in the usual way if not specified.
A shaded window has the "WM_STATE" hint set to WithdrawnState, since
the client application window is not visible.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/window.c"><filename>scwm/window.c</filename></ulink>
  at line 2226 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="window-unstyle">
  <refnamediv>
    <refname>window-unstyle</refname>
    <refpurpose>Remove STYLE definition from list of window styles.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(window-unstyle . style)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Remove STYLE definition from list of window styles.
STYLE must be given exactly the same way as on invocation of <link linkend="window-style"><function>window-style</function></link>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm style)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/style.scm"><filename>scheme/style.scm</filename></ulink>
  at line 50 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/style.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="window-valid-p">
  <refnamediv>
    <refname>window-valid?</refname>
    <refpurpose>Returns <literal>#t</literal> if OBJ is window object and is still valid, otherwise returns <literal>#f</literal>.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(window-valid? obj)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Returns <literal>#t</literal> if <parameter>obj</parameter> is window object and is still valid, otherwise returns <literal>#f</literal>.
A window is no longer valid when it is destroyed or closed.  An iconified
window that can be deiconified is still represented by a valid window object.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/window.c"><filename>scwm/window.c</filename></ulink>
  at line 851 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="window-viewport-position">
  <refnamediv>
    <refname>window-viewport-position</refname>
    <refpurpose>Return the position of WIN in pixels within the viewport.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(window-viewport-position #&amp;optional (win (get-window)))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the position of WIN in pixels within the viewport.
The position is returned as a list of the x coordinate and the y
coordinate in pixels. WIN defaults to the window context in the usual
way if not specified.  See also <link linkend="window-position"><function>window-position</function></link>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm base)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/base.scm"><filename>scheme/base.scm</filename></ulink>
  at line 310 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/base.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="window-virtual-position">
  <refnamediv>
    <refname>window-virtual-position</refname>
    <refpurpose>Return the virtual position of WIN in pixels.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(window-virtual-position #&amp;optional (win (get-window)))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the virtual position of WIN in pixels.
If WIN is sticky, this returns the position of the window in the
current viewport.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm base)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/base.scm"><filename>scheme/base.scm</filename></ulink>
  at line 319 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/base.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="window-p">
  <refnamediv>
    <refname>window?</refname>
    <refpurpose>Returns <literal>#t</literal> if OBJ is a window object, otherwise returns <literal>#f</literal>.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(window? obj)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Returns <literal>#t</literal> if <parameter>obj</parameter> is a window object, otherwise returns <literal>#f</literal>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/window.c"><filename>scwm/window.c</filename></ulink>
  at line 842 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/window.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="windows-overlap-p">
  <refnamediv>
    <refname>windows-overlap?</refname>
    <refpurpose>Return <literal>#t</literal> if WIN and WIN2 overlap at all, else <literal>#f</literal>.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(windows-overlap? win win2)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return <literal>#t</literal> if WIN and WIN2 overlap at all, else <literal>#f</literal>.
I.e., returns <literal>#t</literal> if the intersection of the windows' areas
is non-empty.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm wininfo)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/wininfo.scm"><filename>scheme/wininfo.scm</filename></ulink>
  at line 83 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/wininfo.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="winlist-hit">
  <refnamediv>
    <refname>winlist-hit</refname>
    <refpurpose>Permit WIN to be displayed in the window list by default.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(winlist-hit #&amp;optional (win (get-window)))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Permit WIN to be displayed in the window list by default.
This resets the 'winlist-skip property of WIN.  See also <link linkend="winlist-skip"><function>winlist-skip</function></link>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm winlist)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/winlist.scm"><filename>scheme/winlist.scm</filename></ulink>
  at line 98 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/winlist.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="winlist-skip">
  <refnamediv>
    <refname>winlist-skip</refname>
    <refpurpose>Do not show WIN in the window list by default.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(winlist-skip #&amp;optional (win (get-window)))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Do not show WIN in the window list by default.
This sets the 'winlist-skip property of WIN.  See also <link linkend="winlist-hit"><function>winlist-hit</function></link>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm winlist)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/winlist.scm"><filename>scheme/winlist.scm</filename></ulink>
  at line 103 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/winlist.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="winlist-skip-p">
  <refnamediv>
    <refname>winlist-skip?</refname>
    <refpurpose>Return <literal>#t</literal> if WIN is skipped in the window list, <literal>#f</literal> otherwise.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(winlist-skip? #&amp;optional (win (get-window)))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return <literal>#t</literal> if WIN is skipped in the window list, <literal>#f</literal> otherwise.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm winlist)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/winlist.scm"><filename>scheme/winlist.scm</filename></ulink>
  at line 108 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/winlist.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="with-frozen-root-window">
  <refnamediv>
    <refname>with-frozen-root-window</refname>
    <refpurpose>Execute THUNK with a frozen root window.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(with-frozen-root-window thunk)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Execute THUNK with a frozen root window.
Creates an image containing the root window, and displays that
image in a message window covering the entire screen.  Executes
THUNK, then removes the message window.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/message-window.scm"><filename>scheme/message-window.scm</filename></ulink>
  at line 291 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/message-window.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="write-all">
  <refnamediv>
    <refname>write-all</refname>
    <refpurpose>Write all arguments into the port.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(write-all port . lst)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Write all arguments into the port. <literal>#t</literal> means <link linkend="current-output-port"><function>current-output-port</function></link>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm stringops)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/stringops.scm"><filename>scheme/stringops.scm</filename></ulink>
  at line 68 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/stringops.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="x-">
  <refnamediv>
    <refname>x-</refname>
    <refpurpose>Return the viewport pixel coordinate X pixels left of the right display edge.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(x- x)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the viewport pixel coordinate X pixels left of the right display edge.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm base)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/base.scm"><filename>scheme/base.scm</filename></ulink>
  at line 151 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/base.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="X-atom-to-string">
  <refnamediv>
    <refname>X-atom->string</refname>
    <refpurpose>Returns the string represented by ATOM.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(X-atom->string atom)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Returns the string represented by <parameter>atom</parameter>.
Returns <literal>#f</literal>, if the X atom was not known.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/xproperty.c"><filename>scwm/xproperty.c</filename></ulink>
  at line 392 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/xproperty.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="X-atomic-property-set-if-unset-x">
  <refnamediv>
    <refname>X-atomic-property-set-if-unset!</refname>
    <refpurpose>Set property NAME on WINDOW to VALUE, if it's currently unset.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(X-atomic-property-set-if-unset! window name value #&amp;optional
						(type "STRING") (format 8))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Set property NAME on WINDOW to VALUE, if it's currently unset.
Returns <literal>#f</literal> if the property is already set, <literal>#t</literal> otherwise.
TYPE and FORMAT are as in X-property-set!
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm xprop-extras)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/xprop-extras.scm"><filename>scheme/xprop-extras.scm</filename></ulink>
  at line 50 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/xprop-extras.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="x-connection-number">
  <refnamediv>
    <refname>x-connection-number</refname>
    <refpurpose>Return the X connection file descriptor number.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(x-connection-number)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the X connection file descriptor number.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/miscprocs.c"><filename>scwm/miscprocs.c</filename></ulink>
  at line 693 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/miscprocs.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="X-cut-buffer-to-palm-clipboard">
  <refnamediv>
    <refname>X-cut-buffer->palm-clipboard</refname>
    <refpurpose>No documentation supplied.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(X-cut-buffer->palm-clipboard)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  No documentation supplied.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/flux.scm"><filename>scheme/flux.scm</filename></ulink>
  at line 394 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/flux.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="X-cut-buffer-string">
  <refnamediv>
    <refname>X-cut-buffer-string</refname>
    <refpurpose>Return the text of the CUT_BUFFER0 property of the root window.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(X-cut-buffer-string)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the text of the CUT_BUFFER0 property of the root window.
This is the cut text selected by X clients.  Returns <literal>#f</literal> if the
CUT_BUFFER0 property is not a string.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm xprop-extras)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/xprop-extras.scm"><filename>scheme/xprop-extras.scm</filename></ulink>
  at line 19 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/xprop-extras.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="X-display-information">
  <refnamediv>
    <refname>X-display-information</refname>
    <refpurpose>Return some information about the screen.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(X-display-information)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return some information about the screen. In particular,
return a list of the horizontal resolution, the vertical resolution,
the number of planes on the current screen (i.e. the bit depth), the
bits per color supported by the hardware, the visual class (one of
"StaticGray", "GrayScale", "StaticColor", "PseudoColor", "DirectColor"
or "TrueColor") and a boolean indicating whether the display is color.
The resolutions mentioned above should in theory be pixels per
centimeter, rounded to the nearest integer. These parameters can be
used for various workarounds or conditional decisions in a scwmrc to
be shared among multiple machines.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/miscprocs.c"><filename>scwm/miscprocs.c</filename></ulink>
  at line 534 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/miscprocs.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="X-grab-server">
  <refnamediv>
    <refname>X-grab-server</refname>
    <refpurpose>Grab the X server.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(X-grab-server)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Grab the X server.
This is very risky; you should almost definitely use
<link linkend="with-grabbed-server"><function>with-grabbed-server</function></link> instead.  This must be paired with
X-ungrab-server.  This primitive is undefined at startup
to make it hard to access directly. See also <link linkend="X-server-grabs"><function>X-server-grabs</function></link>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/Grab.c"><filename>scwm/Grab.c</filename></ulink>
  at line 70 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/Grab.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="X-pointer-mapping">
  <refnamediv>
    <refname>X-pointer-mapping</refname>
    <refpurpose>Return the mapping of physical->logical pointer buttons as a list.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(X-pointer-mapping)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the mapping of physical->logical pointer buttons as a list.
The length of the returned list is the number of buttons available.  Each
element in the list is an integer.  E.g., '(1 2 3) is a normally mapped
3-button mouse, whereas '(3 2 1) is a 3-button mouse where the rightmost
physical button acts as logical button 1, and the leftmost acts as button 3.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/binding.c"><filename>scwm/binding.c</filename></ulink>
  at line 1594 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/binding.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="X-properties">
  <refnamediv>
    <refname>X-properties</refname>
    <refpurpose>Returns a list of WIN's X property names.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(X-properties win)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Returns a list of <parameter>win</parameter>'s X property names.
<parameter>win</parameter> is the window to query, an X window id, or 'root-window.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/xproperty.c"><filename>scwm/xproperty.c</filename></ulink>
  at line 338 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/xproperty.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="X-properties-to-string">
  <refnamediv>
    <refname>X-properties->string</refname>
    <refpurpose>Prints the X properties of WIN into a string.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(X-properties->string #&amp;optional (win (get-window))
				      (recurse #t))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Prints the X properties of WIN into a string.
WIN is a window object, an X window id, or 'root-window.
If RECURSE is non-<literal>#f</literal>, also list properties of referenced windows.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/xprop-extras.scm"><filename>scheme/xprop-extras.scm</filename></ulink>
  at line 162 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/xprop-extras.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="X-property-delete-x">
  <refnamediv>
    <refname>X-property-delete!</refname>
    <refpurpose>Delete X property NAME of window WIN.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(X-property-delete! win name)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Delete X property <parameter>name</parameter> of window <parameter>win</parameter>.
<parameter>win</parameter> is the window to check, an X window id, or 'root-window.
<parameter>name</parameter> is a string. The return value is unspecified.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/xproperty.c"><filename>scwm/xproperty.c</filename></ulink>
  at line 315 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/xproperty.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="X-property-get">
  <refnamediv>
    <refname>X-property-get</refname>
    <refpurpose>Get X property NAME of window WIN.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(X-property-get win name #&amp;optional consume?)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Get X property <parameter>name</parameter> of window <parameter>win</parameter>.
<parameter>win</parameter> is the window to check, an X window id, or 'root-window.
<parameter>name</parameter> is a string or an X/11 atom (long).
If <parameter>consume?</parameter> is <literal>#t</literal>, the X property is deleted after getting it. Default is
not to delete.
If the X property could not be found, <literal>#f</literal> is returned.
If the X property could be found, a list "(value type format)" is returned.
"type" is a string.
"format" is either 8, 16, or 32, giving the size of the elements of "value".
"value" is a string, if "format" is 8, or a vector of integers otherwise.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/xproperty.c"><filename>scwm/xproperty.c</filename></ulink>
  at line 248 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/xproperty.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="X-property-set-x">
  <refnamediv>
    <refname>X-property-set!</refname>
    <refpurpose>Set X property NAME on window WIN to VALUE.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(X-property-set! win name value #&amp;optional type format action)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Set X property <parameter>name</parameter> on window <parameter>win</parameter> to <parameter>value</parameter>.
<parameter>win</parameter> is the window to set the X property on, an X window id, or 'root-window.
<parameter>name</parameter> and <parameter>type</parameter> are strings or X/11 atoms (longs). <parameter>type</parameter> defaults to "STRING".
<parameter>format</parameter> may be one of the integers 8, 16, and 32, defining the element size
of the <parameter>value</parameter>. It is 8 by default.
If <parameter>format</parameter> is 8, <parameter>value</parameter> may be a string or a list of null-terminated STRINGS.
Otherwise it will be a vector of <parameter>format</parameter>-bit integers.
<parameter>action</parameter> may be one of the symbols 'replace, 'prepend, or 'append signifying
how the new <parameter>value</parameter> should be merged (if at all) with the existing
value.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/xproperty.c"><filename>scwm/xproperty.c</filename></ulink>
  at line 103 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/xproperty.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="X-resource-database-save">
  <refnamediv>
    <refname>X-resource-database-save</refname>
    <refpurpose>Save the Scwm resource database to FILENAME.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(X-resource-database-save filename)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Save the Scwm resource database to <parameter>filename</parameter>.
Only the settings set or changed via <link linkend="X-resource-put"><function>X-resource-put</function></link> go into
the file.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/xrm.c"><filename>scwm/xrm.c</filename></ulink>
  at line 89 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/xrm.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="X-resource-get">
  <refnamediv>
    <refname>X-resource-get</refname>
    <refpurpose>Get X resource specified by NAME and XCLASS from Xrm database.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(X-resource-get name #&amp;optional xclass)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Get X resource specified by <parameter>name</parameter> and <parameter>xclass</parameter> from Xrm database.
Both <parameter>name</parameter> and <parameter>xclass</parameter> are strings, as is the returned value.  If
<parameter>xclass</parameter> is omitted, it defaults to the same string as <parameter>name</parameter>.
If there is no resource under the given key, <literal>#f</literal> is returned.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/xrm.c"><filename>scwm/xrm.c</filename></ulink>
  at line 60 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/xrm.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="X-resource-put">
  <refnamediv>
    <refname>X-resource-put</refname>
    <refpurpose>Stores string VALUE as X resource RESOURCE (also a string).</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(X-resource-put resource value)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Stores string <parameter>value</parameter> as X resource <parameter>resource</parameter> (also a string).
Later, the value can be retrieved using <link linkend="X-resource-get"><function>X-resource-get</function></link>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/xrm.c"><filename>scwm/xrm.c</filename></ulink>
  at line 41 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/xrm.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="X-rotate-cut-buffers">
  <refnamediv>
    <refname>X-rotate-cut-buffers</refname>
    <refpurpose>Rotate the X cut buffers by N positions.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(X-rotate-cut-buffers n)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Rotate the X cut buffers by <parameter>n</parameter> positions.
This means buffer 0 becomes buffer n, buffer 1 becomes n + 1 mod 8,
and so on.  This cut buffer numbering is global to the display.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/miscprocs.c"><filename>scwm/miscprocs.c</filename></ulink>
  at line 395 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/miscprocs.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="X-server-grabs">
  <refnamediv>
    <refname>X-server-grabs</refname>
    <refpurpose>Return the number of nested server grabs.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(X-server-grabs)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the number of nested server grabs.
Nonzero means the server is currently grabbed.
See also <link linkend="with-grabbed-server"><function>with-grabbed-server</function></link>, <link linkend="X-grab-server"><function>X-grab-server</function></link> and <link linkend="X-ungrab-server"><function>X-ungrab-server</function></link>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/Grab.c"><filename>scwm/Grab.c</filename></ulink>
  at line 99 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/Grab.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="X-set-cut-buffer-string-x">
  <refnamediv>
    <refname>X-set-cut-buffer-string!</refname>
    <refpurpose>Set the text of the CUT_BUFFER0 property of the root window.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(X-set-cut-buffer-string! string)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Set the text of the CUT_BUFFER0 property of the root window.
This is the cut text selected by X clients.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm xprop-extras)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/xprop-extras.scm"><filename>scheme/xprop-extras.scm</filename></ulink>
  at line 28 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/xprop-extras.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="X-synthetic-send-string">
  <refnamediv>
    <refname>X-synthetic-send-string</refname>
    <refpurpose>Send string STR to WIN via synthetic X events.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(X-synthetic-send-string str #&amp;optional (win (get-window)))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Send string STR to WIN via synthetic X events.
Note that some programs (e.g., xterm) by default do not
honour synthetic key events as they are a security hole.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/send-string.scm"><filename>scheme/send-string.scm</filename></ulink>
  at line 71 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/send-string.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="X-ungrab-server">
  <refnamediv>
    <refname>X-ungrab-server</refname>
    <refpurpose>Ungrab the X server.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(X-ungrab-server)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Ungrab the X server.
Using <link linkend="X-grab-server"><function>X-grab-server</function></link> and <link linkend="X-ungrab-server"><function>X-ungrab-server</function></link> directly is risky; you
should almost definitely use <link linkend="with-grabbed-server"><function>with-grabbed-server</function></link> instead. This
primitive is undefined at startup to make it hard to access directly.
See also <link linkend="X-server-grabs"><function>X-server-grabs</function></link>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/Grab.c"><filename>scwm/Grab.c</filename></ulink>
  at line 84 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/Grab.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="X-version-information">
  <refnamediv>
    <refname>X-version-information</refname>
    <refpurpose>Return some information about the version of the running X server.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(X-version-information)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return some information about the version of the running X server.
Return value is a list of the X protocol version, the X protocol
revision, the X server vendor, and the vendor release number.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Built-in Primitive</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scwm/miscprocs.c"><filename>scwm/miscprocs.c</filename></ulink>
  at line 514 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scwm/miscprocs.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="xlib-draw-arc-x">
  <refnamediv>
    <refname>xlib-draw-arc!</refname>
    <refpurpose>Draws a arc to the screen using the Xlib call XDrawArc.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(xlib-draw-arc! top-left width height angle1 angle2)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Draws a arc to the screen using the Xlib call XDrawArc.
The arc is specified in terms of a rectangle, in which it is wholly
enclosed.  <parameter>top-left</parameter> is a point pair for the upper left corner of the rectangle.  The
rectangle is of size <parameter>width</parameter> by <parameter>height</parameter>.  The arc is drawn from <parameter>angle1</parameter> to
<parameter>angle2</parameter>. Angles are specified in degrees (0.0 to 360.0).
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Primitive from (app scwm xlib-drawing)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/modules/xlib-drawing/drawing.c"><filename>modules/xlib-drawing/drawing.c</filename></ulink>
  at line 127 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/modules/xlib-drawing/drawing.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="xlib-draw-line-x">
  <refnamediv>
    <refname>xlib-draw-line!</refname>
    <refpurpose>Draws a line using the Xlib call XDrawLine.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(xlib-draw-line! p1 p2)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Draws a line using the Xlib call XDrawLine.
The line is drawn from <parameter>p1</parameter> to <parameter>p2</parameter>.
Both <parameter>p1</parameter> and <parameter>p2</parameter> are pairs (X . Y) representing a point
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Primitive from (app scwm xlib-drawing)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/modules/xlib-drawing/drawing.c"><filename>modules/xlib-drawing/drawing.c</filename></ulink>
  at line 109 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/modules/xlib-drawing/drawing.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="xlib-draw-rectangle-x">
  <refnamediv>
    <refname>xlib-draw-rectangle!</refname>
    <refpurpose>Draws a rectangle to the screen using the Xlib call XDrawRectangle.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(xlib-draw-rectangle! top-left width height)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Draws a rectangle to the screen using the Xlib call XDrawRectangle.
<parameter>top-left</parameter> is the upper left point of the rectangle.  The rectangle is of size
<parameter>width</parameter> by <parameter>height</parameter>.
<parameter>top-left</parameter> is a point pair: (X . Y).
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Primitive from (app scwm xlib-drawing)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/modules/xlib-drawing/drawing.c"><filename>modules/xlib-drawing/drawing.c</filename></ulink>
  at line 89 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/modules/xlib-drawing/drawing.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="xlib-set-drawing-mask-x">
  <refnamediv>
    <refname>xlib-set-drawing-mask!</refname>
    <refpurpose>Set the drawing mask used by the xlib-* primitives.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(xlib-set-drawing-mask! value)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Set the drawing mask used by the xlib-* primitives.
<parameter>value</parameter> is XORed with the background when dragging non-opaque move or
resize frames. <parameter>value</parameter> should be an integer.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Primitive from (app scwm xlib-drawing)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/modules/xlib-drawing/drawing.c"><filename>modules/xlib-drawing/drawing.c</filename></ulink>
  at line 62 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/modules/xlib-drawing/drawing.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="xlib-set-fill-style-x">
  <refnamediv>
    <refname>xlib-set-fill-style!</refname>
    <refpurpose>Sets the fill style of the DrawingGC to STYLE.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(xlib-set-fill-style! style)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Sets the fill style of the DrawingGC to <parameter>style</parameter>.
One of FillSolid (0), FillTiled (1), FillStippled (2), or FillOpaqueStippled (3)
should be given as <parameter>style</parameter>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Primitive from (app scwm xlib-drawing)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/modules/xlib-drawing/drawing.c"><filename>modules/xlib-drawing/drawing.c</filename></ulink>
  at line 167 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/modules/xlib-drawing/drawing.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="xlib-set-line-width-x">
  <refnamediv>
    <refname>xlib-set-line-width!</refname>
    <refpurpose>Sets the line width of the DrawingGC to WIDTH.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(xlib-set-line-width! width)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Sets the line width of the DrawingGC to <parameter>width</parameter>.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Primitive from (app scwm xlib-drawing)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/modules/xlib-drawing/drawing.c"><filename>modules/xlib-drawing/drawing.c</filename></ulink>
  at line 153 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/modules/xlib-drawing/drawing.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="xtest-fake-button-event">
  <refnamediv>
    <refname>xtest-fake-button-event</refname>
    <refpurpose>Fake an X event of button number BUTTON after a delay of MS-DELAY.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(xtest-fake-button-event button is-press? #&amp;optional ms-delay)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Fake an X event of button number <parameter>button</parameter> after a delay of <parameter>ms-delay</parameter>.
The event is a mouse press if <parameter>is-press?</parameter> is <literal>#t</literal>, or a release otherwise. If
<parameter>ms-delay</parameter> is ommitted or is not a number, no delay is used.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Primitive from (app scwm xtest)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/modules/xtest/scwmxtest.c"><filename>modules/xtest/scwmxtest.c</filename></ulink>
  at line 46 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/modules/xtest/scwmxtest.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="xtest-fake-key-event">
  <refnamediv>
    <refname>xtest-fake-key-event</refname>
    <refpurpose>Fake an X event of key KEYCODE after a delay of MS-DELAY.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(xtest-fake-key-event keycode is-press? #&amp;optional ms-delay)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Fake an X event of key <parameter>keycode</parameter> after a delay of <parameter>ms-delay</parameter>.
The event is a key press if <parameter>is-press?</parameter> is <literal>#t</literal>, or a release otherwise. If
<parameter>ms-delay</parameter> is ommitted or is not a number, no delay is used.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Primitive from (app scwm xtest)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/modules/xtest/scwmxtest.c"><filename>modules/xtest/scwmxtest.c</filename></ulink>
  at line 70 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/modules/xtest/scwmxtest.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="xtest-fake-modmask">
  <refnamediv>
    <refname>xtest-fake-modmask</refname>
    <refpurpose>No documentation supplied.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(xtest-fake-modmask mask delay press?)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  No documentation supplied.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm quote)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/quote.scm"><filename>scheme/quote.scm</filename></ulink>
  at line 73 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/quote.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="xtest-fake-modmask-button">
  <refnamediv>
    <refname>xtest-fake-modmask-button</refname>
    <refpurpose>No documentation supplied.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(xtest-fake-modmask-button mask button #&amp;optional (delay #f))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  No documentation supplied.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: </para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/quote.scm"><filename>scheme/quote.scm</filename></ulink>
  at line 87 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/quote.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="xtest-fake-modmask-key">
  <refnamediv>
    <refname>xtest-fake-modmask-key</refname>
    <refpurpose>No documentation supplied.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(xtest-fake-modmask-key mask keycode #&amp;optional (delay #f))</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  No documentation supplied.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm quote)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/quote.scm"><filename>scheme/quote.scm</filename></ulink>
  at line 79 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/quote.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="xtest-fake-motion-event">
  <refnamediv>
    <refname>xtest-fake-motion-event</refname>
    <refpurpose>Fake an X motion event to X,Y after a delay of MS-DELAY on SCREEN.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(xtest-fake-motion-event x y #&amp;optional screen ms-delay)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Fake an <parameter>x</parameter> motion event to <parameter>x</parameter>,<parameter>y</parameter> after a delay of <parameter>ms-delay</parameter> on <parameter>screen</parameter>.
If <parameter>screen</parameter> is ommitted, 0 is used.
If <parameter>ms-delay</parameter> is ommitted or is not a number, no delay is used.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Primitive from (app scwm xtest)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/modules/xtest/scwmxtest.c"><filename>modules/xtest/scwmxtest.c</filename></ulink>
  at line 94 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/modules/xtest/scwmxtest.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="xtest-fake-relative-motion-event">
  <refnamediv>
    <refname>xtest-fake-relative-motion-event</refname>
    <refpurpose>Fake an X motion relative event of a move DX, DY after a delay of MS-DELAY.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(xtest-fake-relative-motion-event dx dy #&amp;optional ms-delay)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Fake an X motion relative event of a move <parameter>dx</parameter>, <parameter>dy</parameter> after a delay of <parameter>ms-delay</parameter>.
If <parameter>ms-delay</parameter> is ommitted or is <literal>#f</literal> or 0, no delay is used.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Primitive from (app scwm xtest)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/modules/xtest/scwmxtest.c"><filename>modules/xtest/scwmxtest.c</filename></ulink>
  at line 120 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/modules/xtest/scwmxtest.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="xtest-supported-p">
  <refnamediv>
    <refname>xtest-supported?</refname>
    <refpurpose>Returns <literal>#t</literal> iff the XTest extension is supported on this server.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(xtest-supported?)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Returns <literal>#t</literal> iff the XTest extension is supported on this server.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: Primitive from (app scwm xtest)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/modules/xtest/scwmxtest.c"><filename>modules/xtest/scwmxtest.c</filename></ulink>
  at line 36 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/modules/xtest/scwmxtest.c">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

<refentry id="y-">
  <refnamediv>
    <refname>y-</refname>
    <refpurpose>Return the viewport pixel coordinate Y pixels up from the bottom display edge.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis>(y- y)</synopsis>
  </refsynopsisdiv>
  <refsect1>
  <title>Description</title>
  <para>
  Return the viewport pixel coordinate Y pixels up from the bottom display edge.
  </para>
  <refsect2>
  <title>Implementation Notes</title>
  <para> Module: (app scwm base)</para>
  <para> Defined in <ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/~checkout~/scheme/base.scm"><filename>scheme/base.scm</filename></ulink>
  at line 155 (<ulink url="http://scwm.mit.edu/cgi-bin/cvsweb.new/scheme/base.scm">CVS log</ulink>)</para> </refsect2>
  </refsect1>
</refentry>

  </chapter>
</book>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
fill-column: 10000
sgml-omittag:nil
sgml-shorttag:t
End:
-->
